/// This file was generated by C# converter tool
/// Any changes made to this file manually will be lost next time the file is regenerated.

using System.Linq;
using TypeScript.CSharp;

namespace Bailey
{
    /// <summary>
    /// Properties of an AppVersion.
    /// </summary>
    interface IAppVersion
    {
        /// <summary>
        /// AppVersion primary
        /// </summary>
        double? primary { get; set; }

        /// <summary>
        /// AppVersion secondary
        /// </summary>
        double? secondary { get; set; }

        /// <summary>
        /// AppVersion tertiary
        /// </summary>
        double? tertiary { get; set; }

        /// <summary>
        /// AppVersion quaternary
        /// </summary>
        double? quaternary { get; set; }

        /// <summary>
        /// AppVersion quinary
        /// </summary>
        double? quinary { get; set; }
    }

    /// <summary>
    /// Represents an AppVersion.
    /// </summary>
    class AppVersion : IAppVersion
    {
        /// <summary>
        /// Constructs a new AppVersion.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppVersion(proto.IAppVersion properties = null)
        {
        }

        /// <summary>
        /// AppVersion primary.
        /// </summary>
        public double primary { get; set; }
        /// <summary>
        /// AppVersion secondary.
        /// </summary>
        public double secondary { get; set; }
        /// <summary>
        /// AppVersion tertiary.
        /// </summary>
        public double tertiary { get; set; }
        /// <summary>
        /// AppVersion quaternary.
        /// </summary>
        public double quaternary { get; set; }
        /// <summary>
        /// AppVersion quinary.
        /// </summary>
        public double quinary { get; set; }

        /// <summary>
        /// Creates a new AppVersion instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppVersion instance
        /// </returns>
        public static proto.AppVersion create(proto.IAppVersion properties = null);
        /// <summary>
        /// Encodes the specified AppVersion message. Does not implicitly {@link proto.AppVersion.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppVersion message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppVersion message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppVersion message, length delimited. Does not implicitly {@link proto.AppVersion.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppVersion message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppVersion message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppVersion message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppVersion
        /// </returns>
        public static proto.AppVersion decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppVersion message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppVersion
        /// </returns>
        public static proto.AppVersion decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppVersion message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppVersion message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppVersion
        /// </returns>
        public static proto.AppVersion fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppVersion message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppVersion
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppVersion message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppVersion to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a UserAgent.
    /// </summary>
    interface IUserAgent
    {
        /// <summary>
        /// UserAgent platform
        /// </summary>
        proto.UserAgent.UserAgentPlatform platform { get; set; }

        /// <summary>
        /// UserAgent appVersion
        /// </summary>
        proto.IAppVersion appVersion { get; set; }

        /// <summary>
        /// UserAgent mcc
        /// </summary>
        string mcc { get; set; }

        /// <summary>
        /// UserAgent mnc
        /// </summary>
        string mnc { get; set; }

        /// <summary>
        /// UserAgent osVersion
        /// </summary>
        string osVersion { get; set; }

        /// <summary>
        /// UserAgent manufacturer
        /// </summary>
        string manufacturer { get; set; }

        /// <summary>
        /// UserAgent device
        /// </summary>
        string device { get; set; }

        /// <summary>
        /// UserAgent osBuildNumber
        /// </summary>
        string osBuildNumber { get; set; }

        /// <summary>
        /// UserAgent phoneId
        /// </summary>
        string phoneId { get; set; }

        /// <summary>
        /// UserAgent releaseChannel
        /// </summary>
        proto.UserAgent.UserAgentReleaseChannel releaseChannel { get; set; }

        /// <summary>
        /// UserAgent localeLanguageIso6391
        /// </summary>
        string localeLanguageIso6391 { get; set; }

        /// <summary>
        /// UserAgent localeCountryIso31661Alpha2
        /// </summary>
        string localeCountryIso31661Alpha2 { get; set; }

        /// <summary>
        /// UserAgent deviceBoard
        /// </summary>
        string deviceBoard { get; set; }
    }

    /// <summary>
    /// Represents a UserAgent.
    /// </summary>
    class UserAgent : IUserAgent
    {
        /// <summary>
        /// Constructs a new UserAgent.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public UserAgent(proto.IUserAgent properties = null)
        {
        }

        /// <summary>
        /// UserAgent platform.
        /// </summary>
        public proto.UserAgent.UserAgentPlatform platform { get; set; }
        /// <summary>
        /// UserAgent appVersion.
        /// </summary>
        public proto.IAppVersion appVersion { get; set; }
        /// <summary>
        /// UserAgent mcc.
        /// </summary>
        public string mcc { get; set; }
        /// <summary>
        /// UserAgent mnc.
        /// </summary>
        public string mnc { get; set; }
        /// <summary>
        /// UserAgent osVersion.
        /// </summary>
        public string osVersion { get; set; }
        /// <summary>
        /// UserAgent manufacturer.
        /// </summary>
        public string manufacturer { get; set; }
        /// <summary>
        /// UserAgent device.
        /// </summary>
        public string device { get; set; }
        /// <summary>
        /// UserAgent osBuildNumber.
        /// </summary>
        public string osBuildNumber { get; set; }
        /// <summary>
        /// UserAgent phoneId.
        /// </summary>
        public string phoneId { get; set; }
        /// <summary>
        /// UserAgent releaseChannel.
        /// </summary>
        public proto.UserAgent.UserAgentReleaseChannel releaseChannel { get; set; }
        /// <summary>
        /// UserAgent localeLanguageIso6391.
        /// </summary>
        public string localeLanguageIso6391 { get; set; }
        /// <summary>
        /// UserAgent localeCountryIso31661Alpha2.
        /// </summary>
        public string localeCountryIso31661Alpha2 { get; set; }
        /// <summary>
        /// UserAgent deviceBoard.
        /// </summary>
        public string deviceBoard { get; set; }

        /// <summary>
        /// Creates a new UserAgent instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// UserAgent instance
        /// </returns>
        public static proto.UserAgent create(proto.IUserAgent properties = null);
        /// <summary>
        /// Encodes the specified UserAgent message. Does not implicitly {@link proto.UserAgent.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// UserAgent message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IUserAgent message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified UserAgent message, length delimited. Does not implicitly {@link proto.UserAgent.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// UserAgent message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IUserAgent message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a UserAgent message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// UserAgent
        /// </returns>
        public static proto.UserAgent decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a UserAgent message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// UserAgent
        /// </returns>
        public static proto.UserAgent decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a UserAgent message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a UserAgent message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// UserAgent
        /// </returns>
        public static proto.UserAgent fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a UserAgent message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// UserAgent
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.UserAgent message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this UserAgent to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a WebdPayload.
    /// </summary>
    interface IWebdPayload
    {
        /// <summary>
        /// WebdPayload usesParticipantInKey
        /// </summary>
        bool? usesParticipantInKey { get; set; }

        /// <summary>
        /// WebdPayload supportsStarredMessages
        /// </summary>
        bool? supportsStarredMessages { get; set; }

        /// <summary>
        /// WebdPayload supportsDocumentMessages
        /// </summary>
        bool? supportsDocumentMessages { get; set; }

        /// <summary>
        /// WebdPayload supportsUrlMessages
        /// </summary>
        bool? supportsUrlMessages { get; set; }

        /// <summary>
        /// WebdPayload supportsMediaRetry
        /// </summary>
        bool? supportsMediaRetry { get; set; }

        /// <summary>
        /// WebdPayload supportsE2EImage
        /// </summary>
        bool? supportsE2EImage { get; set; }

        /// <summary>
        /// WebdPayload supportsE2EVideo
        /// </summary>
        bool? supportsE2EVideo { get; set; }

        /// <summary>
        /// WebdPayload supportsE2EAudio
        /// </summary>
        bool? supportsE2EAudio { get; set; }

        /// <summary>
        /// WebdPayload supportsE2EDocument
        /// </summary>
        bool? supportsE2EDocument { get; set; }

        /// <summary>
        /// WebdPayload documentTypes
        /// </summary>
        string documentTypes { get; set; }

        /// <summary>
        /// WebdPayload features
        /// </summary>
        Uint8Array features { get; set; }
    }

    /// <summary>
    /// Represents a WebdPayload.
    /// </summary>
    class WebdPayload : IWebdPayload
    {
        /// <summary>
        /// Constructs a new WebdPayload.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public WebdPayload(proto.IWebdPayload properties = null)
        {
        }

        /// <summary>
        /// WebdPayload usesParticipantInKey.
        /// </summary>
        public bool usesParticipantInKey { get; set; }
        /// <summary>
        /// WebdPayload supportsStarredMessages.
        /// </summary>
        public bool supportsStarredMessages { get; set; }
        /// <summary>
        /// WebdPayload supportsDocumentMessages.
        /// </summary>
        public bool supportsDocumentMessages { get; set; }
        /// <summary>
        /// WebdPayload supportsUrlMessages.
        /// </summary>
        public bool supportsUrlMessages { get; set; }
        /// <summary>
        /// WebdPayload supportsMediaRetry.
        /// </summary>
        public bool supportsMediaRetry { get; set; }
        /// <summary>
        /// WebdPayload supportsE2EImage.
        /// </summary>
        public bool supportsE2EImage { get; set; }
        /// <summary>
        /// WebdPayload supportsE2EVideo.
        /// </summary>
        public bool supportsE2EVideo { get; set; }
        /// <summary>
        /// WebdPayload supportsE2EAudio.
        /// </summary>
        public bool supportsE2EAudio { get; set; }
        /// <summary>
        /// WebdPayload supportsE2EDocument.
        /// </summary>
        public bool supportsE2EDocument { get; set; }
        /// <summary>
        /// WebdPayload documentTypes.
        /// </summary>
        public string documentTypes { get; set; }
        /// <summary>
        /// WebdPayload features.
        /// </summary>
        public Uint8Array features { get; set; }

        /// <summary>
        /// Creates a new WebdPayload instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// WebdPayload instance
        /// </returns>
        public static proto.WebdPayload create(proto.IWebdPayload properties = null);
        /// <summary>
        /// Encodes the specified WebdPayload message. Does not implicitly {@link proto.WebdPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebdPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IWebdPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified WebdPayload message, length delimited. Does not implicitly {@link proto.WebdPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebdPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IWebdPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a WebdPayload message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// WebdPayload
        /// </returns>
        public static proto.WebdPayload decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a WebdPayload message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// WebdPayload
        /// </returns>
        public static proto.WebdPayload decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a WebdPayload message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a WebdPayload message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// WebdPayload
        /// </returns>
        public static proto.WebdPayload fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a WebdPayload message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// WebdPayload
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.WebdPayload message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this WebdPayload to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a WebInfo.
    /// </summary>
    interface IWebInfo
    {
        /// <summary>
        /// WebInfo refToken
        /// </summary>
        string refToken { get; set; }

        /// <summary>
        /// WebInfo version
        /// </summary>
        string version { get; set; }

        /// <summary>
        /// WebInfo webdPayload
        /// </summary>
        proto.IWebdPayload webdPayload { get; set; }

        /// <summary>
        /// WebInfo webSubPlatform
        /// </summary>
        proto.WebInfo.WebInfoWebSubPlatform webSubPlatform { get; set; }
    }

    /// <summary>
    /// Represents a WebInfo.
    /// </summary>
    class WebInfo : IWebInfo
    {
        /// <summary>
        /// Constructs a new WebInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public WebInfo(proto.IWebInfo properties = null)
        {
        }

        /// <summary>
        /// WebInfo refToken.
        /// </summary>
        public string refToken { get; set; }
        /// <summary>
        /// WebInfo version.
        /// </summary>
        public string version { get; set; }
        /// <summary>
        /// WebInfo webdPayload.
        /// </summary>
        public proto.IWebdPayload webdPayload { get; set; }
        /// <summary>
        /// WebInfo webSubPlatform.
        /// </summary>
        public proto.WebInfo.WebInfoWebSubPlatform webSubPlatform { get; set; }

        /// <summary>
        /// Creates a new WebInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// WebInfo instance
        /// </returns>
        public static proto.WebInfo create(proto.IWebInfo properties = null);
        /// <summary>
        /// Encodes the specified WebInfo message. Does not implicitly {@link proto.WebInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IWebInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified WebInfo message, length delimited. Does not implicitly {@link proto.WebInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IWebInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a WebInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// WebInfo
        /// </returns>
        public static proto.WebInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a WebInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// WebInfo
        /// </returns>
        public static proto.WebInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a WebInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a WebInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// WebInfo
        /// </returns>
        public static proto.WebInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a WebInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// WebInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.WebInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this WebInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DNSSource.
    /// </summary>
    interface IDNSSource
    {
        /// <summary>
        /// DNSSource dnsMethod
        /// </summary>
        proto.DNSSource.DNSSourceDNSResolutionMethod dnsMethod { get; set; }

        /// <summary>
        /// DNSSource appCached
        /// </summary>
        bool? appCached { get; set; }
    }

    /// <summary>
    /// Represents a DNSSource.
    /// </summary>
    class DNSSource : IDNSSource
    {
        /// <summary>
        /// Constructs a new DNSSource.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DNSSource(proto.IDNSSource properties = null)
        {
        }

        /// <summary>
        /// DNSSource dnsMethod.
        /// </summary>
        public proto.DNSSource.DNSSourceDNSResolutionMethod dnsMethod { get; set; }
        /// <summary>
        /// DNSSource appCached.
        /// </summary>
        public bool appCached { get; set; }

        /// <summary>
        /// Creates a new DNSSource instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DNSSource instance
        /// </returns>
        public static proto.DNSSource create(proto.IDNSSource properties = null);
        /// <summary>
        /// Encodes the specified DNSSource message. Does not implicitly {@link proto.DNSSource.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DNSSource message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDNSSource message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DNSSource message, length delimited. Does not implicitly {@link proto.DNSSource.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DNSSource message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDNSSource message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DNSSource message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DNSSource
        /// </returns>
        public static proto.DNSSource decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DNSSource message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DNSSource
        /// </returns>
        public static proto.DNSSource decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DNSSource message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DNSSource message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DNSSource
        /// </returns>
        public static proto.DNSSource fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DNSSource message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DNSSource
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DNSSource message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DNSSource to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a CompanionRegData.
    /// </summary>
    interface ICompanionRegData
    {
        /// <summary>
        /// CompanionRegData eRegid
        /// </summary>
        Uint8Array eRegid { get; set; }

        /// <summary>
        /// CompanionRegData eKeytype
        /// </summary>
        Uint8Array eKeytype { get; set; }

        /// <summary>
        /// CompanionRegData eIdent
        /// </summary>
        Uint8Array eIdent { get; set; }

        /// <summary>
        /// CompanionRegData eSkeyId
        /// </summary>
        Uint8Array eSkeyId { get; set; }

        /// <summary>
        /// CompanionRegData eSkeyVal
        /// </summary>
        Uint8Array eSkeyVal { get; set; }

        /// <summary>
        /// CompanionRegData eSkeySig
        /// </summary>
        Uint8Array eSkeySig { get; set; }

        /// <summary>
        /// CompanionRegData buildHash
        /// </summary>
        Uint8Array buildHash { get; set; }

        /// <summary>
        /// CompanionRegData companionProps
        /// </summary>
        Uint8Array companionProps { get; set; }
    }

    /// <summary>
    /// Represents a CompanionRegData.
    /// </summary>
    class CompanionRegData : ICompanionRegData
    {
        /// <summary>
        /// Constructs a new CompanionRegData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public CompanionRegData(proto.ICompanionRegData properties = null)
        {
        }

        /// <summary>
        /// CompanionRegData eRegid.
        /// </summary>
        public Uint8Array eRegid { get; set; }
        /// <summary>
        /// CompanionRegData eKeytype.
        /// </summary>
        public Uint8Array eKeytype { get; set; }
        /// <summary>
        /// CompanionRegData eIdent.
        /// </summary>
        public Uint8Array eIdent { get; set; }
        /// <summary>
        /// CompanionRegData eSkeyId.
        /// </summary>
        public Uint8Array eSkeyId { get; set; }
        /// <summary>
        /// CompanionRegData eSkeyVal.
        /// </summary>
        public Uint8Array eSkeyVal { get; set; }
        /// <summary>
        /// CompanionRegData eSkeySig.
        /// </summary>
        public Uint8Array eSkeySig { get; set; }
        /// <summary>
        /// CompanionRegData buildHash.
        /// </summary>
        public Uint8Array buildHash { get; set; }
        /// <summary>
        /// CompanionRegData companionProps.
        /// </summary>
        public Uint8Array companionProps { get; set; }

        /// <summary>
        /// Creates a new CompanionRegData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// CompanionRegData instance
        /// </returns>
        public static proto.CompanionRegData create(proto.ICompanionRegData properties = null);
        /// <summary>
        /// Encodes the specified CompanionRegData message. Does not implicitly {@link proto.CompanionRegData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CompanionRegData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICompanionRegData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified CompanionRegData message, length delimited. Does not implicitly {@link proto.CompanionRegData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CompanionRegData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICompanionRegData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a CompanionRegData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// CompanionRegData
        /// </returns>
        public static proto.CompanionRegData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a CompanionRegData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// CompanionRegData
        /// </returns>
        public static proto.CompanionRegData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a CompanionRegData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a CompanionRegData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// CompanionRegData
        /// </returns>
        public static proto.CompanionRegData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a CompanionRegData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// CompanionRegData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.CompanionRegData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this CompanionRegData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ClientPayload.
    /// </summary>
    interface IClientPayload
    {
        /// <summary>
        /// ClientPayload username
        /// </summary>
        Nullable<OrType<double, Long>> username { get; set; }

        /// <summary>
        /// ClientPayload passive
        /// </summary>
        bool? passive { get; set; }

        /// <summary>
        /// ClientPayload clientFeatures
        /// </summary>
        List<proto.ClientPayload.ClientPayloadClientFeature> clientFeatures { get; set; }

        /// <summary>
        /// ClientPayload userAgent
        /// </summary>
        proto.IUserAgent userAgent { get; set; }

        /// <summary>
        /// ClientPayload webInfo
        /// </summary>
        proto.IWebInfo webInfo { get; set; }

        /// <summary>
        /// ClientPayload pushName
        /// </summary>
        string pushName { get; set; }

        /// <summary>
        /// ClientPayload sessionId
        /// </summary>
        double? sessionId { get; set; }

        /// <summary>
        /// ClientPayload shortConnect
        /// </summary>
        bool? shortConnect { get; set; }

        /// <summary>
        /// ClientPayload iosAppExtension
        /// </summary>
        proto.ClientPayload.ClientPayloadIOSAppExtension iosAppExtension { get; set; }

        /// <summary>
        /// ClientPayload connectType
        /// </summary>
        proto.ClientPayload.ClientPayloadConnectType connectType { get; set; }

        /// <summary>
        /// ClientPayload connectReason
        /// </summary>
        proto.ClientPayload.ClientPayloadConnectReason connectReason { get; set; }

        /// <summary>
        /// ClientPayload shards
        /// </summary>
        List<double> shards { get; set; }

        /// <summary>
        /// ClientPayload dnsSource
        /// </summary>
        proto.IDNSSource dnsSource { get; set; }

        /// <summary>
        /// ClientPayload connectAttemptCount
        /// </summary>
        double? connectAttemptCount { get; set; }

        /// <summary>
        /// ClientPayload agent
        /// </summary>
        double? agent { get; set; }

        /// <summary>
        /// ClientPayload device
        /// </summary>
        double? device { get; set; }

        /// <summary>
        /// ClientPayload regData
        /// </summary>
        proto.ICompanionRegData regData { get; set; }

        /// <summary>
        /// ClientPayload product
        /// </summary>
        proto.ClientPayload.ClientPayloadProduct product { get; set; }

        /// <summary>
        /// ClientPayload fbCat
        /// </summary>
        Uint8Array fbCat { get; set; }

        /// <summary>
        /// ClientPayload fbUserAgent
        /// </summary>
        Uint8Array fbUserAgent { get; set; }

        /// <summary>
        /// ClientPayload oc
        /// </summary>
        bool? oc { get; set; }
    }

    /// <summary>
    /// Represents a ClientPayload.
    /// </summary>
    class ClientPayload : IClientPayload
    {
        /// <summary>
        /// Constructs a new ClientPayload.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ClientPayload(proto.IClientPayload properties = null)
        {
        }

        /// <summary>
        /// ClientPayload username.
        /// </summary>
        public OrType<double, Long> username { get; set; }
        /// <summary>
        /// ClientPayload passive.
        /// </summary>
        public bool passive { get; set; }
        /// <summary>
        /// ClientPayload clientFeatures.
        /// </summary>
        public List<proto.ClientPayload.ClientPayloadClientFeature> clientFeatures { get; set; }
        /// <summary>
        /// ClientPayload userAgent.
        /// </summary>
        public proto.IUserAgent userAgent { get; set; }
        /// <summary>
        /// ClientPayload webInfo.
        /// </summary>
        public proto.IWebInfo webInfo { get; set; }
        /// <summary>
        /// ClientPayload pushName.
        /// </summary>
        public string pushName { get; set; }
        /// <summary>
        /// ClientPayload sessionId.
        /// </summary>
        public double sessionId { get; set; }
        /// <summary>
        /// ClientPayload shortConnect.
        /// </summary>
        public bool shortConnect { get; set; }
        /// <summary>
        /// ClientPayload iosAppExtension.
        /// </summary>
        public proto.ClientPayload.ClientPayloadIOSAppExtension iosAppExtension { get; set; }
        /// <summary>
        /// ClientPayload connectType.
        /// </summary>
        public proto.ClientPayload.ClientPayloadConnectType connectType { get; set; }
        /// <summary>
        /// ClientPayload connectReason.
        /// </summary>
        public proto.ClientPayload.ClientPayloadConnectReason connectReason { get; set; }
        /// <summary>
        /// ClientPayload shards.
        /// </summary>
        public List<double> shards { get; set; }
        /// <summary>
        /// ClientPayload dnsSource.
        /// </summary>
        public proto.IDNSSource dnsSource { get; set; }
        /// <summary>
        /// ClientPayload connectAttemptCount.
        /// </summary>
        public double connectAttemptCount { get; set; }
        /// <summary>
        /// ClientPayload agent.
        /// </summary>
        public double agent { get; set; }
        /// <summary>
        /// ClientPayload device.
        /// </summary>
        public double device { get; set; }
        /// <summary>
        /// ClientPayload regData.
        /// </summary>
        public proto.ICompanionRegData regData { get; set; }
        /// <summary>
        /// ClientPayload product.
        /// </summary>
        public proto.ClientPayload.ClientPayloadProduct product { get; set; }
        /// <summary>
        /// ClientPayload fbCat.
        /// </summary>
        public Uint8Array fbCat { get; set; }
        /// <summary>
        /// ClientPayload fbUserAgent.
        /// </summary>
        public Uint8Array fbUserAgent { get; set; }
        /// <summary>
        /// ClientPayload oc.
        /// </summary>
        public bool oc { get; set; }

        /// <summary>
        /// Creates a new ClientPayload instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ClientPayload instance
        /// </returns>
        public static proto.ClientPayload create(proto.IClientPayload properties = null);
        /// <summary>
        /// Encodes the specified ClientPayload message. Does not implicitly {@link proto.ClientPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IClientPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ClientPayload message, length delimited. Does not implicitly {@link proto.ClientPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IClientPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ClientPayload message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ClientPayload
        /// </returns>
        public static proto.ClientPayload decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ClientPayload message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ClientPayload
        /// </returns>
        public static proto.ClientPayload decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ClientPayload message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ClientPayload message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ClientPayload
        /// </returns>
        public static proto.ClientPayload fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ClientPayload message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ClientPayload
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ClientPayload message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ClientPayload to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a NoiseCertificate.
    /// </summary>
    interface INoiseCertificate
    {
        /// <summary>
        /// NoiseCertificate details
        /// </summary>
        Uint8Array details { get; set; }

        /// <summary>
        /// NoiseCertificate signature
        /// </summary>
        Uint8Array signature { get; set; }
    }

    /// <summary>
    /// Represents a NoiseCertificate.
    /// </summary>
    class NoiseCertificate : INoiseCertificate
    {
        /// <summary>
        /// Constructs a new NoiseCertificate.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public NoiseCertificate(proto.INoiseCertificate properties = null)
        {
        }

        /// <summary>
        /// NoiseCertificate details.
        /// </summary>
        public Uint8Array details { get; set; }
        /// <summary>
        /// NoiseCertificate signature.
        /// </summary>
        public Uint8Array signature { get; set; }

        /// <summary>
        /// Creates a new NoiseCertificate instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// NoiseCertificate instance
        /// </returns>
        public static proto.NoiseCertificate create(proto.INoiseCertificate properties = null);
        /// <summary>
        /// Encodes the specified NoiseCertificate message. Does not implicitly {@link proto.NoiseCertificate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NoiseCertificate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.INoiseCertificate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified NoiseCertificate message, length delimited. Does not implicitly {@link proto.NoiseCertificate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NoiseCertificate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.INoiseCertificate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a NoiseCertificate message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// NoiseCertificate
        /// </returns>
        public static proto.NoiseCertificate decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a NoiseCertificate message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// NoiseCertificate
        /// </returns>
        public static proto.NoiseCertificate decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a NoiseCertificate message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a NoiseCertificate message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// NoiseCertificate
        /// </returns>
        public static proto.NoiseCertificate fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a NoiseCertificate message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// NoiseCertificate
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.NoiseCertificate message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this NoiseCertificate to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ClientHello.
    /// </summary>
    interface IClientHello
    {
        /// <summary>
        /// ClientHello ephemeral
        /// </summary>
        Uint8Array ephemeral { get; set; }

        /// <summary>
        /// ClientHello static
        /// </summary>
        Uint8Array @static { get; set; }

        /// <summary>
        /// ClientHello payload
        /// </summary>
        Uint8Array payload { get; set; }
    }

    /// <summary>
    /// Represents a ClientHello.
    /// </summary>
    class ClientHello : IClientHello
    {
        /// <summary>
        /// Constructs a new ClientHello.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ClientHello(proto.IClientHello properties = null)
        {
        }

        /// <summary>
        /// ClientHello ephemeral.
        /// </summary>
        public Uint8Array ephemeral { get; set; }
        /// <summary>
        /// ClientHello static.
        /// </summary>
        public Uint8Array @static { get; set; }
        /// <summary>
        /// ClientHello payload.
        /// </summary>
        public Uint8Array payload { get; set; }

        /// <summary>
        /// Creates a new ClientHello instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ClientHello instance
        /// </returns>
        public static proto.ClientHello create(proto.IClientHello properties = null);
        /// <summary>
        /// Encodes the specified ClientHello message. Does not implicitly {@link proto.ClientHello.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientHello message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IClientHello message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ClientHello message, length delimited. Does not implicitly {@link proto.ClientHello.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientHello message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IClientHello message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ClientHello message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ClientHello
        /// </returns>
        public static proto.ClientHello decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ClientHello message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ClientHello
        /// </returns>
        public static proto.ClientHello decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ClientHello message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ClientHello message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ClientHello
        /// </returns>
        public static proto.ClientHello fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ClientHello message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ClientHello
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ClientHello message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ClientHello to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ServerHello.
    /// </summary>
    interface IServerHello
    {
        /// <summary>
        /// ServerHello ephemeral
        /// </summary>
        Uint8Array ephemeral { get; set; }

        /// <summary>
        /// ServerHello static
        /// </summary>
        Uint8Array @static { get; set; }

        /// <summary>
        /// ServerHello payload
        /// </summary>
        Uint8Array payload { get; set; }
    }

    /// <summary>
    /// Represents a ServerHello.
    /// </summary>
    class ServerHello : IServerHello
    {
        /// <summary>
        /// Constructs a new ServerHello.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ServerHello(proto.IServerHello properties = null)
        {
        }

        /// <summary>
        /// ServerHello ephemeral.
        /// </summary>
        public Uint8Array ephemeral { get; set; }
        /// <summary>
        /// ServerHello static.
        /// </summary>
        public Uint8Array @static { get; set; }
        /// <summary>
        /// ServerHello payload.
        /// </summary>
        public Uint8Array payload { get; set; }

        /// <summary>
        /// Creates a new ServerHello instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ServerHello instance
        /// </returns>
        public static proto.ServerHello create(proto.IServerHello properties = null);
        /// <summary>
        /// Encodes the specified ServerHello message. Does not implicitly {@link proto.ServerHello.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ServerHello message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IServerHello message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ServerHello message, length delimited. Does not implicitly {@link proto.ServerHello.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ServerHello message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IServerHello message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ServerHello message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ServerHello
        /// </returns>
        public static proto.ServerHello decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ServerHello message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ServerHello
        /// </returns>
        public static proto.ServerHello decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ServerHello message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ServerHello message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ServerHello
        /// </returns>
        public static proto.ServerHello fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ServerHello message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ServerHello
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ServerHello message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ServerHello to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ClientFinish.
    /// </summary>
    interface IClientFinish
    {
        /// <summary>
        /// ClientFinish static
        /// </summary>
        Uint8Array @static { get; set; }

        /// <summary>
        /// ClientFinish payload
        /// </summary>
        Uint8Array payload { get; set; }
    }

    /// <summary>
    /// Represents a ClientFinish.
    /// </summary>
    class ClientFinish : IClientFinish
    {
        /// <summary>
        /// Constructs a new ClientFinish.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ClientFinish(proto.IClientFinish properties = null)
        {
        }

        /// <summary>
        /// ClientFinish static.
        /// </summary>
        public Uint8Array @static { get; set; }
        /// <summary>
        /// ClientFinish payload.
        /// </summary>
        public Uint8Array payload { get; set; }

        /// <summary>
        /// Creates a new ClientFinish instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ClientFinish instance
        /// </returns>
        public static proto.ClientFinish create(proto.IClientFinish properties = null);
        /// <summary>
        /// Encodes the specified ClientFinish message. Does not implicitly {@link proto.ClientFinish.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientFinish message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IClientFinish message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ClientFinish message, length delimited. Does not implicitly {@link proto.ClientFinish.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClientFinish message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IClientFinish message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ClientFinish message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ClientFinish
        /// </returns>
        public static proto.ClientFinish decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ClientFinish message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ClientFinish
        /// </returns>
        public static proto.ClientFinish decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ClientFinish message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ClientFinish message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ClientFinish
        /// </returns>
        public static proto.ClientFinish fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ClientFinish message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ClientFinish
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ClientFinish message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ClientFinish to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HandshakeMessage.
    /// </summary>
    interface IHandshakeMessage
    {
        /// <summary>
        /// HandshakeMessage clientHello
        /// </summary>
        proto.IClientHello clientHello { get; set; }

        /// <summary>
        /// HandshakeMessage serverHello
        /// </summary>
        proto.IServerHello serverHello { get; set; }

        /// <summary>
        /// HandshakeMessage clientFinish
        /// </summary>
        proto.IClientFinish clientFinish { get; set; }
    }

    /// <summary>
    /// Represents a HandshakeMessage.
    /// </summary>
    class HandshakeMessage : IHandshakeMessage
    {
        /// <summary>
        /// Constructs a new HandshakeMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HandshakeMessage(proto.IHandshakeMessage properties = null)
        {
        }

        /// <summary>
        /// HandshakeMessage clientHello.
        /// </summary>
        public proto.IClientHello clientHello { get; set; }
        /// <summary>
        /// HandshakeMessage serverHello.
        /// </summary>
        public proto.IServerHello serverHello { get; set; }
        /// <summary>
        /// HandshakeMessage clientFinish.
        /// </summary>
        public proto.IClientFinish clientFinish { get; set; }

        /// <summary>
        /// Creates a new HandshakeMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HandshakeMessage instance
        /// </returns>
        public static proto.HandshakeMessage create(proto.IHandshakeMessage properties = null);
        /// <summary>
        /// Encodes the specified HandshakeMessage message. Does not implicitly {@link proto.HandshakeMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HandshakeMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHandshakeMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HandshakeMessage message, length delimited. Does not implicitly {@link proto.HandshakeMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HandshakeMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHandshakeMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HandshakeMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HandshakeMessage
        /// </returns>
        public static proto.HandshakeMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HandshakeMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HandshakeMessage
        /// </returns>
        public static proto.HandshakeMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HandshakeMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HandshakeMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HandshakeMessage
        /// </returns>
        public static proto.HandshakeMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HandshakeMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HandshakeMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HandshakeMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HandshakeMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a BizIdentityInfo.
    /// </summary>
    interface IBizIdentityInfo
    {
        /// <summary>
        /// BizIdentityInfo vlevel
        /// </summary>
        proto.BizIdentityInfo.BizIdentityInfoVerifiedLevelValue vlevel { get; set; }

        /// <summary>
        /// BizIdentityInfo vnameCert
        /// </summary>
        proto.IVerifiedNameCertificate vnameCert { get; set; }

        /// <summary>
        /// BizIdentityInfo signed
        /// </summary>
        bool? signed { get; set; }

        /// <summary>
        /// BizIdentityInfo revoked
        /// </summary>
        bool? revoked { get; set; }

        /// <summary>
        /// BizIdentityInfo hostStorage
        /// </summary>
        proto.BizIdentityInfo.BizIdentityInfoHostStorageType hostStorage { get; set; }

        /// <summary>
        /// BizIdentityInfo actualActors
        /// </summary>
        proto.BizIdentityInfo.BizIdentityInfoActualActorsType actualActors { get; set; }

        /// <summary>
        /// BizIdentityInfo privacyModeTs
        /// </summary>
        Nullable<OrType<double, Long>> privacyModeTs { get; set; }
    }

    /// <summary>
    /// Represents a BizIdentityInfo.
    /// </summary>
    class BizIdentityInfo : IBizIdentityInfo
    {
        /// <summary>
        /// Constructs a new BizIdentityInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public BizIdentityInfo(proto.IBizIdentityInfo properties = null)
        {
        }

        /// <summary>
        /// BizIdentityInfo vlevel.
        /// </summary>
        public proto.BizIdentityInfo.BizIdentityInfoVerifiedLevelValue vlevel { get; set; }
        /// <summary>
        /// BizIdentityInfo vnameCert.
        /// </summary>
        public proto.IVerifiedNameCertificate vnameCert { get; set; }
        /// <summary>
        /// BizIdentityInfo signed.
        /// </summary>
        public bool signed { get; set; }
        /// <summary>
        /// BizIdentityInfo revoked.
        /// </summary>
        public bool revoked { get; set; }
        /// <summary>
        /// BizIdentityInfo hostStorage.
        /// </summary>
        public proto.BizIdentityInfo.BizIdentityInfoHostStorageType hostStorage { get; set; }
        /// <summary>
        /// BizIdentityInfo actualActors.
        /// </summary>
        public proto.BizIdentityInfo.BizIdentityInfoActualActorsType actualActors { get; set; }
        /// <summary>
        /// BizIdentityInfo privacyModeTs.
        /// </summary>
        public OrType<double, Long> privacyModeTs { get; set; }

        /// <summary>
        /// Creates a new BizIdentityInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// BizIdentityInfo instance
        /// </returns>
        public static proto.BizIdentityInfo create(proto.IBizIdentityInfo properties = null);
        /// <summary>
        /// Encodes the specified BizIdentityInfo message. Does not implicitly {@link proto.BizIdentityInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizIdentityInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IBizIdentityInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified BizIdentityInfo message, length delimited. Does not implicitly {@link proto.BizIdentityInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizIdentityInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IBizIdentityInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a BizIdentityInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// BizIdentityInfo
        /// </returns>
        public static proto.BizIdentityInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a BizIdentityInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// BizIdentityInfo
        /// </returns>
        public static proto.BizIdentityInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a BizIdentityInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a BizIdentityInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// BizIdentityInfo
        /// </returns>
        public static proto.BizIdentityInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a BizIdentityInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// BizIdentityInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.BizIdentityInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this BizIdentityInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a BizAccountLinkInfo.
    /// </summary>
    interface IBizAccountLinkInfo
    {
        /// <summary>
        /// BizAccountLinkInfo whatsappBizAcctFbid
        /// </summary>
        Nullable<OrType<double, Long>> whatsappBizAcctFbid { get; set; }

        /// <summary>
        /// BizAccountLinkInfo whatsappAcctNumber
        /// </summary>
        string whatsappAcctNumber { get; set; }

        /// <summary>
        /// BizAccountLinkInfo issueTime
        /// </summary>
        Nullable<OrType<double, Long>> issueTime { get; set; }

        /// <summary>
        /// BizAccountLinkInfo hostStorage
        /// </summary>
        proto.BizAccountLinkInfo.BizAccountLinkInfoHostStorageType hostStorage { get; set; }

        /// <summary>
        /// BizAccountLinkInfo accountType
        /// </summary>
        proto.BizAccountLinkInfo.BizAccountLinkInfoAccountType accountType { get; set; }
    }

    /// <summary>
    /// Represents a BizAccountLinkInfo.
    /// </summary>
    class BizAccountLinkInfo : IBizAccountLinkInfo
    {
        /// <summary>
        /// Constructs a new BizAccountLinkInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public BizAccountLinkInfo(proto.IBizAccountLinkInfo properties = null)
        {
        }

        /// <summary>
        /// BizAccountLinkInfo whatsappBizAcctFbid.
        /// </summary>
        public OrType<double, Long> whatsappBizAcctFbid { get; set; }
        /// <summary>
        /// BizAccountLinkInfo whatsappAcctNumber.
        /// </summary>
        public string whatsappAcctNumber { get; set; }
        /// <summary>
        /// BizAccountLinkInfo issueTime.
        /// </summary>
        public OrType<double, Long> issueTime { get; set; }
        /// <summary>
        /// BizAccountLinkInfo hostStorage.
        /// </summary>
        public proto.BizAccountLinkInfo.BizAccountLinkInfoHostStorageType hostStorage { get; set; }
        /// <summary>
        /// BizAccountLinkInfo accountType.
        /// </summary>
        public proto.BizAccountLinkInfo.BizAccountLinkInfoAccountType accountType { get; set; }

        /// <summary>
        /// Creates a new BizAccountLinkInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// BizAccountLinkInfo instance
        /// </returns>
        public static proto.BizAccountLinkInfo create(proto.IBizAccountLinkInfo properties = null);
        /// <summary>
        /// Encodes the specified BizAccountLinkInfo message. Does not implicitly {@link proto.BizAccountLinkInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizAccountLinkInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IBizAccountLinkInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified BizAccountLinkInfo message, length delimited. Does not implicitly {@link proto.BizAccountLinkInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizAccountLinkInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IBizAccountLinkInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a BizAccountLinkInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// BizAccountLinkInfo
        /// </returns>
        public static proto.BizAccountLinkInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a BizAccountLinkInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// BizAccountLinkInfo
        /// </returns>
        public static proto.BizAccountLinkInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a BizAccountLinkInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a BizAccountLinkInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// BizAccountLinkInfo
        /// </returns>
        public static proto.BizAccountLinkInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a BizAccountLinkInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// BizAccountLinkInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.BizAccountLinkInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this BizAccountLinkInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a BizAccountPayload.
    /// </summary>
    interface IBizAccountPayload
    {
        /// <summary>
        /// BizAccountPayload vnameCert
        /// </summary>
        proto.IVerifiedNameCertificate vnameCert { get; set; }

        /// <summary>
        /// BizAccountPayload bizAcctLinkInfo
        /// </summary>
        Uint8Array bizAcctLinkInfo { get; set; }
    }

    /// <summary>
    /// Represents a BizAccountPayload.
    /// </summary>
    class BizAccountPayload : IBizAccountPayload
    {
        /// <summary>
        /// Constructs a new BizAccountPayload.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public BizAccountPayload(proto.IBizAccountPayload properties = null)
        {
        }

        /// <summary>
        /// BizAccountPayload vnameCert.
        /// </summary>
        public proto.IVerifiedNameCertificate vnameCert { get; set; }
        /// <summary>
        /// BizAccountPayload bizAcctLinkInfo.
        /// </summary>
        public Uint8Array bizAcctLinkInfo { get; set; }

        /// <summary>
        /// Creates a new BizAccountPayload instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// BizAccountPayload instance
        /// </returns>
        public static proto.BizAccountPayload create(proto.IBizAccountPayload properties = null);
        /// <summary>
        /// Encodes the specified BizAccountPayload message. Does not implicitly {@link proto.BizAccountPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizAccountPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IBizAccountPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified BizAccountPayload message, length delimited. Does not implicitly {@link proto.BizAccountPayload.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// BizAccountPayload message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IBizAccountPayload message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a BizAccountPayload message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// BizAccountPayload
        /// </returns>
        public static proto.BizAccountPayload decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a BizAccountPayload message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// BizAccountPayload
        /// </returns>
        public static proto.BizAccountPayload decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a BizAccountPayload message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a BizAccountPayload message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// BizAccountPayload
        /// </returns>
        public static proto.BizAccountPayload fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a BizAccountPayload message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// BizAccountPayload
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.BizAccountPayload message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this BizAccountPayload to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a VerifiedNameCertificate.
    /// </summary>
    interface IVerifiedNameCertificate
    {
        /// <summary>
        /// VerifiedNameCertificate details
        /// </summary>
        Uint8Array details { get; set; }

        /// <summary>
        /// VerifiedNameCertificate signature
        /// </summary>
        Uint8Array signature { get; set; }

        /// <summary>
        /// VerifiedNameCertificate serverSignature
        /// </summary>
        Uint8Array serverSignature { get; set; }
    }

    /// <summary>
    /// Represents a VerifiedNameCertificate.
    /// </summary>
    class VerifiedNameCertificate : IVerifiedNameCertificate
    {
        /// <summary>
        /// Constructs a new VerifiedNameCertificate.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public VerifiedNameCertificate(proto.IVerifiedNameCertificate properties = null)
        {
        }

        /// <summary>
        /// VerifiedNameCertificate details.
        /// </summary>
        public Uint8Array details { get; set; }
        /// <summary>
        /// VerifiedNameCertificate signature.
        /// </summary>
        public Uint8Array signature { get; set; }
        /// <summary>
        /// VerifiedNameCertificate serverSignature.
        /// </summary>
        public Uint8Array serverSignature { get; set; }

        /// <summary>
        /// Creates a new VerifiedNameCertificate instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// VerifiedNameCertificate instance
        /// </returns>
        public static proto.VerifiedNameCertificate create(proto.IVerifiedNameCertificate properties = null);
        /// <summary>
        /// Encodes the specified VerifiedNameCertificate message. Does not implicitly {@link proto.VerifiedNameCertificate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// VerifiedNameCertificate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IVerifiedNameCertificate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified VerifiedNameCertificate message, length delimited. Does not implicitly {@link proto.VerifiedNameCertificate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// VerifiedNameCertificate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IVerifiedNameCertificate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a VerifiedNameCertificate message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// VerifiedNameCertificate
        /// </returns>
        public static proto.VerifiedNameCertificate decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a VerifiedNameCertificate message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// VerifiedNameCertificate
        /// </returns>
        public static proto.VerifiedNameCertificate decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a VerifiedNameCertificate message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a VerifiedNameCertificate message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// VerifiedNameCertificate
        /// </returns>
        public static proto.VerifiedNameCertificate fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a VerifiedNameCertificate message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// VerifiedNameCertificate
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.VerifiedNameCertificate message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this VerifiedNameCertificate to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LocalizedName.
    /// </summary>
    interface ILocalizedName
    {
        /// <summary>
        /// LocalizedName lg
        /// </summary>
        string lg { get; set; }

        /// <summary>
        /// LocalizedName lc
        /// </summary>
        string lc { get; set; }

        /// <summary>
        /// LocalizedName verifiedName
        /// </summary>
        string verifiedName { get; set; }
    }

    /// <summary>
    /// Represents a LocalizedName.
    /// </summary>
    class LocalizedName : ILocalizedName
    {
        /// <summary>
        /// Constructs a new LocalizedName.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LocalizedName(proto.ILocalizedName properties = null)
        {
        }

        /// <summary>
        /// LocalizedName lg.
        /// </summary>
        public string lg { get; set; }
        /// <summary>
        /// LocalizedName lc.
        /// </summary>
        public string lc { get; set; }
        /// <summary>
        /// LocalizedName verifiedName.
        /// </summary>
        public string verifiedName { get; set; }

        /// <summary>
        /// Creates a new LocalizedName instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LocalizedName instance
        /// </returns>
        public static proto.LocalizedName create(proto.ILocalizedName properties = null);
        /// <summary>
        /// Encodes the specified LocalizedName message. Does not implicitly {@link proto.LocalizedName.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocalizedName message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILocalizedName message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LocalizedName message, length delimited. Does not implicitly {@link proto.LocalizedName.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocalizedName message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILocalizedName message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LocalizedName message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LocalizedName
        /// </returns>
        public static proto.LocalizedName decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LocalizedName message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LocalizedName
        /// </returns>
        public static proto.LocalizedName decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LocalizedName message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LocalizedName message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LocalizedName
        /// </returns>
        public static proto.LocalizedName fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LocalizedName message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LocalizedName
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LocalizedName message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LocalizedName to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncActionData.
    /// </summary>
    interface ISyncActionData
    {
        /// <summary>
        /// SyncActionData index
        /// </summary>
        Uint8Array index { get; set; }

        /// <summary>
        /// SyncActionData value
        /// </summary>
        proto.ISyncActionValue value { get; set; }

        /// <summary>
        /// SyncActionData padding
        /// </summary>
        Uint8Array padding { get; set; }

        /// <summary>
        /// SyncActionData version
        /// </summary>
        double? version { get; set; }
    }

    /// <summary>
    /// Represents a SyncActionData.
    /// </summary>
    class SyncActionData : ISyncActionData
    {
        /// <summary>
        /// Constructs a new SyncActionData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncActionData(proto.ISyncActionData properties = null)
        {
        }

        /// <summary>
        /// SyncActionData index.
        /// </summary>
        public Uint8Array index { get; set; }
        /// <summary>
        /// SyncActionData value.
        /// </summary>
        public proto.ISyncActionValue value { get; set; }
        /// <summary>
        /// SyncActionData padding.
        /// </summary>
        public Uint8Array padding { get; set; }
        /// <summary>
        /// SyncActionData version.
        /// </summary>
        public double version { get; set; }

        /// <summary>
        /// Creates a new SyncActionData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncActionData instance
        /// </returns>
        public static proto.SyncActionData create(proto.ISyncActionData properties = null);
        /// <summary>
        /// Encodes the specified SyncActionData message. Does not implicitly {@link proto.SyncActionData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncActionData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncActionData message, length delimited. Does not implicitly {@link proto.SyncActionData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncActionData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncActionData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncActionData
        /// </returns>
        public static proto.SyncActionData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncActionData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncActionData
        /// </returns>
        public static proto.SyncActionData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncActionData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncActionData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncActionData
        /// </returns>
        public static proto.SyncActionData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncActionData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncActionData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncActionData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncActionData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a StarAction.
    /// </summary>
    interface IStarAction
    {
        /// <summary>
        /// StarAction starred
        /// </summary>
        bool? starred { get; set; }
    }

    /// <summary>
    /// Represents a StarAction.
    /// </summary>
    class StarAction : IStarAction
    {
        /// <summary>
        /// Constructs a new StarAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public StarAction(proto.IStarAction properties = null)
        {
        }

        /// <summary>
        /// StarAction starred.
        /// </summary>
        public bool starred { get; set; }

        /// <summary>
        /// Creates a new StarAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// StarAction instance
        /// </returns>
        public static proto.StarAction create(proto.IStarAction properties = null);
        /// <summary>
        /// Encodes the specified StarAction message. Does not implicitly {@link proto.StarAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// StarAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IStarAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified StarAction message, length delimited. Does not implicitly {@link proto.StarAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// StarAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IStarAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a StarAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// StarAction
        /// </returns>
        public static proto.StarAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a StarAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// StarAction
        /// </returns>
        public static proto.StarAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a StarAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a StarAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// StarAction
        /// </returns>
        public static proto.StarAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a StarAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// StarAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.StarAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this StarAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ContactAction.
    /// </summary>
    interface IContactAction
    {
        /// <summary>
        /// ContactAction fullName
        /// </summary>
        string fullName { get; set; }

        /// <summary>
        /// ContactAction firstName
        /// </summary>
        string firstName { get; set; }
    }

    /// <summary>
    /// Represents a ContactAction.
    /// </summary>
    class ContactAction : IContactAction
    {
        /// <summary>
        /// Constructs a new ContactAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ContactAction(proto.IContactAction properties = null)
        {
        }

        /// <summary>
        /// ContactAction fullName.
        /// </summary>
        public string fullName { get; set; }
        /// <summary>
        /// ContactAction firstName.
        /// </summary>
        public string firstName { get; set; }

        /// <summary>
        /// Creates a new ContactAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ContactAction instance
        /// </returns>
        public static proto.ContactAction create(proto.IContactAction properties = null);
        /// <summary>
        /// Encodes the specified ContactAction message. Does not implicitly {@link proto.ContactAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IContactAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ContactAction message, length delimited. Does not implicitly {@link proto.ContactAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IContactAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ContactAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ContactAction
        /// </returns>
        public static proto.ContactAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ContactAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ContactAction
        /// </returns>
        public static proto.ContactAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ContactAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ContactAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ContactAction
        /// </returns>
        public static proto.ContactAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ContactAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ContactAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ContactAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ContactAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MuteAction.
    /// </summary>
    interface IMuteAction
    {
        /// <summary>
        /// MuteAction muted
        /// </summary>
        bool? muted { get; set; }

        /// <summary>
        /// MuteAction muteEndTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> muteEndTimestamp { get; set; }
    }

    /// <summary>
    /// Represents a MuteAction.
    /// </summary>
    class MuteAction : IMuteAction
    {
        /// <summary>
        /// Constructs a new MuteAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MuteAction(proto.IMuteAction properties = null)
        {
        }

        /// <summary>
        /// MuteAction muted.
        /// </summary>
        public bool muted { get; set; }
        /// <summary>
        /// MuteAction muteEndTimestamp.
        /// </summary>
        public OrType<double, Long> muteEndTimestamp { get; set; }

        /// <summary>
        /// Creates a new MuteAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MuteAction instance
        /// </returns>
        public static proto.MuteAction create(proto.IMuteAction properties = null);
        /// <summary>
        /// Encodes the specified MuteAction message. Does not implicitly {@link proto.MuteAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MuteAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMuteAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MuteAction message, length delimited. Does not implicitly {@link proto.MuteAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MuteAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMuteAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MuteAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MuteAction
        /// </returns>
        public static proto.MuteAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MuteAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MuteAction
        /// </returns>
        public static proto.MuteAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MuteAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MuteAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MuteAction
        /// </returns>
        public static proto.MuteAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MuteAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MuteAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MuteAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MuteAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PinAction.
    /// </summary>
    interface IPinAction
    {
        /// <summary>
        /// PinAction pinned
        /// </summary>
        bool? pinned { get; set; }
    }

    /// <summary>
    /// Represents a PinAction.
    /// </summary>
    class PinAction : IPinAction
    {
        /// <summary>
        /// Constructs a new PinAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PinAction(proto.IPinAction properties = null)
        {
        }

        /// <summary>
        /// PinAction pinned.
        /// </summary>
        public bool pinned { get; set; }

        /// <summary>
        /// Creates a new PinAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PinAction instance
        /// </returns>
        public static proto.PinAction create(proto.IPinAction properties = null);
        /// <summary>
        /// Encodes the specified PinAction message. Does not implicitly {@link proto.PinAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PinAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPinAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PinAction message, length delimited. Does not implicitly {@link proto.PinAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PinAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPinAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PinAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PinAction
        /// </returns>
        public static proto.PinAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PinAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PinAction
        /// </returns>
        public static proto.PinAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PinAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PinAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PinAction
        /// </returns>
        public static proto.PinAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PinAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PinAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PinAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PinAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SecurityNotificationSetting.
    /// </summary>
    interface ISecurityNotificationSetting
    {
        /// <summary>
        /// SecurityNotificationSetting showNotification
        /// </summary>
        bool? showNotification { get; set; }
    }

    /// <summary>
    /// Represents a SecurityNotificationSetting.
    /// </summary>
    class SecurityNotificationSetting : ISecurityNotificationSetting
    {
        /// <summary>
        /// Constructs a new SecurityNotificationSetting.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SecurityNotificationSetting(proto.ISecurityNotificationSetting properties = null)
        {
        }

        /// <summary>
        /// SecurityNotificationSetting showNotification.
        /// </summary>
        public bool showNotification { get; set; }

        /// <summary>
        /// Creates a new SecurityNotificationSetting instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SecurityNotificationSetting instance
        /// </returns>
        public static proto.SecurityNotificationSetting create(proto.ISecurityNotificationSetting properties = null);
        /// <summary>
        /// Encodes the specified SecurityNotificationSetting message. Does not implicitly {@link proto.SecurityNotificationSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SecurityNotificationSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISecurityNotificationSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SecurityNotificationSetting message, length delimited. Does not implicitly {@link proto.SecurityNotificationSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SecurityNotificationSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISecurityNotificationSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SecurityNotificationSetting message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SecurityNotificationSetting
        /// </returns>
        public static proto.SecurityNotificationSetting decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SecurityNotificationSetting message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SecurityNotificationSetting
        /// </returns>
        public static proto.SecurityNotificationSetting decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SecurityNotificationSetting message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SecurityNotificationSetting message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SecurityNotificationSetting
        /// </returns>
        public static proto.SecurityNotificationSetting fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SecurityNotificationSetting message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SecurityNotificationSetting
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SecurityNotificationSetting message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SecurityNotificationSetting to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PushNameSetting.
    /// </summary>
    interface IPushNameSetting
    {
        /// <summary>
        /// PushNameSetting name
        /// </summary>
        string name { get; set; }
    }

    /// <summary>
    /// Represents a PushNameSetting.
    /// </summary>
    class PushNameSetting : IPushNameSetting
    {
        /// <summary>
        /// Constructs a new PushNameSetting.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PushNameSetting(proto.IPushNameSetting properties = null)
        {
        }

        /// <summary>
        /// PushNameSetting name.
        /// </summary>
        public string name { get; set; }

        /// <summary>
        /// Creates a new PushNameSetting instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PushNameSetting instance
        /// </returns>
        public static proto.PushNameSetting create(proto.IPushNameSetting properties = null);
        /// <summary>
        /// Encodes the specified PushNameSetting message. Does not implicitly {@link proto.PushNameSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PushNameSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPushNameSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PushNameSetting message, length delimited. Does not implicitly {@link proto.PushNameSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PushNameSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPushNameSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PushNameSetting message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PushNameSetting
        /// </returns>
        public static proto.PushNameSetting decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PushNameSetting message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PushNameSetting
        /// </returns>
        public static proto.PushNameSetting decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PushNameSetting message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PushNameSetting message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PushNameSetting
        /// </returns>
        public static proto.PushNameSetting fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PushNameSetting message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PushNameSetting
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PushNameSetting message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PushNameSetting to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LocaleSetting.
    /// </summary>
    interface ILocaleSetting
    {
        /// <summary>
        /// LocaleSetting locale
        /// </summary>
        string locale { get; set; }
    }

    /// <summary>
    /// Represents a LocaleSetting.
    /// </summary>
    class LocaleSetting : ILocaleSetting
    {
        /// <summary>
        /// Constructs a new LocaleSetting.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LocaleSetting(proto.ILocaleSetting properties = null)
        {
        }

        /// <summary>
        /// LocaleSetting locale.
        /// </summary>
        public string locale { get; set; }

        /// <summary>
        /// Creates a new LocaleSetting instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LocaleSetting instance
        /// </returns>
        public static proto.LocaleSetting create(proto.ILocaleSetting properties = null);
        /// <summary>
        /// Encodes the specified LocaleSetting message. Does not implicitly {@link proto.LocaleSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocaleSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILocaleSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LocaleSetting message, length delimited. Does not implicitly {@link proto.LocaleSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocaleSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILocaleSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LocaleSetting message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LocaleSetting
        /// </returns>
        public static proto.LocaleSetting decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LocaleSetting message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LocaleSetting
        /// </returns>
        public static proto.LocaleSetting decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LocaleSetting message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LocaleSetting message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LocaleSetting
        /// </returns>
        public static proto.LocaleSetting fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LocaleSetting message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LocaleSetting
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LocaleSetting message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LocaleSetting to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a QuickReplyAction.
    /// </summary>
    interface IQuickReplyAction
    {
        /// <summary>
        /// QuickReplyAction shortcut
        /// </summary>
        string shortcut { get; set; }

        /// <summary>
        /// QuickReplyAction message
        /// </summary>
        string message { get; set; }

        /// <summary>
        /// QuickReplyAction keywords
        /// </summary>
        List<string> keywords { get; set; }

        /// <summary>
        /// QuickReplyAction count
        /// </summary>
        double? count { get; set; }

        /// <summary>
        /// QuickReplyAction deleted
        /// </summary>
        bool? deleted { get; set; }
    }

    /// <summary>
    /// Represents a QuickReplyAction.
    /// </summary>
    class QuickReplyAction : IQuickReplyAction
    {
        /// <summary>
        /// Constructs a new QuickReplyAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public QuickReplyAction(proto.IQuickReplyAction properties = null)
        {
        }

        /// <summary>
        /// QuickReplyAction shortcut.
        /// </summary>
        public string shortcut { get; set; }
        /// <summary>
        /// QuickReplyAction message.
        /// </summary>
        public string message { get; set; }
        /// <summary>
        /// QuickReplyAction keywords.
        /// </summary>
        public List<string> keywords { get; set; }
        /// <summary>
        /// QuickReplyAction count.
        /// </summary>
        public double count { get; set; }
        /// <summary>
        /// QuickReplyAction deleted.
        /// </summary>
        public bool deleted { get; set; }

        /// <summary>
        /// Creates a new QuickReplyAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// QuickReplyAction instance
        /// </returns>
        public static proto.QuickReplyAction create(proto.IQuickReplyAction properties = null);
        /// <summary>
        /// Encodes the specified QuickReplyAction message. Does not implicitly {@link proto.QuickReplyAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IQuickReplyAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified QuickReplyAction message, length delimited. Does not implicitly {@link proto.QuickReplyAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IQuickReplyAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a QuickReplyAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// QuickReplyAction
        /// </returns>
        public static proto.QuickReplyAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a QuickReplyAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// QuickReplyAction
        /// </returns>
        public static proto.QuickReplyAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a QuickReplyAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a QuickReplyAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// QuickReplyAction
        /// </returns>
        public static proto.QuickReplyAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a QuickReplyAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.QuickReplyAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this QuickReplyAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LabelAssociationAction.
    /// </summary>
    interface ILabelAssociationAction
    {
        /// <summary>
        /// LabelAssociationAction labeled
        /// </summary>
        bool? labeled { get; set; }
    }

    /// <summary>
    /// Represents a LabelAssociationAction.
    /// </summary>
    class LabelAssociationAction : ILabelAssociationAction
    {
        /// <summary>
        /// Constructs a new LabelAssociationAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LabelAssociationAction(proto.ILabelAssociationAction properties = null)
        {
        }

        /// <summary>
        /// LabelAssociationAction labeled.
        /// </summary>
        public bool labeled { get; set; }

        /// <summary>
        /// Creates a new LabelAssociationAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LabelAssociationAction instance
        /// </returns>
        public static proto.LabelAssociationAction create(proto.ILabelAssociationAction properties = null);
        /// <summary>
        /// Encodes the specified LabelAssociationAction message. Does not implicitly {@link proto.LabelAssociationAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LabelAssociationAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILabelAssociationAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LabelAssociationAction message, length delimited. Does not implicitly {@link proto.LabelAssociationAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LabelAssociationAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILabelAssociationAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LabelAssociationAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LabelAssociationAction
        /// </returns>
        public static proto.LabelAssociationAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LabelAssociationAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LabelAssociationAction
        /// </returns>
        public static proto.LabelAssociationAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LabelAssociationAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LabelAssociationAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LabelAssociationAction
        /// </returns>
        public static proto.LabelAssociationAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LabelAssociationAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LabelAssociationAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LabelAssociationAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LabelAssociationAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LabelEditAction.
    /// </summary>
    interface ILabelEditAction
    {
        /// <summary>
        /// LabelEditAction name
        /// </summary>
        string name { get; set; }

        /// <summary>
        /// LabelEditAction color
        /// </summary>
        double? color { get; set; }

        /// <summary>
        /// LabelEditAction predefinedId
        /// </summary>
        double? predefinedId { get; set; }

        /// <summary>
        /// LabelEditAction deleted
        /// </summary>
        bool? deleted { get; set; }
    }

    /// <summary>
    /// Represents a LabelEditAction.
    /// </summary>
    class LabelEditAction : ILabelEditAction
    {
        /// <summary>
        /// Constructs a new LabelEditAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LabelEditAction(proto.ILabelEditAction properties = null)
        {
        }

        /// <summary>
        /// LabelEditAction name.
        /// </summary>
        public string name { get; set; }
        /// <summary>
        /// LabelEditAction color.
        /// </summary>
        public double color { get; set; }
        /// <summary>
        /// LabelEditAction predefinedId.
        /// </summary>
        public double predefinedId { get; set; }
        /// <summary>
        /// LabelEditAction deleted.
        /// </summary>
        public bool deleted { get; set; }

        /// <summary>
        /// Creates a new LabelEditAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LabelEditAction instance
        /// </returns>
        public static proto.LabelEditAction create(proto.ILabelEditAction properties = null);
        /// <summary>
        /// Encodes the specified LabelEditAction message. Does not implicitly {@link proto.LabelEditAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LabelEditAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILabelEditAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LabelEditAction message, length delimited. Does not implicitly {@link proto.LabelEditAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LabelEditAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILabelEditAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LabelEditAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LabelEditAction
        /// </returns>
        public static proto.LabelEditAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LabelEditAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LabelEditAction
        /// </returns>
        public static proto.LabelEditAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LabelEditAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LabelEditAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LabelEditAction
        /// </returns>
        public static proto.LabelEditAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LabelEditAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LabelEditAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LabelEditAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LabelEditAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RecentStickerWeightsAction.
    /// </summary>
    interface IRecentStickerWeightsAction
    {
        /// <summary>
        /// RecentStickerWeightsAction weights
        /// </summary>
        List<proto.IRecentStickerWeight> weights { get; set; }
    }

    /// <summary>
    /// Represents a RecentStickerWeightsAction.
    /// </summary>
    class RecentStickerWeightsAction : IRecentStickerWeightsAction
    {
        /// <summary>
        /// Constructs a new RecentStickerWeightsAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RecentStickerWeightsAction(proto.IRecentStickerWeightsAction properties = null)
        {
        }

        /// <summary>
        /// RecentStickerWeightsAction weights.
        /// </summary>
        public List<proto.IRecentStickerWeight> weights { get; set; }

        /// <summary>
        /// Creates a new RecentStickerWeightsAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RecentStickerWeightsAction instance
        /// </returns>
        public static proto.RecentStickerWeightsAction create(proto.IRecentStickerWeightsAction properties = null);
        /// <summary>
        /// Encodes the specified RecentStickerWeightsAction message. Does not implicitly {@link proto.RecentStickerWeightsAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeightsAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRecentStickerWeightsAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RecentStickerWeightsAction message, length delimited. Does not implicitly {@link proto.RecentStickerWeightsAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeightsAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRecentStickerWeightsAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RecentStickerWeightsAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RecentStickerWeightsAction
        /// </returns>
        public static proto.RecentStickerWeightsAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RecentStickerWeightsAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RecentStickerWeightsAction
        /// </returns>
        public static proto.RecentStickerWeightsAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RecentStickerWeightsAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RecentStickerWeightsAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RecentStickerWeightsAction
        /// </returns>
        public static proto.RecentStickerWeightsAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RecentStickerWeightsAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeightsAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RecentStickerWeightsAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RecentStickerWeightsAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RecentStickerMetadata.
    /// </summary>
    interface IRecentStickerMetadata
    {
        /// <summary>
        /// RecentStickerMetadata directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// RecentStickerMetadata encFilehash
        /// </summary>
        string encFilehash { get; set; }

        /// <summary>
        /// RecentStickerMetadata mediaKey
        /// </summary>
        string mediaKey { get; set; }

        /// <summary>
        /// RecentStickerMetadata stanzaId
        /// </summary>
        string stanzaId { get; set; }

        /// <summary>
        /// RecentStickerMetadata chatJid
        /// </summary>
        string chatJid { get; set; }

        /// <summary>
        /// RecentStickerMetadata participant
        /// </summary>
        string participant { get; set; }

        /// <summary>
        /// RecentStickerMetadata isSentByMe
        /// </summary>
        bool? isSentByMe { get; set; }
    }

    /// <summary>
    /// Represents a RecentStickerMetadata.
    /// </summary>
    class RecentStickerMetadata : IRecentStickerMetadata
    {
        /// <summary>
        /// Constructs a new RecentStickerMetadata.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RecentStickerMetadata(proto.IRecentStickerMetadata properties = null)
        {
        }

        /// <summary>
        /// RecentStickerMetadata directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// RecentStickerMetadata encFilehash.
        /// </summary>
        public string encFilehash { get; set; }
        /// <summary>
        /// RecentStickerMetadata mediaKey.
        /// </summary>
        public string mediaKey { get; set; }
        /// <summary>
        /// RecentStickerMetadata stanzaId.
        /// </summary>
        public string stanzaId { get; set; }
        /// <summary>
        /// RecentStickerMetadata chatJid.
        /// </summary>
        public string chatJid { get; set; }
        /// <summary>
        /// RecentStickerMetadata participant.
        /// </summary>
        public string participant { get; set; }
        /// <summary>
        /// RecentStickerMetadata isSentByMe.
        /// </summary>
        public bool isSentByMe { get; set; }

        /// <summary>
        /// Creates a new RecentStickerMetadata instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RecentStickerMetadata instance
        /// </returns>
        public static proto.RecentStickerMetadata create(proto.IRecentStickerMetadata properties = null);
        /// <summary>
        /// Encodes the specified RecentStickerMetadata message. Does not implicitly {@link proto.RecentStickerMetadata.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerMetadata message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRecentStickerMetadata message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RecentStickerMetadata message, length delimited. Does not implicitly {@link proto.RecentStickerMetadata.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerMetadata message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRecentStickerMetadata message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RecentStickerMetadata message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RecentStickerMetadata
        /// </returns>
        public static proto.RecentStickerMetadata decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RecentStickerMetadata message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RecentStickerMetadata
        /// </returns>
        public static proto.RecentStickerMetadata decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RecentStickerMetadata message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RecentStickerMetadata message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RecentStickerMetadata
        /// </returns>
        public static proto.RecentStickerMetadata fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RecentStickerMetadata message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerMetadata
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RecentStickerMetadata message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RecentStickerMetadata to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RecentEmojiWeightsAction.
    /// </summary>
    interface IRecentEmojiWeightsAction
    {
        /// <summary>
        /// RecentEmojiWeightsAction weights
        /// </summary>
        List<proto.IRecentEmojiWeight> weights { get; set; }
    }

    /// <summary>
    /// Represents a RecentEmojiWeightsAction.
    /// </summary>
    class RecentEmojiWeightsAction : IRecentEmojiWeightsAction
    {
        /// <summary>
        /// Constructs a new RecentEmojiWeightsAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RecentEmojiWeightsAction(proto.IRecentEmojiWeightsAction properties = null)
        {
        }

        /// <summary>
        /// RecentEmojiWeightsAction weights.
        /// </summary>
        public List<proto.IRecentEmojiWeight> weights { get; set; }

        /// <summary>
        /// Creates a new RecentEmojiWeightsAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RecentEmojiWeightsAction instance
        /// </returns>
        public static proto.RecentEmojiWeightsAction create(proto.IRecentEmojiWeightsAction properties = null);
        /// <summary>
        /// Encodes the specified RecentEmojiWeightsAction message. Does not implicitly {@link proto.RecentEmojiWeightsAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeightsAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRecentEmojiWeightsAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RecentEmojiWeightsAction message, length delimited. Does not implicitly {@link proto.RecentEmojiWeightsAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeightsAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRecentEmojiWeightsAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RecentEmojiWeightsAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RecentEmojiWeightsAction
        /// </returns>
        public static proto.RecentEmojiWeightsAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RecentEmojiWeightsAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RecentEmojiWeightsAction
        /// </returns>
        public static proto.RecentEmojiWeightsAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RecentEmojiWeightsAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RecentEmojiWeightsAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RecentEmojiWeightsAction
        /// </returns>
        public static proto.RecentEmojiWeightsAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RecentEmojiWeightsAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeightsAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RecentEmojiWeightsAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RecentEmojiWeightsAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ArchiveChatAction.
    /// </summary>
    interface IArchiveChatAction
    {
        /// <summary>
        /// ArchiveChatAction archived
        /// </summary>
        bool? archived { get; set; }

        /// <summary>
        /// ArchiveChatAction messageRange
        /// </summary>
        proto.ISyncActionMessageRange messageRange { get; set; }
    }

    /// <summary>
    /// Represents an ArchiveChatAction.
    /// </summary>
    class ArchiveChatAction : IArchiveChatAction
    {
        /// <summary>
        /// Constructs a new ArchiveChatAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ArchiveChatAction(proto.IArchiveChatAction properties = null)
        {
        }

        /// <summary>
        /// ArchiveChatAction archived.
        /// </summary>
        public bool archived { get; set; }
        /// <summary>
        /// ArchiveChatAction messageRange.
        /// </summary>
        public proto.ISyncActionMessageRange messageRange { get; set; }

        /// <summary>
        /// Creates a new ArchiveChatAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ArchiveChatAction instance
        /// </returns>
        public static proto.ArchiveChatAction create(proto.IArchiveChatAction properties = null);
        /// <summary>
        /// Encodes the specified ArchiveChatAction message. Does not implicitly {@link proto.ArchiveChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ArchiveChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IArchiveChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ArchiveChatAction message, length delimited. Does not implicitly {@link proto.ArchiveChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ArchiveChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IArchiveChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ArchiveChatAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ArchiveChatAction
        /// </returns>
        public static proto.ArchiveChatAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ArchiveChatAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ArchiveChatAction
        /// </returns>
        public static proto.ArchiveChatAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ArchiveChatAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ArchiveChatAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ArchiveChatAction
        /// </returns>
        public static proto.ArchiveChatAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ArchiveChatAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ArchiveChatAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ArchiveChatAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ArchiveChatAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DeleteMessageForMeAction.
    /// </summary>
    interface IDeleteMessageForMeAction
    {
        /// <summary>
        /// DeleteMessageForMeAction deleteMedia
        /// </summary>
        bool? deleteMedia { get; set; }

        /// <summary>
        /// DeleteMessageForMeAction messageTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> messageTimestamp { get; set; }
    }

    /// <summary>
    /// Represents a DeleteMessageForMeAction.
    /// </summary>
    class DeleteMessageForMeAction : IDeleteMessageForMeAction
    {
        /// <summary>
        /// Constructs a new DeleteMessageForMeAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DeleteMessageForMeAction(proto.IDeleteMessageForMeAction properties = null)
        {
        }

        /// <summary>
        /// DeleteMessageForMeAction deleteMedia.
        /// </summary>
        public bool deleteMedia { get; set; }
        /// <summary>
        /// DeleteMessageForMeAction messageTimestamp.
        /// </summary>
        public OrType<double, Long> messageTimestamp { get; set; }

        /// <summary>
        /// Creates a new DeleteMessageForMeAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DeleteMessageForMeAction instance
        /// </returns>
        public static proto.DeleteMessageForMeAction create(proto.IDeleteMessageForMeAction properties = null);
        /// <summary>
        /// Encodes the specified DeleteMessageForMeAction message. Does not implicitly {@link proto.DeleteMessageForMeAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeleteMessageForMeAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDeleteMessageForMeAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DeleteMessageForMeAction message, length delimited. Does not implicitly {@link proto.DeleteMessageForMeAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeleteMessageForMeAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDeleteMessageForMeAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DeleteMessageForMeAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DeleteMessageForMeAction
        /// </returns>
        public static proto.DeleteMessageForMeAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DeleteMessageForMeAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DeleteMessageForMeAction
        /// </returns>
        public static proto.DeleteMessageForMeAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DeleteMessageForMeAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DeleteMessageForMeAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DeleteMessageForMeAction
        /// </returns>
        public static proto.DeleteMessageForMeAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DeleteMessageForMeAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DeleteMessageForMeAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DeleteMessageForMeAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DeleteMessageForMeAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MarkChatAsReadAction.
    /// </summary>
    interface IMarkChatAsReadAction
    {
        /// <summary>
        /// MarkChatAsReadAction read
        /// </summary>
        bool? read { get; set; }

        /// <summary>
        /// MarkChatAsReadAction messageRange
        /// </summary>
        proto.ISyncActionMessageRange messageRange { get; set; }
    }

    /// <summary>
    /// Represents a MarkChatAsReadAction.
    /// </summary>
    class MarkChatAsReadAction : IMarkChatAsReadAction
    {
        /// <summary>
        /// Constructs a new MarkChatAsReadAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MarkChatAsReadAction(proto.IMarkChatAsReadAction properties = null)
        {
        }

        /// <summary>
        /// MarkChatAsReadAction read.
        /// </summary>
        public bool read { get; set; }
        /// <summary>
        /// MarkChatAsReadAction messageRange.
        /// </summary>
        public proto.ISyncActionMessageRange messageRange { get; set; }

        /// <summary>
        /// Creates a new MarkChatAsReadAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MarkChatAsReadAction instance
        /// </returns>
        public static proto.MarkChatAsReadAction create(proto.IMarkChatAsReadAction properties = null);
        /// <summary>
        /// Encodes the specified MarkChatAsReadAction message. Does not implicitly {@link proto.MarkChatAsReadAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MarkChatAsReadAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMarkChatAsReadAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MarkChatAsReadAction message, length delimited. Does not implicitly {@link proto.MarkChatAsReadAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MarkChatAsReadAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMarkChatAsReadAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MarkChatAsReadAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MarkChatAsReadAction
        /// </returns>
        public static proto.MarkChatAsReadAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MarkChatAsReadAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MarkChatAsReadAction
        /// </returns>
        public static proto.MarkChatAsReadAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MarkChatAsReadAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MarkChatAsReadAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MarkChatAsReadAction
        /// </returns>
        public static proto.MarkChatAsReadAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MarkChatAsReadAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MarkChatAsReadAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MarkChatAsReadAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MarkChatAsReadAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ClearChatAction.
    /// </summary>
    interface IClearChatAction
    {
        /// <summary>
        /// ClearChatAction messageRange
        /// </summary>
        proto.ISyncActionMessageRange messageRange { get; set; }
    }

    /// <summary>
    /// Represents a ClearChatAction.
    /// </summary>
    class ClearChatAction : IClearChatAction
    {
        /// <summary>
        /// Constructs a new ClearChatAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ClearChatAction(proto.IClearChatAction properties = null)
        {
        }

        /// <summary>
        /// ClearChatAction messageRange.
        /// </summary>
        public proto.ISyncActionMessageRange messageRange { get; set; }

        /// <summary>
        /// Creates a new ClearChatAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ClearChatAction instance
        /// </returns>
        public static proto.ClearChatAction create(proto.IClearChatAction properties = null);
        /// <summary>
        /// Encodes the specified ClearChatAction message. Does not implicitly {@link proto.ClearChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClearChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IClearChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ClearChatAction message, length delimited. Does not implicitly {@link proto.ClearChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ClearChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IClearChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ClearChatAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ClearChatAction
        /// </returns>
        public static proto.ClearChatAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ClearChatAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ClearChatAction
        /// </returns>
        public static proto.ClearChatAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ClearChatAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ClearChatAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ClearChatAction
        /// </returns>
        public static proto.ClearChatAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ClearChatAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ClearChatAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ClearChatAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ClearChatAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DeleteChatAction.
    /// </summary>
    interface IDeleteChatAction
    {
        /// <summary>
        /// DeleteChatAction messageRange
        /// </summary>
        proto.ISyncActionMessageRange messageRange { get; set; }
    }

    /// <summary>
    /// Represents a DeleteChatAction.
    /// </summary>
    class DeleteChatAction : IDeleteChatAction
    {
        /// <summary>
        /// Constructs a new DeleteChatAction.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DeleteChatAction(proto.IDeleteChatAction properties = null)
        {
        }

        /// <summary>
        /// DeleteChatAction messageRange.
        /// </summary>
        public proto.ISyncActionMessageRange messageRange { get; set; }

        /// <summary>
        /// Creates a new DeleteChatAction instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DeleteChatAction instance
        /// </returns>
        public static proto.DeleteChatAction create(proto.IDeleteChatAction properties = null);
        /// <summary>
        /// Encodes the specified DeleteChatAction message. Does not implicitly {@link proto.DeleteChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeleteChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDeleteChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DeleteChatAction message, length delimited. Does not implicitly {@link proto.DeleteChatAction.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeleteChatAction message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDeleteChatAction message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DeleteChatAction message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DeleteChatAction
        /// </returns>
        public static proto.DeleteChatAction decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DeleteChatAction message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DeleteChatAction
        /// </returns>
        public static proto.DeleteChatAction decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DeleteChatAction message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DeleteChatAction message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DeleteChatAction
        /// </returns>
        public static proto.DeleteChatAction fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DeleteChatAction message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DeleteChatAction
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DeleteChatAction message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DeleteChatAction to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an UnarchiveChatsSetting.
    /// </summary>
    interface IUnarchiveChatsSetting
    {
        /// <summary>
        /// UnarchiveChatsSetting unarchiveChats
        /// </summary>
        bool? unarchiveChats { get; set; }
    }

    /// <summary>
    /// Represents an UnarchiveChatsSetting.
    /// </summary>
    class UnarchiveChatsSetting : IUnarchiveChatsSetting
    {
        /// <summary>
        /// Constructs a new UnarchiveChatsSetting.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public UnarchiveChatsSetting(proto.IUnarchiveChatsSetting properties = null)
        {
        }

        /// <summary>
        /// UnarchiveChatsSetting unarchiveChats.
        /// </summary>
        public bool unarchiveChats { get; set; }

        /// <summary>
        /// Creates a new UnarchiveChatsSetting instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// UnarchiveChatsSetting instance
        /// </returns>
        public static proto.UnarchiveChatsSetting create(proto.IUnarchiveChatsSetting properties = null);
        /// <summary>
        /// Encodes the specified UnarchiveChatsSetting message. Does not implicitly {@link proto.UnarchiveChatsSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// UnarchiveChatsSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IUnarchiveChatsSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified UnarchiveChatsSetting message, length delimited. Does not implicitly {@link proto.UnarchiveChatsSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// UnarchiveChatsSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IUnarchiveChatsSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an UnarchiveChatsSetting message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// UnarchiveChatsSetting
        /// </returns>
        public static proto.UnarchiveChatsSetting decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an UnarchiveChatsSetting message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// UnarchiveChatsSetting
        /// </returns>
        public static proto.UnarchiveChatsSetting decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an UnarchiveChatsSetting message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an UnarchiveChatsSetting message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// UnarchiveChatsSetting
        /// </returns>
        public static proto.UnarchiveChatsSetting fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an UnarchiveChatsSetting message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// UnarchiveChatsSetting
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.UnarchiveChatsSetting message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this UnarchiveChatsSetting to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncActionMessageRange.
    /// </summary>
    interface ISyncActionMessageRange
    {
        /// <summary>
        /// SyncActionMessageRange lastMessageTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> lastMessageTimestamp { get; set; }

        /// <summary>
        /// SyncActionMessageRange lastSystemMessageTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> lastSystemMessageTimestamp { get; set; }

        /// <summary>
        /// SyncActionMessageRange messages
        /// </summary>
        List<proto.ISyncActionMessage> messages { get; set; }
    }

    /// <summary>
    /// Represents a SyncActionMessageRange.
    /// </summary>
    class SyncActionMessageRange : ISyncActionMessageRange
    {
        /// <summary>
        /// Constructs a new SyncActionMessageRange.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncActionMessageRange(proto.ISyncActionMessageRange properties = null)
        {
        }

        /// <summary>
        /// SyncActionMessageRange lastMessageTimestamp.
        /// </summary>
        public OrType<double, Long> lastMessageTimestamp { get; set; }
        /// <summary>
        /// SyncActionMessageRange lastSystemMessageTimestamp.
        /// </summary>
        public OrType<double, Long> lastSystemMessageTimestamp { get; set; }
        /// <summary>
        /// SyncActionMessageRange messages.
        /// </summary>
        public List<proto.ISyncActionMessage> messages { get; set; }

        /// <summary>
        /// Creates a new SyncActionMessageRange instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncActionMessageRange instance
        /// </returns>
        public static proto.SyncActionMessageRange create(proto.ISyncActionMessageRange properties = null);
        /// <summary>
        /// Encodes the specified SyncActionMessageRange message. Does not implicitly {@link proto.SyncActionMessageRange.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessageRange message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncActionMessageRange message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncActionMessageRange message, length delimited. Does not implicitly {@link proto.SyncActionMessageRange.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessageRange message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncActionMessageRange message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncActionMessageRange message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncActionMessageRange
        /// </returns>
        public static proto.SyncActionMessageRange decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncActionMessageRange message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncActionMessageRange
        /// </returns>
        public static proto.SyncActionMessageRange decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncActionMessageRange message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncActionMessageRange message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncActionMessageRange
        /// </returns>
        public static proto.SyncActionMessageRange fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncActionMessageRange message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessageRange
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncActionMessageRange message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncActionMessageRange to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncActionMessage.
    /// </summary>
    interface ISyncActionMessage
    {
        /// <summary>
        /// SyncActionMessage key
        /// </summary>
        proto.IMessageKey key { get; set; }

        /// <summary>
        /// SyncActionMessage timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }
    }

    /// <summary>
    /// Represents a SyncActionMessage.
    /// </summary>
    class SyncActionMessage : ISyncActionMessage
    {
        /// <summary>
        /// Constructs a new SyncActionMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncActionMessage(proto.ISyncActionMessage properties = null)
        {
        }

        /// <summary>
        /// SyncActionMessage key.
        /// </summary>
        public proto.IMessageKey key { get; set; }
        /// <summary>
        /// SyncActionMessage timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }

        /// <summary>
        /// Creates a new SyncActionMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncActionMessage instance
        /// </returns>
        public static proto.SyncActionMessage create(proto.ISyncActionMessage properties = null);
        /// <summary>
        /// Encodes the specified SyncActionMessage message. Does not implicitly {@link proto.SyncActionMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncActionMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncActionMessage message, length delimited. Does not implicitly {@link proto.SyncActionMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncActionMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncActionMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncActionMessage
        /// </returns>
        public static proto.SyncActionMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncActionMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncActionMessage
        /// </returns>
        public static proto.SyncActionMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncActionMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncActionMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncActionMessage
        /// </returns>
        public static proto.SyncActionMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncActionMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncActionMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncActionMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncActionMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a KeyExpiration.
    /// </summary>
    interface IKeyExpiration
    {
        /// <summary>
        /// KeyExpiration expiredKeyEpoch
        /// </summary>
        double? expiredKeyEpoch { get; set; }
    }

    /// <summary>
    /// Represents a KeyExpiration.
    /// </summary>
    class KeyExpiration : IKeyExpiration
    {
        /// <summary>
        /// Constructs a new KeyExpiration.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public KeyExpiration(proto.IKeyExpiration properties = null)
        {
        }

        /// <summary>
        /// KeyExpiration expiredKeyEpoch.
        /// </summary>
        public double expiredKeyEpoch { get; set; }

        /// <summary>
        /// Creates a new KeyExpiration instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// KeyExpiration instance
        /// </returns>
        public static proto.KeyExpiration create(proto.IKeyExpiration properties = null);
        /// <summary>
        /// Encodes the specified KeyExpiration message. Does not implicitly {@link proto.KeyExpiration.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// KeyExpiration message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IKeyExpiration message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified KeyExpiration message, length delimited. Does not implicitly {@link proto.KeyExpiration.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// KeyExpiration message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IKeyExpiration message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a KeyExpiration message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// KeyExpiration
        /// </returns>
        public static proto.KeyExpiration decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a KeyExpiration message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// KeyExpiration
        /// </returns>
        public static proto.KeyExpiration decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a KeyExpiration message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a KeyExpiration message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// KeyExpiration
        /// </returns>
        public static proto.KeyExpiration fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a KeyExpiration message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// KeyExpiration
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.KeyExpiration message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this KeyExpiration to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncActionValue.
    /// </summary>
    interface ISyncActionValue
    {
        /// <summary>
        /// SyncActionValue timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }

        /// <summary>
        /// SyncActionValue starAction
        /// </summary>
        proto.IStarAction starAction { get; set; }

        /// <summary>
        /// SyncActionValue contactAction
        /// </summary>
        proto.IContactAction contactAction { get; set; }

        /// <summary>
        /// SyncActionValue muteAction
        /// </summary>
        proto.IMuteAction muteAction { get; set; }

        /// <summary>
        /// SyncActionValue pinAction
        /// </summary>
        proto.IPinAction pinAction { get; set; }

        /// <summary>
        /// SyncActionValue securityNotificationSetting
        /// </summary>
        proto.ISecurityNotificationSetting securityNotificationSetting { get; set; }

        /// <summary>
        /// SyncActionValue pushNameSetting
        /// </summary>
        proto.IPushNameSetting pushNameSetting { get; set; }

        /// <summary>
        /// SyncActionValue quickReplyAction
        /// </summary>
        proto.IQuickReplyAction quickReplyAction { get; set; }

        /// <summary>
        /// SyncActionValue recentStickerWeightsAction
        /// </summary>
        proto.IRecentStickerWeightsAction recentStickerWeightsAction { get; set; }

        /// <summary>
        /// SyncActionValue recentStickerMetadata
        /// </summary>
        proto.IRecentStickerMetadata recentStickerMetadata { get; set; }

        /// <summary>
        /// SyncActionValue recentEmojiWeightsAction
        /// </summary>
        proto.IRecentEmojiWeightsAction recentEmojiWeightsAction { get; set; }

        /// <summary>
        /// SyncActionValue labelEditAction
        /// </summary>
        proto.ILabelEditAction labelEditAction { get; set; }

        /// <summary>
        /// SyncActionValue labelAssociationAction
        /// </summary>
        proto.ILabelAssociationAction labelAssociationAction { get; set; }

        /// <summary>
        /// SyncActionValue localeSetting
        /// </summary>
        proto.ILocaleSetting localeSetting { get; set; }

        /// <summary>
        /// SyncActionValue archiveChatAction
        /// </summary>
        proto.IArchiveChatAction archiveChatAction { get; set; }

        /// <summary>
        /// SyncActionValue deleteMessageForMeAction
        /// </summary>
        proto.IDeleteMessageForMeAction deleteMessageForMeAction { get; set; }

        /// <summary>
        /// SyncActionValue keyExpiration
        /// </summary>
        proto.IKeyExpiration keyExpiration { get; set; }

        /// <summary>
        /// SyncActionValue markChatAsReadAction
        /// </summary>
        proto.IMarkChatAsReadAction markChatAsReadAction { get; set; }

        /// <summary>
        /// SyncActionValue clearChatAction
        /// </summary>
        proto.IClearChatAction clearChatAction { get; set; }

        /// <summary>
        /// SyncActionValue deleteChatAction
        /// </summary>
        proto.IDeleteChatAction deleteChatAction { get; set; }

        /// <summary>
        /// SyncActionValue unarchiveChatsSetting
        /// </summary>
        proto.IUnarchiveChatsSetting unarchiveChatsSetting { get; set; }
    }

    /// <summary>
    /// Represents a SyncActionValue.
    /// </summary>
    class SyncActionValue : ISyncActionValue
    {
        /// <summary>
        /// Constructs a new SyncActionValue.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncActionValue(proto.ISyncActionValue properties = null)
        {
        }

        /// <summary>
        /// SyncActionValue timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }
        /// <summary>
        /// SyncActionValue starAction.
        /// </summary>
        public proto.IStarAction starAction { get; set; }
        /// <summary>
        /// SyncActionValue contactAction.
        /// </summary>
        public proto.IContactAction contactAction { get; set; }
        /// <summary>
        /// SyncActionValue muteAction.
        /// </summary>
        public proto.IMuteAction muteAction { get; set; }
        /// <summary>
        /// SyncActionValue pinAction.
        /// </summary>
        public proto.IPinAction pinAction { get; set; }
        /// <summary>
        /// SyncActionValue securityNotificationSetting.
        /// </summary>
        public proto.ISecurityNotificationSetting securityNotificationSetting { get; set; }
        /// <summary>
        /// SyncActionValue pushNameSetting.
        /// </summary>
        public proto.IPushNameSetting pushNameSetting { get; set; }
        /// <summary>
        /// SyncActionValue quickReplyAction.
        /// </summary>
        public proto.IQuickReplyAction quickReplyAction { get; set; }
        /// <summary>
        /// SyncActionValue recentStickerWeightsAction.
        /// </summary>
        public proto.IRecentStickerWeightsAction recentStickerWeightsAction { get; set; }
        /// <summary>
        /// SyncActionValue recentStickerMetadata.
        /// </summary>
        public proto.IRecentStickerMetadata recentStickerMetadata { get; set; }
        /// <summary>
        /// SyncActionValue recentEmojiWeightsAction.
        /// </summary>
        public proto.IRecentEmojiWeightsAction recentEmojiWeightsAction { get; set; }
        /// <summary>
        /// SyncActionValue labelEditAction.
        /// </summary>
        public proto.ILabelEditAction labelEditAction { get; set; }
        /// <summary>
        /// SyncActionValue labelAssociationAction.
        /// </summary>
        public proto.ILabelAssociationAction labelAssociationAction { get; set; }
        /// <summary>
        /// SyncActionValue localeSetting.
        /// </summary>
        public proto.ILocaleSetting localeSetting { get; set; }
        /// <summary>
        /// SyncActionValue archiveChatAction.
        /// </summary>
        public proto.IArchiveChatAction archiveChatAction { get; set; }
        /// <summary>
        /// SyncActionValue deleteMessageForMeAction.
        /// </summary>
        public proto.IDeleteMessageForMeAction deleteMessageForMeAction { get; set; }
        /// <summary>
        /// SyncActionValue keyExpiration.
        /// </summary>
        public proto.IKeyExpiration keyExpiration { get; set; }
        /// <summary>
        /// SyncActionValue markChatAsReadAction.
        /// </summary>
        public proto.IMarkChatAsReadAction markChatAsReadAction { get; set; }
        /// <summary>
        /// SyncActionValue clearChatAction.
        /// </summary>
        public proto.IClearChatAction clearChatAction { get; set; }
        /// <summary>
        /// SyncActionValue deleteChatAction.
        /// </summary>
        public proto.IDeleteChatAction deleteChatAction { get; set; }
        /// <summary>
        /// SyncActionValue unarchiveChatsSetting.
        /// </summary>
        public proto.IUnarchiveChatsSetting unarchiveChatsSetting { get; set; }

        /// <summary>
        /// Creates a new SyncActionValue instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncActionValue instance
        /// </returns>
        public static proto.SyncActionValue create(proto.ISyncActionValue properties = null);
        /// <summary>
        /// Encodes the specified SyncActionValue message. Does not implicitly {@link proto.SyncActionValue.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionValue message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncActionValue message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncActionValue message, length delimited. Does not implicitly {@link proto.SyncActionValue.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncActionValue message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncActionValue message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncActionValue message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncActionValue
        /// </returns>
        public static proto.SyncActionValue decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncActionValue message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncActionValue
        /// </returns>
        public static proto.SyncActionValue decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncActionValue message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncActionValue message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncActionValue
        /// </returns>
        public static proto.SyncActionValue fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncActionValue message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncActionValue
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncActionValue message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncActionValue to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RecentEmojiWeight.
    /// </summary>
    interface IRecentEmojiWeight
    {
        /// <summary>
        /// RecentEmojiWeight emoji
        /// </summary>
        string emoji { get; set; }

        /// <summary>
        /// RecentEmojiWeight weight
        /// </summary>
        double? weight { get; set; }
    }

    /// <summary>
    /// Represents a RecentEmojiWeight.
    /// </summary>
    class RecentEmojiWeight : IRecentEmojiWeight
    {
        /// <summary>
        /// Constructs a new RecentEmojiWeight.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RecentEmojiWeight(proto.IRecentEmojiWeight properties = null)
        {
        }

        /// <summary>
        /// RecentEmojiWeight emoji.
        /// </summary>
        public string emoji { get; set; }
        /// <summary>
        /// RecentEmojiWeight weight.
        /// </summary>
        public double weight { get; set; }

        /// <summary>
        /// Creates a new RecentEmojiWeight instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RecentEmojiWeight instance
        /// </returns>
        public static proto.RecentEmojiWeight create(proto.IRecentEmojiWeight properties = null);
        /// <summary>
        /// Encodes the specified RecentEmojiWeight message. Does not implicitly {@link proto.RecentEmojiWeight.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeight message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRecentEmojiWeight message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RecentEmojiWeight message, length delimited. Does not implicitly {@link proto.RecentEmojiWeight.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeight message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRecentEmojiWeight message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RecentEmojiWeight message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RecentEmojiWeight
        /// </returns>
        public static proto.RecentEmojiWeight decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RecentEmojiWeight message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RecentEmojiWeight
        /// </returns>
        public static proto.RecentEmojiWeight decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RecentEmojiWeight message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RecentEmojiWeight message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RecentEmojiWeight
        /// </returns>
        public static proto.RecentEmojiWeight fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RecentEmojiWeight message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RecentEmojiWeight
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RecentEmojiWeight message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RecentEmojiWeight to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RecentStickerWeight.
    /// </summary>
    interface IRecentStickerWeight
    {
        /// <summary>
        /// RecentStickerWeight filehash
        /// </summary>
        string filehash { get; set; }

        /// <summary>
        /// RecentStickerWeight weight
        /// </summary>
        double? weight { get; set; }
    }

    /// <summary>
    /// Represents a RecentStickerWeight.
    /// </summary>
    class RecentStickerWeight : IRecentStickerWeight
    {
        /// <summary>
        /// Constructs a new RecentStickerWeight.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RecentStickerWeight(proto.IRecentStickerWeight properties = null)
        {
        }

        /// <summary>
        /// RecentStickerWeight filehash.
        /// </summary>
        public string filehash { get; set; }
        /// <summary>
        /// RecentStickerWeight weight.
        /// </summary>
        public double weight { get; set; }

        /// <summary>
        /// Creates a new RecentStickerWeight instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RecentStickerWeight instance
        /// </returns>
        public static proto.RecentStickerWeight create(proto.IRecentStickerWeight properties = null);
        /// <summary>
        /// Encodes the specified RecentStickerWeight message. Does not implicitly {@link proto.RecentStickerWeight.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeight message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRecentStickerWeight message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RecentStickerWeight message, length delimited. Does not implicitly {@link proto.RecentStickerWeight.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeight message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRecentStickerWeight message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RecentStickerWeight message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RecentStickerWeight
        /// </returns>
        public static proto.RecentStickerWeight decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RecentStickerWeight message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RecentStickerWeight
        /// </returns>
        public static proto.RecentStickerWeight decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RecentStickerWeight message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RecentStickerWeight message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RecentStickerWeight
        /// </returns>
        public static proto.RecentStickerWeight fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RecentStickerWeight message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RecentStickerWeight
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RecentStickerWeight message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RecentStickerWeight to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdPatch.
    /// </summary>
    interface ISyncdPatch
    {
        /// <summary>
        /// SyncdPatch version
        /// </summary>
        proto.ISyncdVersion version { get; set; }

        /// <summary>
        /// SyncdPatch mutations
        /// </summary>
        List<proto.ISyncdMutation> mutations { get; set; }

        /// <summary>
        /// SyncdPatch externalMutations
        /// </summary>
        proto.IExternalBlobReference externalMutations { get; set; }

        /// <summary>
        /// SyncdPatch snapshotMac
        /// </summary>
        Uint8Array snapshotMac { get; set; }

        /// <summary>
        /// SyncdPatch patchMac
        /// </summary>
        Uint8Array patchMac { get; set; }

        /// <summary>
        /// SyncdPatch keyId
        /// </summary>
        proto.IKeyId keyId { get; set; }

        /// <summary>
        /// SyncdPatch exitCode
        /// </summary>
        proto.IExitCode exitCode { get; set; }

        /// <summary>
        /// SyncdPatch deviceIndex
        /// </summary>
        double? deviceIndex { get; set; }
    }

    /// <summary>
    /// Represents a SyncdPatch.
    /// </summary>
    class SyncdPatch : ISyncdPatch
    {
        /// <summary>
        /// Constructs a new SyncdPatch.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdPatch(proto.ISyncdPatch properties = null)
        {
        }

        /// <summary>
        /// SyncdPatch version.
        /// </summary>
        public proto.ISyncdVersion version { get; set; }
        /// <summary>
        /// SyncdPatch mutations.
        /// </summary>
        public List<proto.ISyncdMutation> mutations { get; set; }
        /// <summary>
        /// SyncdPatch externalMutations.
        /// </summary>
        public proto.IExternalBlobReference externalMutations { get; set; }
        /// <summary>
        /// SyncdPatch snapshotMac.
        /// </summary>
        public Uint8Array snapshotMac { get; set; }
        /// <summary>
        /// SyncdPatch patchMac.
        /// </summary>
        public Uint8Array patchMac { get; set; }
        /// <summary>
        /// SyncdPatch keyId.
        /// </summary>
        public proto.IKeyId keyId { get; set; }
        /// <summary>
        /// SyncdPatch exitCode.
        /// </summary>
        public proto.IExitCode exitCode { get; set; }
        /// <summary>
        /// SyncdPatch deviceIndex.
        /// </summary>
        public double deviceIndex { get; set; }

        /// <summary>
        /// Creates a new SyncdPatch instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdPatch instance
        /// </returns>
        public static proto.SyncdPatch create(proto.ISyncdPatch properties = null);
        /// <summary>
        /// Encodes the specified SyncdPatch message. Does not implicitly {@link proto.SyncdPatch.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdPatch message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdPatch message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdPatch message, length delimited. Does not implicitly {@link proto.SyncdPatch.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdPatch message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdPatch message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdPatch message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdPatch
        /// </returns>
        public static proto.SyncdPatch decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdPatch message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdPatch
        /// </returns>
        public static proto.SyncdPatch decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdPatch message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdPatch message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdPatch
        /// </returns>
        public static proto.SyncdPatch fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdPatch message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdPatch
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdPatch message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdPatch to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdMutation.
    /// </summary>
    interface ISyncdMutation
    {
        /// <summary>
        /// SyncdMutation operation
        /// </summary>
        proto.SyncdMutation.SyncdMutationSyncdOperation operation { get; set; }

        /// <summary>
        /// SyncdMutation record
        /// </summary>
        proto.ISyncdRecord record { get; set; }
    }

    /// <summary>
    /// Represents a SyncdMutation.
    /// </summary>
    class SyncdMutation : ISyncdMutation
    {
        /// <summary>
        /// Constructs a new SyncdMutation.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdMutation(proto.ISyncdMutation properties = null)
        {
        }

        /// <summary>
        /// SyncdMutation operation.
        /// </summary>
        public proto.SyncdMutation.SyncdMutationSyncdOperation operation { get; set; }
        /// <summary>
        /// SyncdMutation record.
        /// </summary>
        public proto.ISyncdRecord record { get; set; }

        /// <summary>
        /// Creates a new SyncdMutation instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdMutation instance
        /// </returns>
        public static proto.SyncdMutation create(proto.ISyncdMutation properties = null);
        /// <summary>
        /// Encodes the specified SyncdMutation message. Does not implicitly {@link proto.SyncdMutation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdMutation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdMutation message, length delimited. Does not implicitly {@link proto.SyncdMutation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdMutation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdMutation message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdMutation
        /// </returns>
        public static proto.SyncdMutation decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdMutation message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdMutation
        /// </returns>
        public static proto.SyncdMutation decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdMutation message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdMutation message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdMutation
        /// </returns>
        public static proto.SyncdMutation fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdMutation message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutation
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdMutation message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdMutation to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdMutations.
    /// </summary>
    interface ISyncdMutations
    {
        /// <summary>
        /// SyncdMutations mutations
        /// </summary>
        List<proto.ISyncdMutation> mutations { get; set; }
    }

    /// <summary>
    /// Represents a SyncdMutations.
    /// </summary>
    class SyncdMutations : ISyncdMutations
    {
        /// <summary>
        /// Constructs a new SyncdMutations.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdMutations(proto.ISyncdMutations properties = null)
        {
        }

        /// <summary>
        /// SyncdMutations mutations.
        /// </summary>
        public List<proto.ISyncdMutation> mutations { get; set; }

        /// <summary>
        /// Creates a new SyncdMutations instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdMutations instance
        /// </returns>
        public static proto.SyncdMutations create(proto.ISyncdMutations properties = null);
        /// <summary>
        /// Encodes the specified SyncdMutations message. Does not implicitly {@link proto.SyncdMutations.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutations message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdMutations message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdMutations message, length delimited. Does not implicitly {@link proto.SyncdMutations.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutations message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdMutations message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdMutations message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdMutations
        /// </returns>
        public static proto.SyncdMutations decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdMutations message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdMutations
        /// </returns>
        public static proto.SyncdMutations decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdMutations message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdMutations message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdMutations
        /// </returns>
        public static proto.SyncdMutations fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdMutations message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdMutations
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdMutations message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdMutations to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdSnapshot.
    /// </summary>
    interface ISyncdSnapshot
    {
        /// <summary>
        /// SyncdSnapshot version
        /// </summary>
        proto.ISyncdVersion version { get; set; }

        /// <summary>
        /// SyncdSnapshot records
        /// </summary>
        List<proto.ISyncdRecord> records { get; set; }

        /// <summary>
        /// SyncdSnapshot mac
        /// </summary>
        Uint8Array mac { get; set; }

        /// <summary>
        /// SyncdSnapshot keyId
        /// </summary>
        proto.IKeyId keyId { get; set; }
    }

    /// <summary>
    /// Represents a SyncdSnapshot.
    /// </summary>
    class SyncdSnapshot : ISyncdSnapshot
    {
        /// <summary>
        /// Constructs a new SyncdSnapshot.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdSnapshot(proto.ISyncdSnapshot properties = null)
        {
        }

        /// <summary>
        /// SyncdSnapshot version.
        /// </summary>
        public proto.ISyncdVersion version { get; set; }
        /// <summary>
        /// SyncdSnapshot records.
        /// </summary>
        public List<proto.ISyncdRecord> records { get; set; }
        /// <summary>
        /// SyncdSnapshot mac.
        /// </summary>
        public Uint8Array mac { get; set; }
        /// <summary>
        /// SyncdSnapshot keyId.
        /// </summary>
        public proto.IKeyId keyId { get; set; }

        /// <summary>
        /// Creates a new SyncdSnapshot instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdSnapshot instance
        /// </returns>
        public static proto.SyncdSnapshot create(proto.ISyncdSnapshot properties = null);
        /// <summary>
        /// Encodes the specified SyncdSnapshot message. Does not implicitly {@link proto.SyncdSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdSnapshot message, length delimited. Does not implicitly {@link proto.SyncdSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdSnapshot message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdSnapshot
        /// </returns>
        public static proto.SyncdSnapshot decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdSnapshot message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdSnapshot
        /// </returns>
        public static proto.SyncdSnapshot decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdSnapshot message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdSnapshot message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdSnapshot
        /// </returns>
        public static proto.SyncdSnapshot fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdSnapshot message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdSnapshot
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdSnapshot message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdSnapshot to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ExternalBlobReference.
    /// </summary>
    interface IExternalBlobReference
    {
        /// <summary>
        /// ExternalBlobReference mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// ExternalBlobReference directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// ExternalBlobReference handle
        /// </summary>
        string handle { get; set; }

        /// <summary>
        /// ExternalBlobReference fileSizeBytes
        /// </summary>
        Nullable<OrType<double, Long>> fileSizeBytes { get; set; }

        /// <summary>
        /// ExternalBlobReference fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// ExternalBlobReference fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }
    }

    /// <summary>
    /// Represents an ExternalBlobReference.
    /// </summary>
    class ExternalBlobReference : IExternalBlobReference
    {
        /// <summary>
        /// Constructs a new ExternalBlobReference.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ExternalBlobReference(proto.IExternalBlobReference properties = null)
        {
        }

        /// <summary>
        /// ExternalBlobReference mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// ExternalBlobReference directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// ExternalBlobReference handle.
        /// </summary>
        public string handle { get; set; }
        /// <summary>
        /// ExternalBlobReference fileSizeBytes.
        /// </summary>
        public OrType<double, Long> fileSizeBytes { get; set; }
        /// <summary>
        /// ExternalBlobReference fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// ExternalBlobReference fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// Creates a new ExternalBlobReference instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ExternalBlobReference instance
        /// </returns>
        public static proto.ExternalBlobReference create(proto.IExternalBlobReference properties = null);
        /// <summary>
        /// Encodes the specified ExternalBlobReference message. Does not implicitly {@link proto.ExternalBlobReference.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExternalBlobReference message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IExternalBlobReference message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ExternalBlobReference message, length delimited. Does not implicitly {@link proto.ExternalBlobReference.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExternalBlobReference message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IExternalBlobReference message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ExternalBlobReference message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ExternalBlobReference
        /// </returns>
        public static proto.ExternalBlobReference decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ExternalBlobReference message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ExternalBlobReference
        /// </returns>
        public static proto.ExternalBlobReference decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ExternalBlobReference message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ExternalBlobReference message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ExternalBlobReference
        /// </returns>
        public static proto.ExternalBlobReference fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ExternalBlobReference message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ExternalBlobReference
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ExternalBlobReference message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ExternalBlobReference to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdRecord.
    /// </summary>
    interface ISyncdRecord
    {
        /// <summary>
        /// SyncdRecord index
        /// </summary>
        proto.ISyncdIndex index { get; set; }

        /// <summary>
        /// SyncdRecord value
        /// </summary>
        proto.ISyncdValue value { get; set; }

        /// <summary>
        /// SyncdRecord keyId
        /// </summary>
        proto.IKeyId keyId { get; set; }
    }

    /// <summary>
    /// Represents a SyncdRecord.
    /// </summary>
    class SyncdRecord : ISyncdRecord
    {
        /// <summary>
        /// Constructs a new SyncdRecord.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdRecord(proto.ISyncdRecord properties = null)
        {
        }

        /// <summary>
        /// SyncdRecord index.
        /// </summary>
        public proto.ISyncdIndex index { get; set; }
        /// <summary>
        /// SyncdRecord value.
        /// </summary>
        public proto.ISyncdValue value { get; set; }
        /// <summary>
        /// SyncdRecord keyId.
        /// </summary>
        public proto.IKeyId keyId { get; set; }

        /// <summary>
        /// Creates a new SyncdRecord instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdRecord instance
        /// </returns>
        public static proto.SyncdRecord create(proto.ISyncdRecord properties = null);
        /// <summary>
        /// Encodes the specified SyncdRecord message. Does not implicitly {@link proto.SyncdRecord.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdRecord message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdRecord message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdRecord message, length delimited. Does not implicitly {@link proto.SyncdRecord.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdRecord message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdRecord message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdRecord message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdRecord
        /// </returns>
        public static proto.SyncdRecord decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdRecord message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdRecord
        /// </returns>
        public static proto.SyncdRecord decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdRecord message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdRecord message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdRecord
        /// </returns>
        public static proto.SyncdRecord fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdRecord message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdRecord
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdRecord message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdRecord to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a KeyId.
    /// </summary>
    interface IKeyId
    {
        /// <summary>
        /// KeyId id
        /// </summary>
        Uint8Array id { get; set; }
    }

    /// <summary>
    /// Represents a KeyId.
    /// </summary>
    class KeyId : IKeyId
    {
        /// <summary>
        /// Constructs a new KeyId.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public KeyId(proto.IKeyId properties = null)
        {
        }

        /// <summary>
        /// KeyId id.
        /// </summary>
        public Uint8Array id { get; set; }

        /// <summary>
        /// Creates a new KeyId instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// KeyId instance
        /// </returns>
        public static proto.KeyId create(proto.IKeyId properties = null);
        /// <summary>
        /// Encodes the specified KeyId message. Does not implicitly {@link proto.KeyId.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// KeyId message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IKeyId message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified KeyId message, length delimited. Does not implicitly {@link proto.KeyId.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// KeyId message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IKeyId message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a KeyId message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// KeyId
        /// </returns>
        public static proto.KeyId decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a KeyId message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// KeyId
        /// </returns>
        public static proto.KeyId decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a KeyId message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a KeyId message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// KeyId
        /// </returns>
        public static proto.KeyId fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a KeyId message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// KeyId
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.KeyId message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this KeyId to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdValue.
    /// </summary>
    interface ISyncdValue
    {
        /// <summary>
        /// SyncdValue blob
        /// </summary>
        Uint8Array blob { get; set; }
    }

    /// <summary>
    /// Represents a SyncdValue.
    /// </summary>
    class SyncdValue : ISyncdValue
    {
        /// <summary>
        /// Constructs a new SyncdValue.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdValue(proto.ISyncdValue properties = null)
        {
        }

        /// <summary>
        /// SyncdValue blob.
        /// </summary>
        public Uint8Array blob { get; set; }

        /// <summary>
        /// Creates a new SyncdValue instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdValue instance
        /// </returns>
        public static proto.SyncdValue create(proto.ISyncdValue properties = null);
        /// <summary>
        /// Encodes the specified SyncdValue message. Does not implicitly {@link proto.SyncdValue.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdValue message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdValue message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdValue message, length delimited. Does not implicitly {@link proto.SyncdValue.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdValue message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdValue message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdValue message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdValue
        /// </returns>
        public static proto.SyncdValue decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdValue message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdValue
        /// </returns>
        public static proto.SyncdValue decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdValue message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdValue message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdValue
        /// </returns>
        public static proto.SyncdValue fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdValue message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdValue
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdValue message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdValue to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdIndex.
    /// </summary>
    interface ISyncdIndex
    {
        /// <summary>
        /// SyncdIndex blob
        /// </summary>
        Uint8Array blob { get; set; }
    }

    /// <summary>
    /// Represents a SyncdIndex.
    /// </summary>
    class SyncdIndex : ISyncdIndex
    {
        /// <summary>
        /// Constructs a new SyncdIndex.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdIndex(proto.ISyncdIndex properties = null)
        {
        }

        /// <summary>
        /// SyncdIndex blob.
        /// </summary>
        public Uint8Array blob { get; set; }

        /// <summary>
        /// Creates a new SyncdIndex instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdIndex instance
        /// </returns>
        public static proto.SyncdIndex create(proto.ISyncdIndex properties = null);
        /// <summary>
        /// Encodes the specified SyncdIndex message. Does not implicitly {@link proto.SyncdIndex.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdIndex message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdIndex message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdIndex message, length delimited. Does not implicitly {@link proto.SyncdIndex.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdIndex message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdIndex message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdIndex message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdIndex
        /// </returns>
        public static proto.SyncdIndex decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdIndex message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdIndex
        /// </returns>
        public static proto.SyncdIndex decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdIndex message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdIndex message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdIndex
        /// </returns>
        public static proto.SyncdIndex fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdIndex message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdIndex
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdIndex message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdIndex to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ExitCode.
    /// </summary>
    interface IExitCode
    {
        /// <summary>
        /// ExitCode code
        /// </summary>
        Nullable<OrType<double, Long>> code { get; set; }

        /// <summary>
        /// ExitCode text
        /// </summary>
        string text { get; set; }
    }

    /// <summary>
    /// Represents an ExitCode.
    /// </summary>
    class ExitCode : IExitCode
    {
        /// <summary>
        /// Constructs a new ExitCode.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ExitCode(proto.IExitCode properties = null)
        {
        }

        /// <summary>
        /// ExitCode code.
        /// </summary>
        public OrType<double, Long> code { get; set; }
        /// <summary>
        /// ExitCode text.
        /// </summary>
        public string text { get; set; }

        /// <summary>
        /// Creates a new ExitCode instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ExitCode instance
        /// </returns>
        public static proto.ExitCode create(proto.IExitCode properties = null);
        /// <summary>
        /// Encodes the specified ExitCode message. Does not implicitly {@link proto.ExitCode.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExitCode message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IExitCode message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ExitCode message, length delimited. Does not implicitly {@link proto.ExitCode.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExitCode message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IExitCode message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ExitCode message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ExitCode
        /// </returns>
        public static proto.ExitCode decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ExitCode message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ExitCode
        /// </returns>
        public static proto.ExitCode decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ExitCode message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ExitCode message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ExitCode
        /// </returns>
        public static proto.ExitCode fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ExitCode message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ExitCode
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ExitCode message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ExitCode to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SyncdVersion.
    /// </summary>
    interface ISyncdVersion
    {
        /// <summary>
        /// SyncdVersion version
        /// </summary>
        Nullable<OrType<double, Long>> version { get; set; }
    }

    /// <summary>
    /// Represents a SyncdVersion.
    /// </summary>
    class SyncdVersion : ISyncdVersion
    {
        /// <summary>
        /// Constructs a new SyncdVersion.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SyncdVersion(proto.ISyncdVersion properties = null)
        {
        }

        /// <summary>
        /// SyncdVersion version.
        /// </summary>
        public OrType<double, Long> version { get; set; }

        /// <summary>
        /// Creates a new SyncdVersion instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SyncdVersion instance
        /// </returns>
        public static proto.SyncdVersion create(proto.ISyncdVersion properties = null);
        /// <summary>
        /// Encodes the specified SyncdVersion message. Does not implicitly {@link proto.SyncdVersion.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdVersion message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISyncdVersion message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SyncdVersion message, length delimited. Does not implicitly {@link proto.SyncdVersion.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SyncdVersion message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISyncdVersion message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SyncdVersion message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SyncdVersion
        /// </returns>
        public static proto.SyncdVersion decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SyncdVersion message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SyncdVersion
        /// </returns>
        public static proto.SyncdVersion decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SyncdVersion message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SyncdVersion message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SyncdVersion
        /// </returns>
        public static proto.SyncdVersion fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SyncdVersion message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SyncdVersion
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SyncdVersion message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SyncdVersion to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ServerErrorReceipt.
    /// </summary>
    interface IServerErrorReceipt
    {
        /// <summary>
        /// ServerErrorReceipt stanzaId
        /// </summary>
        string stanzaId { get; set; }
    }

    /// <summary>
    /// Represents a ServerErrorReceipt.
    /// </summary>
    class ServerErrorReceipt : IServerErrorReceipt
    {
        /// <summary>
        /// Constructs a new ServerErrorReceipt.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ServerErrorReceipt(proto.IServerErrorReceipt properties = null)
        {
        }

        /// <summary>
        /// ServerErrorReceipt stanzaId.
        /// </summary>
        public string stanzaId { get; set; }

        /// <summary>
        /// Creates a new ServerErrorReceipt instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ServerErrorReceipt instance
        /// </returns>
        public static proto.ServerErrorReceipt create(proto.IServerErrorReceipt properties = null);
        /// <summary>
        /// Encodes the specified ServerErrorReceipt message. Does not implicitly {@link proto.ServerErrorReceipt.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ServerErrorReceipt message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IServerErrorReceipt message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ServerErrorReceipt message, length delimited. Does not implicitly {@link proto.ServerErrorReceipt.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ServerErrorReceipt message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IServerErrorReceipt message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ServerErrorReceipt message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ServerErrorReceipt
        /// </returns>
        public static proto.ServerErrorReceipt decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ServerErrorReceipt message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ServerErrorReceipt
        /// </returns>
        public static proto.ServerErrorReceipt decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ServerErrorReceipt message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ServerErrorReceipt message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ServerErrorReceipt
        /// </returns>
        public static proto.ServerErrorReceipt fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ServerErrorReceipt message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ServerErrorReceipt
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ServerErrorReceipt message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ServerErrorReceipt to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MediaRetryNotification.
    /// </summary>
    interface IMediaRetryNotification
    {
        /// <summary>
        /// MediaRetryNotification stanzaId
        /// </summary>
        string stanzaId { get; set; }

        /// <summary>
        /// MediaRetryNotification directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// MediaRetryNotification result
        /// </summary>
        proto.MediaRetryNotification.MediaRetryNotificationResultType result { get; set; }
    }

    /// <summary>
    /// Represents a MediaRetryNotification.
    /// </summary>
    class MediaRetryNotification : IMediaRetryNotification
    {
        /// <summary>
        /// Constructs a new MediaRetryNotification.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MediaRetryNotification(proto.IMediaRetryNotification properties = null)
        {
        }

        /// <summary>
        /// MediaRetryNotification stanzaId.
        /// </summary>
        public string stanzaId { get; set; }
        /// <summary>
        /// MediaRetryNotification directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// MediaRetryNotification result.
        /// </summary>
        public proto.MediaRetryNotification.MediaRetryNotificationResultType result { get; set; }

        /// <summary>
        /// Creates a new MediaRetryNotification instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MediaRetryNotification instance
        /// </returns>
        public static proto.MediaRetryNotification create(proto.IMediaRetryNotification properties = null);
        /// <summary>
        /// Encodes the specified MediaRetryNotification message. Does not implicitly {@link proto.MediaRetryNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MediaRetryNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMediaRetryNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MediaRetryNotification message, length delimited. Does not implicitly {@link proto.MediaRetryNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MediaRetryNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMediaRetryNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MediaRetryNotification message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MediaRetryNotification
        /// </returns>
        public static proto.MediaRetryNotification decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MediaRetryNotification message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MediaRetryNotification
        /// </returns>
        public static proto.MediaRetryNotification decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MediaRetryNotification message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MediaRetryNotification message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MediaRetryNotification
        /// </returns>
        public static proto.MediaRetryNotification fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MediaRetryNotification message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MediaRetryNotification
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MediaRetryNotification message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MediaRetryNotification to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MsgOpaqueData.
    /// </summary>
    interface IMsgOpaqueData
    {
        /// <summary>
        /// MsgOpaqueData body
        /// </summary>
        string body { get; set; }

        /// <summary>
        /// MsgOpaqueData caption
        /// </summary>
        string caption { get; set; }

        /// <summary>
        /// MsgOpaqueData clientUrl
        /// </summary>
        string clientUrl { get; set; }

        /// <summary>
        /// MsgOpaqueData lng
        /// </summary>
        double? lng { get; set; }

        /// <summary>
        /// MsgOpaqueData lat
        /// </summary>
        double? lat { get; set; }

        /// <summary>
        /// MsgOpaqueData paymentAmount1000
        /// </summary>
        double? paymentAmount1000 { get; set; }

        /// <summary>
        /// MsgOpaqueData paymentNoteMsgBody
        /// </summary>
        string paymentNoteMsgBody { get; set; }

        /// <summary>
        /// MsgOpaqueData canonicalUrl
        /// </summary>
        string canonicalUrl { get; set; }

        /// <summary>
        /// MsgOpaqueData matchedText
        /// </summary>
        string matchedText { get; set; }

        /// <summary>
        /// MsgOpaqueData title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// MsgOpaqueData description
        /// </summary>
        string description { get; set; }
    }

    /// <summary>
    /// Represents a MsgOpaqueData.
    /// </summary>
    class MsgOpaqueData : IMsgOpaqueData
    {
        /// <summary>
        /// Constructs a new MsgOpaqueData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MsgOpaqueData(proto.IMsgOpaqueData properties = null)
        {
        }

        /// <summary>
        /// MsgOpaqueData body.
        /// </summary>
        public string body { get; set; }
        /// <summary>
        /// MsgOpaqueData caption.
        /// </summary>
        public string caption { get; set; }
        /// <summary>
        /// MsgOpaqueData clientUrl.
        /// </summary>
        public string clientUrl { get; set; }
        /// <summary>
        /// MsgOpaqueData lng.
        /// </summary>
        public double lng { get; set; }
        /// <summary>
        /// MsgOpaqueData lat.
        /// </summary>
        public double lat { get; set; }
        /// <summary>
        /// MsgOpaqueData paymentAmount1000.
        /// </summary>
        public double paymentAmount1000 { get; set; }
        /// <summary>
        /// MsgOpaqueData paymentNoteMsgBody.
        /// </summary>
        public string paymentNoteMsgBody { get; set; }
        /// <summary>
        /// MsgOpaqueData canonicalUrl.
        /// </summary>
        public string canonicalUrl { get; set; }
        /// <summary>
        /// MsgOpaqueData matchedText.
        /// </summary>
        public string matchedText { get; set; }
        /// <summary>
        /// MsgOpaqueData title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// MsgOpaqueData description.
        /// </summary>
        public string description { get; set; }

        /// <summary>
        /// Creates a new MsgOpaqueData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MsgOpaqueData instance
        /// </returns>
        public static proto.MsgOpaqueData create(proto.IMsgOpaqueData properties = null);
        /// <summary>
        /// Encodes the specified MsgOpaqueData message. Does not implicitly {@link proto.MsgOpaqueData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MsgOpaqueData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMsgOpaqueData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MsgOpaqueData message, length delimited. Does not implicitly {@link proto.MsgOpaqueData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MsgOpaqueData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMsgOpaqueData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MsgOpaqueData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MsgOpaqueData
        /// </returns>
        public static proto.MsgOpaqueData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MsgOpaqueData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MsgOpaqueData
        /// </returns>
        public static proto.MsgOpaqueData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MsgOpaqueData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MsgOpaqueData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MsgOpaqueData
        /// </returns>
        public static proto.MsgOpaqueData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MsgOpaqueData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MsgOpaqueData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MsgOpaqueData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MsgOpaqueData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MsgRowOpaqueData.
    /// </summary>
    interface IMsgRowOpaqueData
    {
        /// <summary>
        /// MsgRowOpaqueData currentMsg
        /// </summary>
        proto.IMsgOpaqueData currentMsg { get; set; }

        /// <summary>
        /// MsgRowOpaqueData quotedMsg
        /// </summary>
        proto.IMsgOpaqueData quotedMsg { get; set; }
    }

    /// <summary>
    /// Represents a MsgRowOpaqueData.
    /// </summary>
    class MsgRowOpaqueData : IMsgRowOpaqueData
    {
        /// <summary>
        /// Constructs a new MsgRowOpaqueData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MsgRowOpaqueData(proto.IMsgRowOpaqueData properties = null)
        {
        }

        /// <summary>
        /// MsgRowOpaqueData currentMsg.
        /// </summary>
        public proto.IMsgOpaqueData currentMsg { get; set; }
        /// <summary>
        /// MsgRowOpaqueData quotedMsg.
        /// </summary>
        public proto.IMsgOpaqueData quotedMsg { get; set; }

        /// <summary>
        /// Creates a new MsgRowOpaqueData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MsgRowOpaqueData instance
        /// </returns>
        public static proto.MsgRowOpaqueData create(proto.IMsgRowOpaqueData properties = null);
        /// <summary>
        /// Encodes the specified MsgRowOpaqueData message. Does not implicitly {@link proto.MsgRowOpaqueData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MsgRowOpaqueData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMsgRowOpaqueData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MsgRowOpaqueData message, length delimited. Does not implicitly {@link proto.MsgRowOpaqueData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MsgRowOpaqueData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMsgRowOpaqueData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MsgRowOpaqueData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MsgRowOpaqueData
        /// </returns>
        public static proto.MsgRowOpaqueData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MsgRowOpaqueData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MsgRowOpaqueData
        /// </returns>
        public static proto.MsgRowOpaqueData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MsgRowOpaqueData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MsgRowOpaqueData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MsgRowOpaqueData
        /// </returns>
        public static proto.MsgRowOpaqueData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MsgRowOpaqueData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MsgRowOpaqueData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MsgRowOpaqueData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MsgRowOpaqueData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Pushname.
    /// </summary>
    interface IPushname
    {
        /// <summary>
        /// Pushname id
        /// </summary>
        string id { get; set; }

        /// <summary>
        /// Pushname pushname
        /// </summary>
        string pushname { get; set; }
    }

    /// <summary>
    /// Represents a Pushname.
    /// </summary>
    class Pushname : IPushname
    {
        /// <summary>
        /// Constructs a new Pushname.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Pushname(proto.IPushname properties = null)
        {
        }

        /// <summary>
        /// Pushname id.
        /// </summary>
        public string id { get; set; }
        /// <summary>
        /// Pushname pushname.
        /// </summary>
        public string pushname { get; set; }

        /// <summary>
        /// Creates a new Pushname instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Pushname instance
        /// </returns>
        public static proto.Pushname create(proto.IPushname properties = null);
        /// <summary>
        /// Encodes the specified Pushname message. Does not implicitly {@link proto.Pushname.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Pushname message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPushname message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Pushname message, length delimited. Does not implicitly {@link proto.Pushname.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Pushname message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPushname message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Pushname message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Pushname
        /// </returns>
        public static proto.Pushname decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Pushname message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Pushname
        /// </returns>
        public static proto.Pushname decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Pushname message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Pushname message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Pushname
        /// </returns>
        public static proto.Pushname fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Pushname message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Pushname
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Pushname message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Pushname to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HistorySyncMsg.
    /// </summary>
    interface IHistorySyncMsg
    {
        /// <summary>
        /// HistorySyncMsg message
        /// </summary>
        proto.IWebMessageInfo message { get; set; }

        /// <summary>
        /// HistorySyncMsg msgOrderId
        /// </summary>
        Nullable<OrType<double, Long>> msgOrderId { get; set; }
    }

    /// <summary>
    /// Represents a HistorySyncMsg.
    /// </summary>
    class HistorySyncMsg : IHistorySyncMsg
    {
        /// <summary>
        /// Constructs a new HistorySyncMsg.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HistorySyncMsg(proto.IHistorySyncMsg properties = null)
        {
        }

        /// <summary>
        /// HistorySyncMsg message.
        /// </summary>
        public proto.IWebMessageInfo message { get; set; }
        /// <summary>
        /// HistorySyncMsg msgOrderId.
        /// </summary>
        public OrType<double, Long> msgOrderId { get; set; }

        /// <summary>
        /// Creates a new HistorySyncMsg instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HistorySyncMsg instance
        /// </returns>
        public static proto.HistorySyncMsg create(proto.IHistorySyncMsg properties = null);
        /// <summary>
        /// Encodes the specified HistorySyncMsg message. Does not implicitly {@link proto.HistorySyncMsg.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncMsg message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHistorySyncMsg message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HistorySyncMsg message, length delimited. Does not implicitly {@link proto.HistorySyncMsg.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncMsg message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHistorySyncMsg message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HistorySyncMsg message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HistorySyncMsg
        /// </returns>
        public static proto.HistorySyncMsg decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HistorySyncMsg message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HistorySyncMsg
        /// </returns>
        public static proto.HistorySyncMsg decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HistorySyncMsg message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HistorySyncMsg message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HistorySyncMsg
        /// </returns>
        public static proto.HistorySyncMsg fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HistorySyncMsg message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncMsg
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HistorySyncMsg message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HistorySyncMsg to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Conversation.
    /// </summary>
    interface IConversation
    {
        /// <summary>
        /// Conversation id
        /// </summary>
        string id { get; set; }

        /// <summary>
        /// Conversation messages
        /// </summary>
        List<proto.IHistorySyncMsg> messages { get; set; }

        /// <summary>
        /// Conversation newJid
        /// </summary>
        string newJid { get; set; }

        /// <summary>
        /// Conversation oldJid
        /// </summary>
        string oldJid { get; set; }

        /// <summary>
        /// Conversation lastMsgTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> lastMsgTimestamp { get; set; }

        /// <summary>
        /// Conversation unreadCount
        /// </summary>
        double? unreadCount { get; set; }

        /// <summary>
        /// Conversation readOnly
        /// </summary>
        bool? readOnly { get; set; }

        /// <summary>
        /// Conversation endOfHistoryTransfer
        /// </summary>
        bool? endOfHistoryTransfer { get; set; }

        /// <summary>
        /// Conversation ephemeralExpiration
        /// </summary>
        double? ephemeralExpiration { get; set; }

        /// <summary>
        /// Conversation ephemeralSettingTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> ephemeralSettingTimestamp { get; set; }

        /// <summary>
        /// Conversation endOfHistoryTransferType
        /// </summary>
        proto.Conversation.ConversationEndOfHistoryTransferType endOfHistoryTransferType { get; set; }

        /// <summary>
        /// Conversation conversationTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> conversationTimestamp { get; set; }

        /// <summary>
        /// Conversation name
        /// </summary>
        string name { get; set; }

        /// <summary>
        /// Conversation pHash
        /// </summary>
        string pHash { get; set; }

        /// <summary>
        /// Conversation notSpam
        /// </summary>
        bool? notSpam { get; set; }
    }

    /// <summary>
    /// Represents a Conversation.
    /// </summary>
    class Conversation : IConversation
    {
        /// <summary>
        /// Constructs a new Conversation.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Conversation(proto.IConversation properties = null)
        {
        }

        /// <summary>
        /// Conversation id.
        /// </summary>
        public string id { get; set; }
        /// <summary>
        /// Conversation messages.
        /// </summary>
        public List<proto.IHistorySyncMsg> messages { get; set; }
        /// <summary>
        /// Conversation newJid.
        /// </summary>
        public string newJid { get; set; }
        /// <summary>
        /// Conversation oldJid.
        /// </summary>
        public string oldJid { get; set; }
        /// <summary>
        /// Conversation lastMsgTimestamp.
        /// </summary>
        public OrType<double, Long> lastMsgTimestamp { get; set; }
        /// <summary>
        /// Conversation unreadCount.
        /// </summary>
        public double unreadCount { get; set; }
        /// <summary>
        /// Conversation readOnly.
        /// </summary>
        public bool readOnly { get; set; }
        /// <summary>
        /// Conversation endOfHistoryTransfer.
        /// </summary>
        public bool endOfHistoryTransfer { get; set; }
        /// <summary>
        /// Conversation ephemeralExpiration.
        /// </summary>
        public double ephemeralExpiration { get; set; }
        /// <summary>
        /// Conversation ephemeralSettingTimestamp.
        /// </summary>
        public OrType<double, Long> ephemeralSettingTimestamp { get; set; }
        /// <summary>
        /// Conversation endOfHistoryTransferType.
        /// </summary>
        public proto.Conversation.ConversationEndOfHistoryTransferType endOfHistoryTransferType { get; set; }
        /// <summary>
        /// Conversation conversationTimestamp.
        /// </summary>
        public OrType<double, Long> conversationTimestamp { get; set; }
        /// <summary>
        /// Conversation name.
        /// </summary>
        public string name { get; set; }
        /// <summary>
        /// Conversation pHash.
        /// </summary>
        public string pHash { get; set; }
        /// <summary>
        /// Conversation notSpam.
        /// </summary>
        public bool notSpam { get; set; }

        /// <summary>
        /// Creates a new Conversation instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Conversation instance
        /// </returns>
        public static proto.Conversation create(proto.IConversation properties = null);
        /// <summary>
        /// Encodes the specified Conversation message. Does not implicitly {@link proto.Conversation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Conversation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IConversation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Conversation message, length delimited. Does not implicitly {@link proto.Conversation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Conversation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IConversation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Conversation message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Conversation
        /// </returns>
        public static proto.Conversation decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Conversation message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Conversation
        /// </returns>
        public static proto.Conversation decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Conversation message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Conversation message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Conversation
        /// </returns>
        public static proto.Conversation fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Conversation message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Conversation
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Conversation message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Conversation to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HistorySync.
    /// </summary>
    interface IHistorySync
    {
        /// <summary>
        /// HistorySync syncType
        /// </summary>
        proto.HistorySync.HistorySyncHistorySyncType syncType { get; set; }

        /// <summary>
        /// HistorySync conversations
        /// </summary>
        List<proto.IConversation> conversations { get; set; }

        /// <summary>
        /// HistorySync statusV3Messages
        /// </summary>
        List<proto.IWebMessageInfo> statusV3Messages { get; set; }

        /// <summary>
        /// HistorySync chunkOrder
        /// </summary>
        double? chunkOrder { get; set; }

        /// <summary>
        /// HistorySync progress
        /// </summary>
        double? progress { get; set; }

        /// <summary>
        /// HistorySync pushnames
        /// </summary>
        List<proto.IPushname> pushnames { get; set; }
    }

    /// <summary>
    /// Represents a HistorySync.
    /// </summary>
    class HistorySync : IHistorySync
    {
        /// <summary>
        /// Constructs a new HistorySync.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HistorySync(proto.IHistorySync properties = null)
        {
        }

        /// <summary>
        /// HistorySync syncType.
        /// </summary>
        public proto.HistorySync.HistorySyncHistorySyncType syncType { get; set; }
        /// <summary>
        /// HistorySync conversations.
        /// </summary>
        public List<proto.IConversation> conversations { get; set; }
        /// <summary>
        /// HistorySync statusV3Messages.
        /// </summary>
        public List<proto.IWebMessageInfo> statusV3Messages { get; set; }
        /// <summary>
        /// HistorySync chunkOrder.
        /// </summary>
        public double chunkOrder { get; set; }
        /// <summary>
        /// HistorySync progress.
        /// </summary>
        public double progress { get; set; }
        /// <summary>
        /// HistorySync pushnames.
        /// </summary>
        public List<proto.IPushname> pushnames { get; set; }

        /// <summary>
        /// Creates a new HistorySync instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HistorySync instance
        /// </returns>
        public static proto.HistorySync create(proto.IHistorySync properties = null);
        /// <summary>
        /// Encodes the specified HistorySync message. Does not implicitly {@link proto.HistorySync.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySync message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHistorySync message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HistorySync message, length delimited. Does not implicitly {@link proto.HistorySync.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySync message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHistorySync message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HistorySync message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HistorySync
        /// </returns>
        public static proto.HistorySync decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HistorySync message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HistorySync
        /// </returns>
        public static proto.HistorySync decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HistorySync message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HistorySync message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HistorySync
        /// </returns>
        public static proto.HistorySync fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HistorySync message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HistorySync
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HistorySync message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HistorySync to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an EphemeralSetting.
    /// </summary>
    interface IEphemeralSetting
    {
        /// <summary>
        /// EphemeralSetting duration
        /// </summary>
        double? duration { get; set; }

        /// <summary>
        /// EphemeralSetting timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }
    }

    /// <summary>
    /// Represents an EphemeralSetting.
    /// </summary>
    class EphemeralSetting : IEphemeralSetting
    {
        /// <summary>
        /// Constructs a new EphemeralSetting.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public EphemeralSetting(proto.IEphemeralSetting properties = null)
        {
        }

        /// <summary>
        /// EphemeralSetting duration.
        /// </summary>
        public double duration { get; set; }
        /// <summary>
        /// EphemeralSetting timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }

        /// <summary>
        /// Creates a new EphemeralSetting instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// EphemeralSetting instance
        /// </returns>
        public static proto.EphemeralSetting create(proto.IEphemeralSetting properties = null);
        /// <summary>
        /// Encodes the specified EphemeralSetting message. Does not implicitly {@link proto.EphemeralSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// EphemeralSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IEphemeralSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified EphemeralSetting message, length delimited. Does not implicitly {@link proto.EphemeralSetting.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// EphemeralSetting message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IEphemeralSetting message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an EphemeralSetting message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// EphemeralSetting
        /// </returns>
        public static proto.EphemeralSetting decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an EphemeralSetting message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// EphemeralSetting
        /// </returns>
        public static proto.EphemeralSetting decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an EphemeralSetting message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an EphemeralSetting message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// EphemeralSetting
        /// </returns>
        public static proto.EphemeralSetting fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an EphemeralSetting message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// EphemeralSetting
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.EphemeralSetting message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this EphemeralSetting to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PaymentBackground.
    /// </summary>
    interface IPaymentBackground
    {
        /// <summary>
        /// PaymentBackground id
        /// </summary>
        string id { get; set; }

        /// <summary>
        /// PaymentBackground fileLength
        /// </summary>
        string fileLength { get; set; }

        /// <summary>
        /// PaymentBackground width
        /// </summary>
        double? width { get; set; }

        /// <summary>
        /// PaymentBackground height
        /// </summary>
        double? height { get; set; }

        /// <summary>
        /// PaymentBackground mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// PaymentBackground placeholderArgb
        /// </summary>
        double? placeholderArgb { get; set; }

        /// <summary>
        /// PaymentBackground textArgb
        /// </summary>
        double? textArgb { get; set; }

        /// <summary>
        /// PaymentBackground subtextArgb
        /// </summary>
        double? subtextArgb { get; set; }
    }

    /// <summary>
    /// Represents a PaymentBackground.
    /// </summary>
    class PaymentBackground : IPaymentBackground
    {
        /// <summary>
        /// Constructs a new PaymentBackground.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PaymentBackground(proto.IPaymentBackground properties = null)
        {
        }

        /// <summary>
        /// PaymentBackground id.
        /// </summary>
        public string id { get; set; }
        /// <summary>
        /// PaymentBackground fileLength.
        /// </summary>
        public string fileLength { get; set; }
        /// <summary>
        /// PaymentBackground width.
        /// </summary>
        public double width { get; set; }
        /// <summary>
        /// PaymentBackground height.
        /// </summary>
        public double height { get; set; }
        /// <summary>
        /// PaymentBackground mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// PaymentBackground placeholderArgb.
        /// </summary>
        public double placeholderArgb { get; set; }
        /// <summary>
        /// PaymentBackground textArgb.
        /// </summary>
        public double textArgb { get; set; }
        /// <summary>
        /// PaymentBackground subtextArgb.
        /// </summary>
        public double subtextArgb { get; set; }

        /// <summary>
        /// Creates a new PaymentBackground instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PaymentBackground instance
        /// </returns>
        public static proto.PaymentBackground create(proto.IPaymentBackground properties = null);
        /// <summary>
        /// Encodes the specified PaymentBackground message. Does not implicitly {@link proto.PaymentBackground.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentBackground message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPaymentBackground message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PaymentBackground message, length delimited. Does not implicitly {@link proto.PaymentBackground.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentBackground message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPaymentBackground message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PaymentBackground message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PaymentBackground
        /// </returns>
        public static proto.PaymentBackground decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PaymentBackground message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PaymentBackground
        /// </returns>
        public static proto.PaymentBackground decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PaymentBackground message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PaymentBackground message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PaymentBackground
        /// </returns>
        public static proto.PaymentBackground fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PaymentBackground message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PaymentBackground
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PaymentBackground message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PaymentBackground to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Money.
    /// </summary>
    interface IMoney
    {
        /// <summary>
        /// Money value
        /// </summary>
        Nullable<OrType<double, Long>> value { get; set; }

        /// <summary>
        /// Money offset
        /// </summary>
        double? offset { get; set; }

        /// <summary>
        /// Money currencyCode
        /// </summary>
        string currencyCode { get; set; }
    }

    /// <summary>
    /// Represents a Money.
    /// </summary>
    class Money : IMoney
    {
        /// <summary>
        /// Constructs a new Money.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Money(proto.IMoney properties = null)
        {
        }

        /// <summary>
        /// Money value.
        /// </summary>
        public OrType<double, Long> value { get; set; }
        /// <summary>
        /// Money offset.
        /// </summary>
        public double offset { get; set; }
        /// <summary>
        /// Money currencyCode.
        /// </summary>
        public string currencyCode { get; set; }

        /// <summary>
        /// Creates a new Money instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Money instance
        /// </returns>
        public static proto.Money create(proto.IMoney properties = null);
        /// <summary>
        /// Encodes the specified Money message. Does not implicitly {@link proto.Money.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Money message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMoney message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Money message, length delimited. Does not implicitly {@link proto.Money.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Money message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMoney message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Money message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Money
        /// </returns>
        public static proto.Money decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Money message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Money
        /// </returns>
        public static proto.Money decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Money message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Money message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Money
        /// </returns>
        public static proto.Money fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Money message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Money
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Money message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Money to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HydratedQuickReplyButton.
    /// </summary>
    interface IHydratedQuickReplyButton
    {
        /// <summary>
        /// HydratedQuickReplyButton displayText
        /// </summary>
        string displayText { get; set; }

        /// <summary>
        /// HydratedQuickReplyButton id
        /// </summary>
        string id { get; set; }
    }

    /// <summary>
    /// Represents a HydratedQuickReplyButton.
    /// </summary>
    class HydratedQuickReplyButton : IHydratedQuickReplyButton
    {
        /// <summary>
        /// Constructs a new HydratedQuickReplyButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HydratedQuickReplyButton(proto.IHydratedQuickReplyButton properties = null)
        {
        }

        /// <summary>
        /// HydratedQuickReplyButton displayText.
        /// </summary>
        public string displayText { get; set; }
        /// <summary>
        /// HydratedQuickReplyButton id.
        /// </summary>
        public string id { get; set; }

        /// <summary>
        /// Creates a new HydratedQuickReplyButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HydratedQuickReplyButton instance
        /// </returns>
        public static proto.HydratedQuickReplyButton create(proto.IHydratedQuickReplyButton properties = null);
        /// <summary>
        /// Encodes the specified HydratedQuickReplyButton message. Does not implicitly {@link proto.HydratedQuickReplyButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedQuickReplyButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHydratedQuickReplyButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HydratedQuickReplyButton message, length delimited. Does not implicitly {@link proto.HydratedQuickReplyButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedQuickReplyButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHydratedQuickReplyButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HydratedQuickReplyButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HydratedQuickReplyButton
        /// </returns>
        public static proto.HydratedQuickReplyButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HydratedQuickReplyButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HydratedQuickReplyButton
        /// </returns>
        public static proto.HydratedQuickReplyButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HydratedQuickReplyButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HydratedQuickReplyButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HydratedQuickReplyButton
        /// </returns>
        public static proto.HydratedQuickReplyButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HydratedQuickReplyButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HydratedQuickReplyButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HydratedQuickReplyButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HydratedQuickReplyButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HydratedURLButton.
    /// </summary>
    interface IHydratedURLButton
    {
        /// <summary>
        /// HydratedURLButton displayText
        /// </summary>
        string displayText { get; set; }

        /// <summary>
        /// HydratedURLButton url
        /// </summary>
        string url { get; set; }
    }

    /// <summary>
    /// Represents a HydratedURLButton.
    /// </summary>
    class HydratedURLButton : IHydratedURLButton
    {
        /// <summary>
        /// Constructs a new HydratedURLButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HydratedURLButton(proto.IHydratedURLButton properties = null)
        {
        }

        /// <summary>
        /// HydratedURLButton displayText.
        /// </summary>
        public string displayText { get; set; }
        /// <summary>
        /// HydratedURLButton url.
        /// </summary>
        public string url { get; set; }

        /// <summary>
        /// Creates a new HydratedURLButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HydratedURLButton instance
        /// </returns>
        public static proto.HydratedURLButton create(proto.IHydratedURLButton properties = null);
        /// <summary>
        /// Encodes the specified HydratedURLButton message. Does not implicitly {@link proto.HydratedURLButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedURLButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHydratedURLButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HydratedURLButton message, length delimited. Does not implicitly {@link proto.HydratedURLButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedURLButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHydratedURLButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HydratedURLButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HydratedURLButton
        /// </returns>
        public static proto.HydratedURLButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HydratedURLButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HydratedURLButton
        /// </returns>
        public static proto.HydratedURLButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HydratedURLButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HydratedURLButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HydratedURLButton
        /// </returns>
        public static proto.HydratedURLButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HydratedURLButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HydratedURLButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HydratedURLButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HydratedURLButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HydratedCallButton.
    /// </summary>
    interface IHydratedCallButton
    {
        /// <summary>
        /// HydratedCallButton displayText
        /// </summary>
        string displayText { get; set; }

        /// <summary>
        /// HydratedCallButton phoneNumber
        /// </summary>
        string phoneNumber { get; set; }
    }

    /// <summary>
    /// Represents a HydratedCallButton.
    /// </summary>
    class HydratedCallButton : IHydratedCallButton
    {
        /// <summary>
        /// Constructs a new HydratedCallButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HydratedCallButton(proto.IHydratedCallButton properties = null)
        {
        }

        /// <summary>
        /// HydratedCallButton displayText.
        /// </summary>
        public string displayText { get; set; }
        /// <summary>
        /// HydratedCallButton phoneNumber.
        /// </summary>
        public string phoneNumber { get; set; }

        /// <summary>
        /// Creates a new HydratedCallButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HydratedCallButton instance
        /// </returns>
        public static proto.HydratedCallButton create(proto.IHydratedCallButton properties = null);
        /// <summary>
        /// Encodes the specified HydratedCallButton message. Does not implicitly {@link proto.HydratedCallButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedCallButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHydratedCallButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HydratedCallButton message, length delimited. Does not implicitly {@link proto.HydratedCallButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedCallButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHydratedCallButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HydratedCallButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HydratedCallButton
        /// </returns>
        public static proto.HydratedCallButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HydratedCallButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HydratedCallButton
        /// </returns>
        public static proto.HydratedCallButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HydratedCallButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HydratedCallButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HydratedCallButton
        /// </returns>
        public static proto.HydratedCallButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HydratedCallButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HydratedCallButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HydratedCallButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HydratedCallButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HydratedTemplateButton.
    /// </summary>
    interface IHydratedTemplateButton
    {
        /// <summary>
        /// HydratedTemplateButton index
        /// </summary>
        double? index { get; set; }

        /// <summary>
        /// HydratedTemplateButton quickReplyButton
        /// </summary>
        proto.IHydratedQuickReplyButton quickReplyButton { get; set; }

        /// <summary>
        /// HydratedTemplateButton urlButton
        /// </summary>
        proto.IHydratedURLButton urlButton { get; set; }

        /// <summary>
        /// HydratedTemplateButton callButton
        /// </summary>
        proto.IHydratedCallButton callButton { get; set; }
    }

    /// <summary>
    /// Represents a HydratedTemplateButton.
    /// </summary>
    class HydratedTemplateButton : IHydratedTemplateButton
    {
        /// <summary>
        /// Constructs a new HydratedTemplateButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HydratedTemplateButton(proto.IHydratedTemplateButton properties = null)
        {
        }

        /// <summary>
        /// HydratedTemplateButton index.
        /// </summary>
        public double index { get; set; }
        /// <summary>
        /// HydratedTemplateButton quickReplyButton.
        /// </summary>
        public proto.IHydratedQuickReplyButton quickReplyButton { get; set; }
        /// <summary>
        /// HydratedTemplateButton urlButton.
        /// </summary>
        public proto.IHydratedURLButton urlButton { get; set; }
        /// <summary>
        /// HydratedTemplateButton callButton.
        /// </summary>
        public proto.IHydratedCallButton callButton { get; set; }
        /// <summary>
        /// HydratedTemplateButton hydratedButton.
        /// </summary>
        public string /*quickReplyButton*/ hydratedButton { get; set; }

        /// <summary>
        /// Creates a new HydratedTemplateButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HydratedTemplateButton instance
        /// </returns>
        public static proto.HydratedTemplateButton create(proto.IHydratedTemplateButton properties = null);
        /// <summary>
        /// Encodes the specified HydratedTemplateButton message. Does not implicitly {@link proto.HydratedTemplateButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedTemplateButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHydratedTemplateButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HydratedTemplateButton message, length delimited. Does not implicitly {@link proto.HydratedTemplateButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedTemplateButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHydratedTemplateButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HydratedTemplateButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HydratedTemplateButton
        /// </returns>
        public static proto.HydratedTemplateButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HydratedTemplateButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HydratedTemplateButton
        /// </returns>
        public static proto.HydratedTemplateButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HydratedTemplateButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HydratedTemplateButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HydratedTemplateButton
        /// </returns>
        public static proto.HydratedTemplateButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HydratedTemplateButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HydratedTemplateButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HydratedTemplateButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HydratedTemplateButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a QuickReplyButton.
    /// </summary>
    interface IQuickReplyButton
    {
        /// <summary>
        /// QuickReplyButton displayText
        /// </summary>
        proto.IHighlyStructuredMessage displayText { get; set; }

        /// <summary>
        /// QuickReplyButton id
        /// </summary>
        string id { get; set; }
    }

    /// <summary>
    /// Represents a QuickReplyButton.
    /// </summary>
    class QuickReplyButton : IQuickReplyButton
    {
        /// <summary>
        /// Constructs a new QuickReplyButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public QuickReplyButton(proto.IQuickReplyButton properties = null)
        {
        }

        /// <summary>
        /// QuickReplyButton displayText.
        /// </summary>
        public proto.IHighlyStructuredMessage displayText { get; set; }
        /// <summary>
        /// QuickReplyButton id.
        /// </summary>
        public string id { get; set; }

        /// <summary>
        /// Creates a new QuickReplyButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// QuickReplyButton instance
        /// </returns>
        public static proto.QuickReplyButton create(proto.IQuickReplyButton properties = null);
        /// <summary>
        /// Encodes the specified QuickReplyButton message. Does not implicitly {@link proto.QuickReplyButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IQuickReplyButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified QuickReplyButton message, length delimited. Does not implicitly {@link proto.QuickReplyButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IQuickReplyButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a QuickReplyButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// QuickReplyButton
        /// </returns>
        public static proto.QuickReplyButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a QuickReplyButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// QuickReplyButton
        /// </returns>
        public static proto.QuickReplyButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a QuickReplyButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a QuickReplyButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// QuickReplyButton
        /// </returns>
        public static proto.QuickReplyButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a QuickReplyButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// QuickReplyButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.QuickReplyButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this QuickReplyButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a URLButton.
    /// </summary>
    interface IURLButton
    {
        /// <summary>
        /// URLButton displayText
        /// </summary>
        proto.IHighlyStructuredMessage displayText { get; set; }

        /// <summary>
        /// URLButton url
        /// </summary>
        proto.IHighlyStructuredMessage url { get; set; }
    }

    /// <summary>
    /// Represents a URLButton.
    /// </summary>
    class URLButton : IURLButton
    {
        /// <summary>
        /// Constructs a new URLButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public URLButton(proto.IURLButton properties = null)
        {
        }

        /// <summary>
        /// URLButton displayText.
        /// </summary>
        public proto.IHighlyStructuredMessage displayText { get; set; }
        /// <summary>
        /// URLButton url.
        /// </summary>
        public proto.IHighlyStructuredMessage url { get; set; }

        /// <summary>
        /// Creates a new URLButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// URLButton instance
        /// </returns>
        public static proto.URLButton create(proto.IURLButton properties = null);
        /// <summary>
        /// Encodes the specified URLButton message. Does not implicitly {@link proto.URLButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// URLButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IURLButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified URLButton message, length delimited. Does not implicitly {@link proto.URLButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// URLButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IURLButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a URLButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// URLButton
        /// </returns>
        public static proto.URLButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a URLButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// URLButton
        /// </returns>
        public static proto.URLButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a URLButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a URLButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// URLButton
        /// </returns>
        public static proto.URLButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a URLButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// URLButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.URLButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this URLButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a CallButton.
    /// </summary>
    interface ICallButton
    {
        /// <summary>
        /// CallButton displayText
        /// </summary>
        proto.IHighlyStructuredMessage displayText { get; set; }

        /// <summary>
        /// CallButton phoneNumber
        /// </summary>
        proto.IHighlyStructuredMessage phoneNumber { get; set; }
    }

    /// <summary>
    /// Represents a CallButton.
    /// </summary>
    class CallButton : ICallButton
    {
        /// <summary>
        /// Constructs a new CallButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public CallButton(proto.ICallButton properties = null)
        {
        }

        /// <summary>
        /// CallButton displayText.
        /// </summary>
        public proto.IHighlyStructuredMessage displayText { get; set; }
        /// <summary>
        /// CallButton phoneNumber.
        /// </summary>
        public proto.IHighlyStructuredMessage phoneNumber { get; set; }

        /// <summary>
        /// Creates a new CallButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// CallButton instance
        /// </returns>
        public static proto.CallButton create(proto.ICallButton properties = null);
        /// <summary>
        /// Encodes the specified CallButton message. Does not implicitly {@link proto.CallButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CallButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICallButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified CallButton message, length delimited. Does not implicitly {@link proto.CallButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CallButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICallButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a CallButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// CallButton
        /// </returns>
        public static proto.CallButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a CallButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// CallButton
        /// </returns>
        public static proto.CallButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a CallButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a CallButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// CallButton
        /// </returns>
        public static proto.CallButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a CallButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// CallButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.CallButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this CallButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a TemplateButton.
    /// </summary>
    interface ITemplateButton
    {
        /// <summary>
        /// TemplateButton index
        /// </summary>
        double? index { get; set; }

        /// <summary>
        /// TemplateButton quickReplyButton
        /// </summary>
        proto.IQuickReplyButton quickReplyButton { get; set; }

        /// <summary>
        /// TemplateButton urlButton
        /// </summary>
        proto.IURLButton urlButton { get; set; }

        /// <summary>
        /// TemplateButton callButton
        /// </summary>
        proto.ICallButton callButton { get; set; }
    }

    /// <summary>
    /// Represents a TemplateButton.
    /// </summary>
    class TemplateButton : ITemplateButton
    {
        /// <summary>
        /// Constructs a new TemplateButton.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public TemplateButton(proto.ITemplateButton properties = null)
        {
        }

        /// <summary>
        /// TemplateButton index.
        /// </summary>
        public double index { get; set; }
        /// <summary>
        /// TemplateButton quickReplyButton.
        /// </summary>
        public proto.IQuickReplyButton quickReplyButton { get; set; }
        /// <summary>
        /// TemplateButton urlButton.
        /// </summary>
        public proto.IURLButton urlButton { get; set; }
        /// <summary>
        /// TemplateButton callButton.
        /// </summary>
        public proto.ICallButton callButton { get; set; }
        /// <summary>
        /// TemplateButton button.
        /// </summary>
        public string /*quickReplyButton*/ button { get; set; }

        /// <summary>
        /// Creates a new TemplateButton instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// TemplateButton instance
        /// </returns>
        public static proto.TemplateButton create(proto.ITemplateButton properties = null);
        /// <summary>
        /// Encodes the specified TemplateButton message. Does not implicitly {@link proto.TemplateButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ITemplateButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified TemplateButton message, length delimited. Does not implicitly {@link proto.TemplateButton.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateButton message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ITemplateButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a TemplateButton message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// TemplateButton
        /// </returns>
        public static proto.TemplateButton decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a TemplateButton message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// TemplateButton
        /// </returns>
        public static proto.TemplateButton decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a TemplateButton message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a TemplateButton message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// TemplateButton
        /// </returns>
        public static proto.TemplateButton fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a TemplateButton message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// TemplateButton
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.TemplateButton message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this TemplateButton to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Location.
    /// </summary>
    interface ILocation
    {
        /// <summary>
        /// Location degreesLatitude
        /// </summary>
        double? degreesLatitude { get; set; }

        /// <summary>
        /// Location degreesLongitude
        /// </summary>
        double? degreesLongitude { get; set; }

        /// <summary>
        /// Location name
        /// </summary>
        string name { get; set; }
    }

    /// <summary>
    /// Represents a Location.
    /// </summary>
    class Location : ILocation
    {
        /// <summary>
        /// Constructs a new Location.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Location(proto.ILocation properties = null)
        {
        }

        /// <summary>
        /// Location degreesLatitude.
        /// </summary>
        public double degreesLatitude { get; set; }
        /// <summary>
        /// Location degreesLongitude.
        /// </summary>
        public double degreesLongitude { get; set; }
        /// <summary>
        /// Location name.
        /// </summary>
        public string name { get; set; }

        /// <summary>
        /// Creates a new Location instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Location instance
        /// </returns>
        public static proto.Location create(proto.ILocation properties = null);
        /// <summary>
        /// Encodes the specified Location message. Does not implicitly {@link proto.Location.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Location message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILocation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Location message, length delimited. Does not implicitly {@link proto.Location.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Location message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILocation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Location message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Location
        /// </returns>
        public static proto.Location decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Location message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Location
        /// </returns>
        public static proto.Location decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Location message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Location message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Location
        /// </returns>
        public static proto.Location fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Location message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Location
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Location message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Location to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Point.
    /// </summary>
    interface IPoint
    {
        /// <summary>
        /// Point xDeprecated
        /// </summary>
        double? xDeprecated { get; set; }

        /// <summary>
        /// Point yDeprecated
        /// </summary>
        double? yDeprecated { get; set; }

        /// <summary>
        /// Point x
        /// </summary>
        double? x { get; set; }

        /// <summary>
        /// Point y
        /// </summary>
        double? y { get; set; }
    }

    /// <summary>
    /// Represents a Point.
    /// </summary>
    class Point : IPoint
    {
        /// <summary>
        /// Constructs a new Point.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Point(proto.IPoint properties = null)
        {
        }

        /// <summary>
        /// Point xDeprecated.
        /// </summary>
        public double xDeprecated { get; set; }
        /// <summary>
        /// Point yDeprecated.
        /// </summary>
        public double yDeprecated { get; set; }
        /// <summary>
        /// Point x.
        /// </summary>
        public double x { get; set; }
        /// <summary>
        /// Point y.
        /// </summary>
        public double y { get; set; }

        /// <summary>
        /// Creates a new Point instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Point instance
        /// </returns>
        public static proto.Point create(proto.IPoint properties = null);
        /// <summary>
        /// Encodes the specified Point message. Does not implicitly {@link proto.Point.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Point message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPoint message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Point message, length delimited. Does not implicitly {@link proto.Point.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Point message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPoint message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Point message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Point
        /// </returns>
        public static proto.Point decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Point message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Point
        /// </returns>
        public static proto.Point decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Point message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Point message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Point
        /// </returns>
        public static proto.Point fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Point message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Point
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Point message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Point to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an InteractiveAnnotation.
    /// </summary>
    interface IInteractiveAnnotation
    {
        /// <summary>
        /// InteractiveAnnotation polygonVertices
        /// </summary>
        List<proto.IPoint> polygonVertices { get; set; }

        /// <summary>
        /// InteractiveAnnotation location
        /// </summary>
        proto.ILocation location { get; set; }
    }

    /// <summary>
    /// Represents an InteractiveAnnotation.
    /// </summary>
    class InteractiveAnnotation : IInteractiveAnnotation
    {
        /// <summary>
        /// Constructs a new InteractiveAnnotation.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public InteractiveAnnotation(proto.IInteractiveAnnotation properties = null)
        {
        }

        /// <summary>
        /// InteractiveAnnotation polygonVertices.
        /// </summary>
        public List<proto.IPoint> polygonVertices { get; set; }
        /// <summary>
        /// InteractiveAnnotation location.
        /// </summary>
        public proto.ILocation location { get; set; }
        /// <summary>
        /// InteractiveAnnotation action.
        /// </summary>
        public string /*location*/ action { get; set; }

        /// <summary>
        /// Creates a new InteractiveAnnotation instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// InteractiveAnnotation instance
        /// </returns>
        public static proto.InteractiveAnnotation create(proto.IInteractiveAnnotation properties = null);
        /// <summary>
        /// Encodes the specified InteractiveAnnotation message. Does not implicitly {@link proto.InteractiveAnnotation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InteractiveAnnotation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IInteractiveAnnotation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified InteractiveAnnotation message, length delimited. Does not implicitly {@link proto.InteractiveAnnotation.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InteractiveAnnotation message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IInteractiveAnnotation message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an InteractiveAnnotation message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// InteractiveAnnotation
        /// </returns>
        public static proto.InteractiveAnnotation decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an InteractiveAnnotation message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// InteractiveAnnotation
        /// </returns>
        public static proto.InteractiveAnnotation decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an InteractiveAnnotation message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an InteractiveAnnotation message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// InteractiveAnnotation
        /// </returns>
        public static proto.InteractiveAnnotation fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an InteractiveAnnotation message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// InteractiveAnnotation
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.InteractiveAnnotation message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this InteractiveAnnotation to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DeviceListMetadata.
    /// </summary>
    interface IDeviceListMetadata
    {
        /// <summary>
        /// DeviceListMetadata senderKeyHash
        /// </summary>
        Uint8Array senderKeyHash { get; set; }

        /// <summary>
        /// DeviceListMetadata senderTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> senderTimestamp { get; set; }

        /// <summary>
        /// DeviceListMetadata senderKeyIndexes
        /// </summary>
        List<double> senderKeyIndexes { get; set; }

        /// <summary>
        /// DeviceListMetadata recipientKeyHash
        /// </summary>
        Uint8Array recipientKeyHash { get; set; }

        /// <summary>
        /// DeviceListMetadata recipientTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> recipientTimestamp { get; set; }

        /// <summary>
        /// DeviceListMetadata recipientKeyIndexes
        /// </summary>
        List<double> recipientKeyIndexes { get; set; }
    }

    /// <summary>
    /// Represents a DeviceListMetadata.
    /// </summary>
    class DeviceListMetadata : IDeviceListMetadata
    {
        /// <summary>
        /// Constructs a new DeviceListMetadata.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DeviceListMetadata(proto.IDeviceListMetadata properties = null)
        {
        }

        /// <summary>
        /// DeviceListMetadata senderKeyHash.
        /// </summary>
        public Uint8Array senderKeyHash { get; set; }
        /// <summary>
        /// DeviceListMetadata senderTimestamp.
        /// </summary>
        public OrType<double, Long> senderTimestamp { get; set; }
        /// <summary>
        /// DeviceListMetadata senderKeyIndexes.
        /// </summary>
        public List<double> senderKeyIndexes { get; set; }
        /// <summary>
        /// DeviceListMetadata recipientKeyHash.
        /// </summary>
        public Uint8Array recipientKeyHash { get; set; }
        /// <summary>
        /// DeviceListMetadata recipientTimestamp.
        /// </summary>
        public OrType<double, Long> recipientTimestamp { get; set; }
        /// <summary>
        /// DeviceListMetadata recipientKeyIndexes.
        /// </summary>
        public List<double> recipientKeyIndexes { get; set; }

        /// <summary>
        /// Creates a new DeviceListMetadata instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DeviceListMetadata instance
        /// </returns>
        public static proto.DeviceListMetadata create(proto.IDeviceListMetadata properties = null);
        /// <summary>
        /// Encodes the specified DeviceListMetadata message. Does not implicitly {@link proto.DeviceListMetadata.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeviceListMetadata message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDeviceListMetadata message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DeviceListMetadata message, length delimited. Does not implicitly {@link proto.DeviceListMetadata.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeviceListMetadata message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDeviceListMetadata message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DeviceListMetadata message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DeviceListMetadata
        /// </returns>
        public static proto.DeviceListMetadata decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DeviceListMetadata message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DeviceListMetadata
        /// </returns>
        public static proto.DeviceListMetadata decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DeviceListMetadata message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DeviceListMetadata message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DeviceListMetadata
        /// </returns>
        public static proto.DeviceListMetadata fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DeviceListMetadata message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DeviceListMetadata
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DeviceListMetadata message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DeviceListMetadata to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MessageContextInfo.
    /// </summary>
    interface IMessageContextInfo
    {
        /// <summary>
        /// MessageContextInfo deviceListMetadata
        /// </summary>
        proto.IDeviceListMetadata deviceListMetadata { get; set; }

        /// <summary>
        /// MessageContextInfo deviceListMetadataVersion
        /// </summary>
        double? deviceListMetadataVersion { get; set; }
    }

    /// <summary>
    /// Represents a MessageContextInfo.
    /// </summary>
    class MessageContextInfo : IMessageContextInfo
    {
        /// <summary>
        /// Constructs a new MessageContextInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MessageContextInfo(proto.IMessageContextInfo properties = null)
        {
        }

        /// <summary>
        /// MessageContextInfo deviceListMetadata.
        /// </summary>
        public proto.IDeviceListMetadata deviceListMetadata { get; set; }
        /// <summary>
        /// MessageContextInfo deviceListMetadataVersion.
        /// </summary>
        public double deviceListMetadataVersion { get; set; }

        /// <summary>
        /// Creates a new MessageContextInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MessageContextInfo instance
        /// </returns>
        public static proto.MessageContextInfo create(proto.IMessageContextInfo properties = null);
        /// <summary>
        /// Encodes the specified MessageContextInfo message. Does not implicitly {@link proto.MessageContextInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MessageContextInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMessageContextInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MessageContextInfo message, length delimited. Does not implicitly {@link proto.MessageContextInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MessageContextInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMessageContextInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MessageContextInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MessageContextInfo
        /// </returns>
        public static proto.MessageContextInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MessageContextInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MessageContextInfo
        /// </returns>
        public static proto.MessageContextInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MessageContextInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MessageContextInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MessageContextInfo
        /// </returns>
        public static proto.MessageContextInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MessageContextInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MessageContextInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MessageContextInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MessageContextInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AdReplyInfo.
    /// </summary>
    interface IAdReplyInfo
    {
        /// <summary>
        /// AdReplyInfo advertiserName
        /// </summary>
        string advertiserName { get; set; }

        /// <summary>
        /// AdReplyInfo mediaType
        /// </summary>
        proto.AdReplyInfo.AdReplyInfoMediaType mediaType { get; set; }

        /// <summary>
        /// AdReplyInfo jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// AdReplyInfo caption
        /// </summary>
        string caption { get; set; }
    }

    /// <summary>
    /// Represents an AdReplyInfo.
    /// </summary>
    class AdReplyInfo : IAdReplyInfo
    {
        /// <summary>
        /// Constructs a new AdReplyInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AdReplyInfo(proto.IAdReplyInfo properties = null)
        {
        }

        /// <summary>
        /// AdReplyInfo advertiserName.
        /// </summary>
        public string advertiserName { get; set; }
        /// <summary>
        /// AdReplyInfo mediaType.
        /// </summary>
        public proto.AdReplyInfo.AdReplyInfoMediaType mediaType { get; set; }
        /// <summary>
        /// AdReplyInfo jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// AdReplyInfo caption.
        /// </summary>
        public string caption { get; set; }

        /// <summary>
        /// Creates a new AdReplyInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AdReplyInfo instance
        /// </returns>
        public static proto.AdReplyInfo create(proto.IAdReplyInfo properties = null);
        /// <summary>
        /// Encodes the specified AdReplyInfo message. Does not implicitly {@link proto.AdReplyInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AdReplyInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAdReplyInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AdReplyInfo message, length delimited. Does not implicitly {@link proto.AdReplyInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AdReplyInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAdReplyInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AdReplyInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AdReplyInfo
        /// </returns>
        public static proto.AdReplyInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AdReplyInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AdReplyInfo
        /// </returns>
        public static proto.AdReplyInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AdReplyInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AdReplyInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AdReplyInfo
        /// </returns>
        public static proto.AdReplyInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AdReplyInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AdReplyInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AdReplyInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AdReplyInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ExternalAdReplyInfo.
    /// </summary>
    interface IExternalAdReplyInfo
    {
        /// <summary>
        /// ExternalAdReplyInfo title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo body
        /// </summary>
        string body { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo mediaType
        /// </summary>
        proto.ExternalAdReplyInfo.ExternalAdReplyInfoMediaType mediaType { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo thumbnailUrl
        /// </summary>
        string thumbnailUrl { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo mediaUrl
        /// </summary>
        string mediaUrl { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo thumbnail
        /// </summary>
        Uint8Array thumbnail { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo sourceType
        /// </summary>
        string sourceType { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo sourceId
        /// </summary>
        string sourceId { get; set; }

        /// <summary>
        /// ExternalAdReplyInfo sourceUrl
        /// </summary>
        string sourceUrl { get; set; }
    }

    /// <summary>
    /// Represents an ExternalAdReplyInfo.
    /// </summary>
    class ExternalAdReplyInfo : IExternalAdReplyInfo
    {
        /// <summary>
        /// Constructs a new ExternalAdReplyInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ExternalAdReplyInfo(proto.IExternalAdReplyInfo properties = null)
        {
        }

        /// <summary>
        /// ExternalAdReplyInfo title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo body.
        /// </summary>
        public string body { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo mediaType.
        /// </summary>
        public proto.ExternalAdReplyInfo.ExternalAdReplyInfoMediaType mediaType { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo thumbnailUrl.
        /// </summary>
        public string thumbnailUrl { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo mediaUrl.
        /// </summary>
        public string mediaUrl { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo thumbnail.
        /// </summary>
        public Uint8Array thumbnail { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo sourceType.
        /// </summary>
        public string sourceType { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo sourceId.
        /// </summary>
        public string sourceId { get; set; }
        /// <summary>
        /// ExternalAdReplyInfo sourceUrl.
        /// </summary>
        public string sourceUrl { get; set; }

        /// <summary>
        /// Creates a new ExternalAdReplyInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ExternalAdReplyInfo instance
        /// </returns>
        public static proto.ExternalAdReplyInfo create(proto.IExternalAdReplyInfo properties = null);
        /// <summary>
        /// Encodes the specified ExternalAdReplyInfo message. Does not implicitly {@link proto.ExternalAdReplyInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExternalAdReplyInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IExternalAdReplyInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ExternalAdReplyInfo message, length delimited. Does not implicitly {@link proto.ExternalAdReplyInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExternalAdReplyInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IExternalAdReplyInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ExternalAdReplyInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ExternalAdReplyInfo
        /// </returns>
        public static proto.ExternalAdReplyInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ExternalAdReplyInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ExternalAdReplyInfo
        /// </returns>
        public static proto.ExternalAdReplyInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ExternalAdReplyInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ExternalAdReplyInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ExternalAdReplyInfo
        /// </returns>
        public static proto.ExternalAdReplyInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ExternalAdReplyInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ExternalAdReplyInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ExternalAdReplyInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ExternalAdReplyInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ContextInfo.
    /// </summary>
    interface IContextInfo
    {
        /// <summary>
        /// ContextInfo stanzaId
        /// </summary>
        string stanzaId { get; set; }

        /// <summary>
        /// ContextInfo participant
        /// </summary>
        string participant { get; set; }

        /// <summary>
        /// ContextInfo quotedMessage
        /// </summary>
        proto.IMessage quotedMessage { get; set; }

        /// <summary>
        /// ContextInfo remoteJid
        /// </summary>
        string remoteJid { get; set; }

        /// <summary>
        /// ContextInfo mentionedJid
        /// </summary>
        List<string> mentionedJid { get; set; }

        /// <summary>
        /// ContextInfo conversionSource
        /// </summary>
        string conversionSource { get; set; }

        /// <summary>
        /// ContextInfo conversionData
        /// </summary>
        Uint8Array conversionData { get; set; }

        /// <summary>
        /// ContextInfo conversionDelaySeconds
        /// </summary>
        double? conversionDelaySeconds { get; set; }

        /// <summary>
        /// ContextInfo forwardingScore
        /// </summary>
        double? forwardingScore { get; set; }

        /// <summary>
        /// ContextInfo isForwarded
        /// </summary>
        bool? isForwarded { get; set; }

        /// <summary>
        /// ContextInfo quotedAd
        /// </summary>
        proto.IAdReplyInfo quotedAd { get; set; }

        /// <summary>
        /// ContextInfo placeholderKey
        /// </summary>
        proto.IMessageKey placeholderKey { get; set; }

        /// <summary>
        /// ContextInfo expiration
        /// </summary>
        double? expiration { get; set; }

        /// <summary>
        /// ContextInfo ephemeralSettingTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> ephemeralSettingTimestamp { get; set; }

        /// <summary>
        /// ContextInfo ephemeralSharedSecret
        /// </summary>
        Uint8Array ephemeralSharedSecret { get; set; }

        /// <summary>
        /// ContextInfo externalAdReply
        /// </summary>
        proto.IExternalAdReplyInfo externalAdReply { get; set; }

        /// <summary>
        /// ContextInfo entryPointConversionSource
        /// </summary>
        string entryPointConversionSource { get; set; }

        /// <summary>
        /// ContextInfo entryPointConversionApp
        /// </summary>
        string entryPointConversionApp { get; set; }

        /// <summary>
        /// ContextInfo entryPointConversionDelaySeconds
        /// </summary>
        double? entryPointConversionDelaySeconds { get; set; }
    }

    /// <summary>
    /// Represents a ContextInfo.
    /// </summary>
    class ContextInfo : IContextInfo
    {
        /// <summary>
        /// Constructs a new ContextInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ContextInfo(proto.IContextInfo properties = null)
        {
        }

        /// <summary>
        /// ContextInfo stanzaId.
        /// </summary>
        public string stanzaId { get; set; }
        /// <summary>
        /// ContextInfo participant.
        /// </summary>
        public string participant { get; set; }
        /// <summary>
        /// ContextInfo quotedMessage.
        /// </summary>
        public proto.IMessage quotedMessage { get; set; }
        /// <summary>
        /// ContextInfo remoteJid.
        /// </summary>
        public string remoteJid { get; set; }
        /// <summary>
        /// ContextInfo mentionedJid.
        /// </summary>
        public List<string> mentionedJid { get; set; }
        /// <summary>
        /// ContextInfo conversionSource.
        /// </summary>
        public string conversionSource { get; set; }
        /// <summary>
        /// ContextInfo conversionData.
        /// </summary>
        public Uint8Array conversionData { get; set; }
        /// <summary>
        /// ContextInfo conversionDelaySeconds.
        /// </summary>
        public double conversionDelaySeconds { get; set; }
        /// <summary>
        /// ContextInfo forwardingScore.
        /// </summary>
        public double forwardingScore { get; set; }
        /// <summary>
        /// ContextInfo isForwarded.
        /// </summary>
        public bool isForwarded { get; set; }
        /// <summary>
        /// ContextInfo quotedAd.
        /// </summary>
        public proto.IAdReplyInfo quotedAd { get; set; }
        /// <summary>
        /// ContextInfo placeholderKey.
        /// </summary>
        public proto.IMessageKey placeholderKey { get; set; }
        /// <summary>
        /// ContextInfo expiration.
        /// </summary>
        public double expiration { get; set; }
        /// <summary>
        /// ContextInfo ephemeralSettingTimestamp.
        /// </summary>
        public OrType<double, Long> ephemeralSettingTimestamp { get; set; }
        /// <summary>
        /// ContextInfo ephemeralSharedSecret.
        /// </summary>
        public Uint8Array ephemeralSharedSecret { get; set; }
        /// <summary>
        /// ContextInfo externalAdReply.
        /// </summary>
        public proto.IExternalAdReplyInfo externalAdReply { get; set; }
        /// <summary>
        /// ContextInfo entryPointConversionSource.
        /// </summary>
        public string entryPointConversionSource { get; set; }
        /// <summary>
        /// ContextInfo entryPointConversionApp.
        /// </summary>
        public string entryPointConversionApp { get; set; }
        /// <summary>
        /// ContextInfo entryPointConversionDelaySeconds.
        /// </summary>
        public double entryPointConversionDelaySeconds { get; set; }

        /// <summary>
        /// Creates a new ContextInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ContextInfo instance
        /// </returns>
        public static proto.ContextInfo create(proto.IContextInfo properties = null);
        /// <summary>
        /// Encodes the specified ContextInfo message. Does not implicitly {@link proto.ContextInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContextInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IContextInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ContextInfo message, length delimited. Does not implicitly {@link proto.ContextInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContextInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IContextInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ContextInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ContextInfo
        /// </returns>
        public static proto.ContextInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ContextInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ContextInfo
        /// </returns>
        public static proto.ContextInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ContextInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ContextInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ContextInfo
        /// </returns>
        public static proto.ContextInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ContextInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ContextInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ContextInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ContextInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SenderKeyDistributionMessage.
    /// </summary>
    interface ISenderKeyDistributionMessage
    {
        /// <summary>
        /// SenderKeyDistributionMessage groupId
        /// </summary>
        string groupId { get; set; }

        /// <summary>
        /// SenderKeyDistributionMessage axolotlSenderKeyDistributionMessage
        /// </summary>
        Uint8Array axolotlSenderKeyDistributionMessage { get; set; }
    }

    /// <summary>
    /// Represents a SenderKeyDistributionMessage.
    /// </summary>
    class SenderKeyDistributionMessage : ISenderKeyDistributionMessage
    {
        /// <summary>
        /// Constructs a new SenderKeyDistributionMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SenderKeyDistributionMessage(proto.ISenderKeyDistributionMessage properties = null)
        {
        }

        /// <summary>
        /// SenderKeyDistributionMessage groupId.
        /// </summary>
        public string groupId { get; set; }
        /// <summary>
        /// SenderKeyDistributionMessage axolotlSenderKeyDistributionMessage.
        /// </summary>
        public Uint8Array axolotlSenderKeyDistributionMessage { get; set; }

        /// <summary>
        /// Creates a new SenderKeyDistributionMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SenderKeyDistributionMessage instance
        /// </returns>
        public static proto.SenderKeyDistributionMessage create(proto.ISenderKeyDistributionMessage properties = null);
        /// <summary>
        /// Encodes the specified SenderKeyDistributionMessage message. Does not implicitly {@link proto.SenderKeyDistributionMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SenderKeyDistributionMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISenderKeyDistributionMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SenderKeyDistributionMessage message, length delimited. Does not implicitly {@link proto.SenderKeyDistributionMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SenderKeyDistributionMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISenderKeyDistributionMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SenderKeyDistributionMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SenderKeyDistributionMessage
        /// </returns>
        public static proto.SenderKeyDistributionMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SenderKeyDistributionMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SenderKeyDistributionMessage
        /// </returns>
        public static proto.SenderKeyDistributionMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SenderKeyDistributionMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SenderKeyDistributionMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SenderKeyDistributionMessage
        /// </returns>
        public static proto.SenderKeyDistributionMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SenderKeyDistributionMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SenderKeyDistributionMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SenderKeyDistributionMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SenderKeyDistributionMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ImageMessage.
    /// </summary>
    interface IImageMessage
    {
        /// <summary>
        /// ImageMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// ImageMessage mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// ImageMessage caption
        /// </summary>
        string caption { get; set; }

        /// <summary>
        /// ImageMessage fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// ImageMessage fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// ImageMessage height
        /// </summary>
        double? height { get; set; }

        /// <summary>
        /// ImageMessage width
        /// </summary>
        double? width { get; set; }

        /// <summary>
        /// ImageMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// ImageMessage fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// ImageMessage interactiveAnnotations
        /// </summary>
        List<proto.IInteractiveAnnotation> interactiveAnnotations { get; set; }

        /// <summary>
        /// ImageMessage directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// ImageMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// ImageMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// ImageMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// ImageMessage firstScanSidecar
        /// </summary>
        Uint8Array firstScanSidecar { get; set; }

        /// <summary>
        /// ImageMessage firstScanLength
        /// </summary>
        double? firstScanLength { get; set; }

        /// <summary>
        /// ImageMessage experimentGroupId
        /// </summary>
        double? experimentGroupId { get; set; }

        /// <summary>
        /// ImageMessage scansSidecar
        /// </summary>
        Uint8Array scansSidecar { get; set; }

        /// <summary>
        /// ImageMessage scanLengths
        /// </summary>
        List<double> scanLengths { get; set; }

        /// <summary>
        /// ImageMessage midQualityFileSha256
        /// </summary>
        Uint8Array midQualityFileSha256 { get; set; }

        /// <summary>
        /// ImageMessage midQualityFileEncSha256
        /// </summary>
        Uint8Array midQualityFileEncSha256 { get; set; }

        /// <summary>
        /// ImageMessage viewOnce
        /// </summary>
        bool? viewOnce { get; set; }

        /// <summary>
        /// ImageMessage thumbnailDirectPath
        /// </summary>
        string thumbnailDirectPath { get; set; }

        /// <summary>
        /// ImageMessage thumbnailSha256
        /// </summary>
        Uint8Array thumbnailSha256 { get; set; }

        /// <summary>
        /// ImageMessage thumbnailEncSha256
        /// </summary>
        Uint8Array thumbnailEncSha256 { get; set; }
    }

    /// <summary>
    /// Represents an ImageMessage.
    /// </summary>
    class ImageMessage : IImageMessage
    {
        /// <summary>
        /// Constructs a new ImageMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ImageMessage(proto.IImageMessage properties = null)
        {
        }

        /// <summary>
        /// ImageMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// ImageMessage mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// ImageMessage caption.
        /// </summary>
        public string caption { get; set; }
        /// <summary>
        /// ImageMessage fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// ImageMessage fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// ImageMessage height.
        /// </summary>
        public double height { get; set; }
        /// <summary>
        /// ImageMessage width.
        /// </summary>
        public double width { get; set; }
        /// <summary>
        /// ImageMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// ImageMessage fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// ImageMessage interactiveAnnotations.
        /// </summary>
        public List<proto.IInteractiveAnnotation> interactiveAnnotations { get; set; }
        /// <summary>
        /// ImageMessage directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// ImageMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// ImageMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// ImageMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// ImageMessage firstScanSidecar.
        /// </summary>
        public Uint8Array firstScanSidecar { get; set; }
        /// <summary>
        /// ImageMessage firstScanLength.
        /// </summary>
        public double firstScanLength { get; set; }
        /// <summary>
        /// ImageMessage experimentGroupId.
        /// </summary>
        public double experimentGroupId { get; set; }
        /// <summary>
        /// ImageMessage scansSidecar.
        /// </summary>
        public Uint8Array scansSidecar { get; set; }
        /// <summary>
        /// ImageMessage scanLengths.
        /// </summary>
        public List<double> scanLengths { get; set; }
        /// <summary>
        /// ImageMessage midQualityFileSha256.
        /// </summary>
        public Uint8Array midQualityFileSha256 { get; set; }
        /// <summary>
        /// ImageMessage midQualityFileEncSha256.
        /// </summary>
        public Uint8Array midQualityFileEncSha256 { get; set; }
        /// <summary>
        /// ImageMessage viewOnce.
        /// </summary>
        public bool viewOnce { get; set; }
        /// <summary>
        /// ImageMessage thumbnailDirectPath.
        /// </summary>
        public string thumbnailDirectPath { get; set; }
        /// <summary>
        /// ImageMessage thumbnailSha256.
        /// </summary>
        public Uint8Array thumbnailSha256 { get; set; }
        /// <summary>
        /// ImageMessage thumbnailEncSha256.
        /// </summary>
        public Uint8Array thumbnailEncSha256 { get; set; }

        /// <summary>
        /// Creates a new ImageMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ImageMessage instance
        /// </returns>
        public static proto.ImageMessage create(proto.IImageMessage properties = null);
        /// <summary>
        /// Encodes the specified ImageMessage message. Does not implicitly {@link proto.ImageMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ImageMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IImageMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ImageMessage message, length delimited. Does not implicitly {@link proto.ImageMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ImageMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IImageMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ImageMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ImageMessage
        /// </returns>
        public static proto.ImageMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ImageMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ImageMessage
        /// </returns>
        public static proto.ImageMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ImageMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ImageMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ImageMessage
        /// </returns>
        public static proto.ImageMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ImageMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ImageMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ImageMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ImageMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an InvoiceMessage.
    /// </summary>
    interface IInvoiceMessage
    {
        /// <summary>
        /// InvoiceMessage note
        /// </summary>
        string note { get; set; }

        /// <summary>
        /// InvoiceMessage token
        /// </summary>
        string token { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentType
        /// </summary>
        proto.InvoiceMessage.InvoiceMessageAttachmentType attachmentType { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentMimetype
        /// </summary>
        string attachmentMimetype { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentMediaKey
        /// </summary>
        Uint8Array attachmentMediaKey { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentMediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> attachmentMediaKeyTimestamp { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentFileSha256
        /// </summary>
        Uint8Array attachmentFileSha256 { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentFileEncSha256
        /// </summary>
        Uint8Array attachmentFileEncSha256 { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentDirectPath
        /// </summary>
        string attachmentDirectPath { get; set; }

        /// <summary>
        /// InvoiceMessage attachmentJpegThumbnail
        /// </summary>
        Uint8Array attachmentJpegThumbnail { get; set; }
    }

    /// <summary>
    /// Represents an InvoiceMessage.
    /// </summary>
    class InvoiceMessage : IInvoiceMessage
    {
        /// <summary>
        /// Constructs a new InvoiceMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public InvoiceMessage(proto.IInvoiceMessage properties = null)
        {
        }

        /// <summary>
        /// InvoiceMessage note.
        /// </summary>
        public string note { get; set; }
        /// <summary>
        /// InvoiceMessage token.
        /// </summary>
        public string token { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentType.
        /// </summary>
        public proto.InvoiceMessage.InvoiceMessageAttachmentType attachmentType { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentMimetype.
        /// </summary>
        public string attachmentMimetype { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentMediaKey.
        /// </summary>
        public Uint8Array attachmentMediaKey { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentMediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> attachmentMediaKeyTimestamp { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentFileSha256.
        /// </summary>
        public Uint8Array attachmentFileSha256 { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentFileEncSha256.
        /// </summary>
        public Uint8Array attachmentFileEncSha256 { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentDirectPath.
        /// </summary>
        public string attachmentDirectPath { get; set; }
        /// <summary>
        /// InvoiceMessage attachmentJpegThumbnail.
        /// </summary>
        public Uint8Array attachmentJpegThumbnail { get; set; }

        /// <summary>
        /// Creates a new InvoiceMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// InvoiceMessage instance
        /// </returns>
        public static proto.InvoiceMessage create(proto.IInvoiceMessage properties = null);
        /// <summary>
        /// Encodes the specified InvoiceMessage message. Does not implicitly {@link proto.InvoiceMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InvoiceMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IInvoiceMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified InvoiceMessage message, length delimited. Does not implicitly {@link proto.InvoiceMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InvoiceMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IInvoiceMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an InvoiceMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// InvoiceMessage
        /// </returns>
        public static proto.InvoiceMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an InvoiceMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// InvoiceMessage
        /// </returns>
        public static proto.InvoiceMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an InvoiceMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an InvoiceMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// InvoiceMessage
        /// </returns>
        public static proto.InvoiceMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an InvoiceMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// InvoiceMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.InvoiceMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this InvoiceMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ContactMessage.
    /// </summary>
    interface IContactMessage
    {
        /// <summary>
        /// ContactMessage displayName
        /// </summary>
        string displayName { get; set; }

        /// <summary>
        /// ContactMessage vcard
        /// </summary>
        string vcard { get; set; }

        /// <summary>
        /// ContactMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a ContactMessage.
    /// </summary>
    class ContactMessage : IContactMessage
    {
        /// <summary>
        /// Constructs a new ContactMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ContactMessage(proto.IContactMessage properties = null)
        {
        }

        /// <summary>
        /// ContactMessage displayName.
        /// </summary>
        public string displayName { get; set; }
        /// <summary>
        /// ContactMessage vcard.
        /// </summary>
        public string vcard { get; set; }
        /// <summary>
        /// ContactMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new ContactMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ContactMessage instance
        /// </returns>
        public static proto.ContactMessage create(proto.IContactMessage properties = null);
        /// <summary>
        /// Encodes the specified ContactMessage message. Does not implicitly {@link proto.ContactMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IContactMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ContactMessage message, length delimited. Does not implicitly {@link proto.ContactMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IContactMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ContactMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ContactMessage
        /// </returns>
        public static proto.ContactMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ContactMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ContactMessage
        /// </returns>
        public static proto.ContactMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ContactMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ContactMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ContactMessage
        /// </returns>
        public static proto.ContactMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ContactMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ContactMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ContactMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ContactMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LocationMessage.
    /// </summary>
    interface ILocationMessage
    {
        /// <summary>
        /// LocationMessage degreesLatitude
        /// </summary>
        double? degreesLatitude { get; set; }

        /// <summary>
        /// LocationMessage degreesLongitude
        /// </summary>
        double? degreesLongitude { get; set; }

        /// <summary>
        /// LocationMessage name
        /// </summary>
        string name { get; set; }

        /// <summary>
        /// LocationMessage address
        /// </summary>
        string address { get; set; }

        /// <summary>
        /// LocationMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// LocationMessage isLive
        /// </summary>
        bool? isLive { get; set; }

        /// <summary>
        /// LocationMessage accuracyInMeters
        /// </summary>
        double? accuracyInMeters { get; set; }

        /// <summary>
        /// LocationMessage speedInMps
        /// </summary>
        double? speedInMps { get; set; }

        /// <summary>
        /// LocationMessage degreesClockwiseFromMagneticNorth
        /// </summary>
        double? degreesClockwiseFromMagneticNorth { get; set; }

        /// <summary>
        /// LocationMessage comment
        /// </summary>
        string comment { get; set; }

        /// <summary>
        /// LocationMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// LocationMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a LocationMessage.
    /// </summary>
    class LocationMessage : ILocationMessage
    {
        /// <summary>
        /// Constructs a new LocationMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LocationMessage(proto.ILocationMessage properties = null)
        {
        }

        /// <summary>
        /// LocationMessage degreesLatitude.
        /// </summary>
        public double degreesLatitude { get; set; }
        /// <summary>
        /// LocationMessage degreesLongitude.
        /// </summary>
        public double degreesLongitude { get; set; }
        /// <summary>
        /// LocationMessage name.
        /// </summary>
        public string name { get; set; }
        /// <summary>
        /// LocationMessage address.
        /// </summary>
        public string address { get; set; }
        /// <summary>
        /// LocationMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// LocationMessage isLive.
        /// </summary>
        public bool isLive { get; set; }
        /// <summary>
        /// LocationMessage accuracyInMeters.
        /// </summary>
        public double accuracyInMeters { get; set; }
        /// <summary>
        /// LocationMessage speedInMps.
        /// </summary>
        public double speedInMps { get; set; }
        /// <summary>
        /// LocationMessage degreesClockwiseFromMagneticNorth.
        /// </summary>
        public double degreesClockwiseFromMagneticNorth { get; set; }
        /// <summary>
        /// LocationMessage comment.
        /// </summary>
        public string comment { get; set; }
        /// <summary>
        /// LocationMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// LocationMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new LocationMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LocationMessage instance
        /// </returns>
        public static proto.LocationMessage create(proto.ILocationMessage properties = null);
        /// <summary>
        /// Encodes the specified LocationMessage message. Does not implicitly {@link proto.LocationMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocationMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILocationMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LocationMessage message, length delimited. Does not implicitly {@link proto.LocationMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LocationMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILocationMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LocationMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LocationMessage
        /// </returns>
        public static proto.LocationMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LocationMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LocationMessage
        /// </returns>
        public static proto.LocationMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LocationMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LocationMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LocationMessage
        /// </returns>
        public static proto.LocationMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LocationMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LocationMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LocationMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LocationMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an ExtendedTextMessage.
    /// </summary>
    interface IExtendedTextMessage
    {
        /// <summary>
        /// ExtendedTextMessage text
        /// </summary>
        string text { get; set; }

        /// <summary>
        /// ExtendedTextMessage matchedText
        /// </summary>
        string matchedText { get; set; }

        /// <summary>
        /// ExtendedTextMessage canonicalUrl
        /// </summary>
        string canonicalUrl { get; set; }

        /// <summary>
        /// ExtendedTextMessage description
        /// </summary>
        string description { get; set; }

        /// <summary>
        /// ExtendedTextMessage title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ExtendedTextMessage textArgb
        /// </summary>
        double? textArgb { get; set; }

        /// <summary>
        /// ExtendedTextMessage backgroundArgb
        /// </summary>
        double? backgroundArgb { get; set; }

        /// <summary>
        /// ExtendedTextMessage font
        /// </summary>
        proto.ExtendedTextMessage.ExtendedTextMessageFontType font { get; set; }

        /// <summary>
        /// ExtendedTextMessage previewType
        /// </summary>
        proto.ExtendedTextMessage.ExtendedTextMessagePreviewType previewType { get; set; }

        /// <summary>
        /// ExtendedTextMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// ExtendedTextMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// ExtendedTextMessage doNotPlayInline
        /// </summary>
        bool? doNotPlayInline { get; set; }

        /// <summary>
        /// ExtendedTextMessage thumbnailDirectPath
        /// </summary>
        string thumbnailDirectPath { get; set; }

        /// <summary>
        /// ExtendedTextMessage thumbnailSha256
        /// </summary>
        Uint8Array thumbnailSha256 { get; set; }

        /// <summary>
        /// ExtendedTextMessage thumbnailEncSha256
        /// </summary>
        Uint8Array thumbnailEncSha256 { get; set; }

        /// <summary>
        /// ExtendedTextMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// ExtendedTextMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// ExtendedTextMessage thumbnailHeight
        /// </summary>
        double? thumbnailHeight { get; set; }

        /// <summary>
        /// ExtendedTextMessage thumbnailWidth
        /// </summary>
        double? thumbnailWidth { get; set; }
    }

    /// <summary>
    /// Represents an ExtendedTextMessage.
    /// </summary>
    class ExtendedTextMessage : IExtendedTextMessage
    {
        /// <summary>
        /// Constructs a new ExtendedTextMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ExtendedTextMessage(proto.IExtendedTextMessage properties = null)
        {
        }

        /// <summary>
        /// ExtendedTextMessage text.
        /// </summary>
        public string text { get; set; }
        /// <summary>
        /// ExtendedTextMessage matchedText.
        /// </summary>
        public string matchedText { get; set; }
        /// <summary>
        /// ExtendedTextMessage canonicalUrl.
        /// </summary>
        public string canonicalUrl { get; set; }
        /// <summary>
        /// ExtendedTextMessage description.
        /// </summary>
        public string description { get; set; }
        /// <summary>
        /// ExtendedTextMessage title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ExtendedTextMessage textArgb.
        /// </summary>
        public double textArgb { get; set; }
        /// <summary>
        /// ExtendedTextMessage backgroundArgb.
        /// </summary>
        public double backgroundArgb { get; set; }
        /// <summary>
        /// ExtendedTextMessage font.
        /// </summary>
        public proto.ExtendedTextMessage.ExtendedTextMessageFontType font { get; set; }
        /// <summary>
        /// ExtendedTextMessage previewType.
        /// </summary>
        public proto.ExtendedTextMessage.ExtendedTextMessagePreviewType previewType { get; set; }
        /// <summary>
        /// ExtendedTextMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// ExtendedTextMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// ExtendedTextMessage doNotPlayInline.
        /// </summary>
        public bool doNotPlayInline { get; set; }
        /// <summary>
        /// ExtendedTextMessage thumbnailDirectPath.
        /// </summary>
        public string thumbnailDirectPath { get; set; }
        /// <summary>
        /// ExtendedTextMessage thumbnailSha256.
        /// </summary>
        public Uint8Array thumbnailSha256 { get; set; }
        /// <summary>
        /// ExtendedTextMessage thumbnailEncSha256.
        /// </summary>
        public Uint8Array thumbnailEncSha256 { get; set; }
        /// <summary>
        /// ExtendedTextMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// ExtendedTextMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// ExtendedTextMessage thumbnailHeight.
        /// </summary>
        public double thumbnailHeight { get; set; }
        /// <summary>
        /// ExtendedTextMessage thumbnailWidth.
        /// </summary>
        public double thumbnailWidth { get; set; }

        /// <summary>
        /// Creates a new ExtendedTextMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ExtendedTextMessage instance
        /// </returns>
        public static proto.ExtendedTextMessage create(proto.IExtendedTextMessage properties = null);
        /// <summary>
        /// Encodes the specified ExtendedTextMessage message. Does not implicitly {@link proto.ExtendedTextMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExtendedTextMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IExtendedTextMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ExtendedTextMessage message, length delimited. Does not implicitly {@link proto.ExtendedTextMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ExtendedTextMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IExtendedTextMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an ExtendedTextMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ExtendedTextMessage
        /// </returns>
        public static proto.ExtendedTextMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an ExtendedTextMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ExtendedTextMessage
        /// </returns>
        public static proto.ExtendedTextMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an ExtendedTextMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an ExtendedTextMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ExtendedTextMessage
        /// </returns>
        public static proto.ExtendedTextMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an ExtendedTextMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ExtendedTextMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ExtendedTextMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ExtendedTextMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DocumentMessage.
    /// </summary>
    interface IDocumentMessage
    {
        /// <summary>
        /// DocumentMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// DocumentMessage mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// DocumentMessage title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// DocumentMessage fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// DocumentMessage fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// DocumentMessage pageCount
        /// </summary>
        double? pageCount { get; set; }

        /// <summary>
        /// DocumentMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// DocumentMessage fileName
        /// </summary>
        string fileName { get; set; }

        /// <summary>
        /// DocumentMessage fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// DocumentMessage directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// DocumentMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// DocumentMessage contactVcard
        /// </summary>
        bool? contactVcard { get; set; }

        /// <summary>
        /// DocumentMessage thumbnailDirectPath
        /// </summary>
        string thumbnailDirectPath { get; set; }

        /// <summary>
        /// DocumentMessage thumbnailSha256
        /// </summary>
        Uint8Array thumbnailSha256 { get; set; }

        /// <summary>
        /// DocumentMessage thumbnailEncSha256
        /// </summary>
        Uint8Array thumbnailEncSha256 { get; set; }

        /// <summary>
        /// DocumentMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// DocumentMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// DocumentMessage thumbnailHeight
        /// </summary>
        double? thumbnailHeight { get; set; }

        /// <summary>
        /// DocumentMessage thumbnailWidth
        /// </summary>
        double? thumbnailWidth { get; set; }
    }

    /// <summary>
    /// Represents a DocumentMessage.
    /// </summary>
    class DocumentMessage : IDocumentMessage
    {
        /// <summary>
        /// Constructs a new DocumentMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DocumentMessage(proto.IDocumentMessage properties = null)
        {
        }

        /// <summary>
        /// DocumentMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// DocumentMessage mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// DocumentMessage title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// DocumentMessage fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// DocumentMessage fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// DocumentMessage pageCount.
        /// </summary>
        public double pageCount { get; set; }
        /// <summary>
        /// DocumentMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// DocumentMessage fileName.
        /// </summary>
        public string fileName { get; set; }
        /// <summary>
        /// DocumentMessage fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// DocumentMessage directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// DocumentMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// DocumentMessage contactVcard.
        /// </summary>
        public bool contactVcard { get; set; }
        /// <summary>
        /// DocumentMessage thumbnailDirectPath.
        /// </summary>
        public string thumbnailDirectPath { get; set; }
        /// <summary>
        /// DocumentMessage thumbnailSha256.
        /// </summary>
        public Uint8Array thumbnailSha256 { get; set; }
        /// <summary>
        /// DocumentMessage thumbnailEncSha256.
        /// </summary>
        public Uint8Array thumbnailEncSha256 { get; set; }
        /// <summary>
        /// DocumentMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// DocumentMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// DocumentMessage thumbnailHeight.
        /// </summary>
        public double thumbnailHeight { get; set; }
        /// <summary>
        /// DocumentMessage thumbnailWidth.
        /// </summary>
        public double thumbnailWidth { get; set; }

        /// <summary>
        /// Creates a new DocumentMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DocumentMessage instance
        /// </returns>
        public static proto.DocumentMessage create(proto.IDocumentMessage properties = null);
        /// <summary>
        /// Encodes the specified DocumentMessage message. Does not implicitly {@link proto.DocumentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DocumentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDocumentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DocumentMessage message, length delimited. Does not implicitly {@link proto.DocumentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DocumentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDocumentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DocumentMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DocumentMessage
        /// </returns>
        public static proto.DocumentMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DocumentMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DocumentMessage
        /// </returns>
        public static proto.DocumentMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DocumentMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DocumentMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DocumentMessage
        /// </returns>
        public static proto.DocumentMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DocumentMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DocumentMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DocumentMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DocumentMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AudioMessage.
    /// </summary>
    interface IAudioMessage
    {
        /// <summary>
        /// AudioMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// AudioMessage mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// AudioMessage fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// AudioMessage fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// AudioMessage seconds
        /// </summary>
        double? seconds { get; set; }

        /// <summary>
        /// AudioMessage ptt
        /// </summary>
        bool? ptt { get; set; }

        /// <summary>
        /// AudioMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// AudioMessage fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// AudioMessage directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// AudioMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// AudioMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// AudioMessage streamingSidecar
        /// </summary>
        Uint8Array streamingSidecar { get; set; }
    }

    /// <summary>
    /// Represents an AudioMessage.
    /// </summary>
    class AudioMessage : IAudioMessage
    {
        /// <summary>
        /// Constructs a new AudioMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AudioMessage(proto.IAudioMessage properties = null)
        {
        }

        /// <summary>
        /// AudioMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// AudioMessage mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// AudioMessage fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// AudioMessage fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// AudioMessage seconds.
        /// </summary>
        public double seconds { get; set; }
        /// <summary>
        /// AudioMessage ptt.
        /// </summary>
        public bool ptt { get; set; }
        /// <summary>
        /// AudioMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// AudioMessage fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// AudioMessage directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// AudioMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// AudioMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// AudioMessage streamingSidecar.
        /// </summary>
        public Uint8Array streamingSidecar { get; set; }

        /// <summary>
        /// Creates a new AudioMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AudioMessage instance
        /// </returns>
        public static proto.AudioMessage create(proto.IAudioMessage properties = null);
        /// <summary>
        /// Encodes the specified AudioMessage message. Does not implicitly {@link proto.AudioMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AudioMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAudioMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AudioMessage message, length delimited. Does not implicitly {@link proto.AudioMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AudioMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAudioMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AudioMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AudioMessage
        /// </returns>
        public static proto.AudioMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AudioMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AudioMessage
        /// </returns>
        public static proto.AudioMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AudioMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AudioMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AudioMessage
        /// </returns>
        public static proto.AudioMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AudioMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AudioMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AudioMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AudioMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a VideoMessage.
    /// </summary>
    interface IVideoMessage
    {
        /// <summary>
        /// VideoMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// VideoMessage mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// VideoMessage fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// VideoMessage fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// VideoMessage seconds
        /// </summary>
        double? seconds { get; set; }

        /// <summary>
        /// VideoMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// VideoMessage caption
        /// </summary>
        string caption { get; set; }

        /// <summary>
        /// VideoMessage gifPlayback
        /// </summary>
        bool? gifPlayback { get; set; }

        /// <summary>
        /// VideoMessage height
        /// </summary>
        double? height { get; set; }

        /// <summary>
        /// VideoMessage width
        /// </summary>
        double? width { get; set; }

        /// <summary>
        /// VideoMessage fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// VideoMessage interactiveAnnotations
        /// </summary>
        List<proto.IInteractiveAnnotation> interactiveAnnotations { get; set; }

        /// <summary>
        /// VideoMessage directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// VideoMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// VideoMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// VideoMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// VideoMessage streamingSidecar
        /// </summary>
        Uint8Array streamingSidecar { get; set; }

        /// <summary>
        /// VideoMessage gifAttribution
        /// </summary>
        proto.VideoMessage.VideoMessageAttribution gifAttribution { get; set; }

        /// <summary>
        /// VideoMessage viewOnce
        /// </summary>
        bool? viewOnce { get; set; }

        /// <summary>
        /// VideoMessage thumbnailDirectPath
        /// </summary>
        string thumbnailDirectPath { get; set; }

        /// <summary>
        /// VideoMessage thumbnailSha256
        /// </summary>
        Uint8Array thumbnailSha256 { get; set; }

        /// <summary>
        /// VideoMessage thumbnailEncSha256
        /// </summary>
        Uint8Array thumbnailEncSha256 { get; set; }
    }

    /// <summary>
    /// Represents a VideoMessage.
    /// </summary>
    class VideoMessage : IVideoMessage
    {
        /// <summary>
        /// Constructs a new VideoMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public VideoMessage(proto.IVideoMessage properties = null)
        {
        }

        /// <summary>
        /// VideoMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// VideoMessage mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// VideoMessage fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// VideoMessage fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// VideoMessage seconds.
        /// </summary>
        public double seconds { get; set; }
        /// <summary>
        /// VideoMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// VideoMessage caption.
        /// </summary>
        public string caption { get; set; }
        /// <summary>
        /// VideoMessage gifPlayback.
        /// </summary>
        public bool gifPlayback { get; set; }
        /// <summary>
        /// VideoMessage height.
        /// </summary>
        public double height { get; set; }
        /// <summary>
        /// VideoMessage width.
        /// </summary>
        public double width { get; set; }
        /// <summary>
        /// VideoMessage fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// VideoMessage interactiveAnnotations.
        /// </summary>
        public List<proto.IInteractiveAnnotation> interactiveAnnotations { get; set; }
        /// <summary>
        /// VideoMessage directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// VideoMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// VideoMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// VideoMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// VideoMessage streamingSidecar.
        /// </summary>
        public Uint8Array streamingSidecar { get; set; }
        /// <summary>
        /// VideoMessage gifAttribution.
        /// </summary>
        public proto.VideoMessage.VideoMessageAttribution gifAttribution { get; set; }
        /// <summary>
        /// VideoMessage viewOnce.
        /// </summary>
        public bool viewOnce { get; set; }
        /// <summary>
        /// VideoMessage thumbnailDirectPath.
        /// </summary>
        public string thumbnailDirectPath { get; set; }
        /// <summary>
        /// VideoMessage thumbnailSha256.
        /// </summary>
        public Uint8Array thumbnailSha256 { get; set; }
        /// <summary>
        /// VideoMessage thumbnailEncSha256.
        /// </summary>
        public Uint8Array thumbnailEncSha256 { get; set; }

        /// <summary>
        /// Creates a new VideoMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// VideoMessage instance
        /// </returns>
        public static proto.VideoMessage create(proto.IVideoMessage properties = null);
        /// <summary>
        /// Encodes the specified VideoMessage message. Does not implicitly {@link proto.VideoMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// VideoMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IVideoMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified VideoMessage message, length delimited. Does not implicitly {@link proto.VideoMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// VideoMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IVideoMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a VideoMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// VideoMessage
        /// </returns>
        public static proto.VideoMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a VideoMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// VideoMessage
        /// </returns>
        public static proto.VideoMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a VideoMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a VideoMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// VideoMessage
        /// </returns>
        public static proto.VideoMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a VideoMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// VideoMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.VideoMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this VideoMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Call.
    /// </summary>
    interface ICall
    {
        /// <summary>
        /// Call callKey
        /// </summary>
        Uint8Array callKey { get; set; }

        /// <summary>
        /// Call conversionSource
        /// </summary>
        string conversionSource { get; set; }

        /// <summary>
        /// Call conversionData
        /// </summary>
        Uint8Array conversionData { get; set; }

        /// <summary>
        /// Call conversionDelaySeconds
        /// </summary>
        double? conversionDelaySeconds { get; set; }
    }

    /// <summary>
    /// Represents a Call.
    /// </summary>
    class Call : ICall
    {
        /// <summary>
        /// Constructs a new Call.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Call(proto.ICall properties = null)
        {
        }

        /// <summary>
        /// Call callKey.
        /// </summary>
        public Uint8Array callKey { get; set; }
        /// <summary>
        /// Call conversionSource.
        /// </summary>
        public string conversionSource { get; set; }
        /// <summary>
        /// Call conversionData.
        /// </summary>
        public Uint8Array conversionData { get; set; }
        /// <summary>
        /// Call conversionDelaySeconds.
        /// </summary>
        public double conversionDelaySeconds { get; set; }

        /// <summary>
        /// Creates a new Call instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Call instance
        /// </returns>
        public static proto.Call create(proto.ICall properties = null);
        /// <summary>
        /// Encodes the specified Call message. Does not implicitly {@link proto.Call.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Call message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICall message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Call message, length delimited. Does not implicitly {@link proto.Call.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Call message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICall message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Call message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Call
        /// </returns>
        public static proto.Call decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Call message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Call
        /// </returns>
        public static proto.Call decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Call message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Call message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Call
        /// </returns>
        public static proto.Call fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Call message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Call
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Call message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Call to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Chat.
    /// </summary>
    interface IChat
    {
        /// <summary>
        /// Chat displayName
        /// </summary>
        string displayName { get; set; }

        /// <summary>
        /// Chat id
        /// </summary>
        string id { get; set; }
    }

    /// <summary>
    /// Represents a Chat.
    /// </summary>
    class Chat : IChat
    {
        /// <summary>
        /// Constructs a new Chat.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Chat(proto.IChat properties = null)
        {
        }

        /// <summary>
        /// Chat displayName.
        /// </summary>
        public string displayName { get; set; }
        /// <summary>
        /// Chat id.
        /// </summary>
        public string id { get; set; }

        /// <summary>
        /// Creates a new Chat instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Chat instance
        /// </returns>
        public static proto.Chat create(proto.IChat properties = null);
        /// <summary>
        /// Encodes the specified Chat message. Does not implicitly {@link proto.Chat.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Chat message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IChat message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Chat message, length delimited. Does not implicitly {@link proto.Chat.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Chat message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IChat message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Chat message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Chat
        /// </returns>
        public static proto.Chat decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Chat message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Chat
        /// </returns>
        public static proto.Chat decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Chat message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Chat message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Chat
        /// </returns>
        public static proto.Chat fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Chat message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Chat
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Chat message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Chat to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProtocolMessage.
    /// </summary>
    interface IProtocolMessage
    {
        /// <summary>
        /// ProtocolMessage key
        /// </summary>
        proto.IMessageKey key { get; set; }

        /// <summary>
        /// ProtocolMessage type
        /// </summary>
        proto.ProtocolMessage.ProtocolMessageType type { get; set; }

        /// <summary>
        /// ProtocolMessage ephemeralExpiration
        /// </summary>
        double? ephemeralExpiration { get; set; }

        /// <summary>
        /// ProtocolMessage ephemeralSettingTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> ephemeralSettingTimestamp { get; set; }

        /// <summary>
        /// ProtocolMessage historySyncNotification
        /// </summary>
        proto.IHistorySyncNotification historySyncNotification { get; set; }

        /// <summary>
        /// ProtocolMessage appStateSyncKeyShare
        /// </summary>
        proto.IAppStateSyncKeyShare appStateSyncKeyShare { get; set; }

        /// <summary>
        /// ProtocolMessage appStateSyncKeyRequest
        /// </summary>
        proto.IAppStateSyncKeyRequest appStateSyncKeyRequest { get; set; }

        /// <summary>
        /// ProtocolMessage initialSecurityNotificationSettingSync
        /// </summary>
        proto.IInitialSecurityNotificationSettingSync initialSecurityNotificationSettingSync { get; set; }

        /// <summary>
        /// ProtocolMessage appStateFatalExceptionNotification
        /// </summary>
        proto.IAppStateFatalExceptionNotification appStateFatalExceptionNotification { get; set; }
    }

    /// <summary>
    /// Represents a ProtocolMessage.
    /// </summary>
    class ProtocolMessage : IProtocolMessage
    {
        /// <summary>
        /// Constructs a new ProtocolMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProtocolMessage(proto.IProtocolMessage properties = null)
        {
        }

        /// <summary>
        /// ProtocolMessage key.
        /// </summary>
        public proto.IMessageKey key { get; set; }
        /// <summary>
        /// ProtocolMessage type.
        /// </summary>
        public proto.ProtocolMessage.ProtocolMessageType type { get; set; }
        /// <summary>
        /// ProtocolMessage ephemeralExpiration.
        /// </summary>
        public double ephemeralExpiration { get; set; }
        /// <summary>
        /// ProtocolMessage ephemeralSettingTimestamp.
        /// </summary>
        public OrType<double, Long> ephemeralSettingTimestamp { get; set; }
        /// <summary>
        /// ProtocolMessage historySyncNotification.
        /// </summary>
        public proto.IHistorySyncNotification historySyncNotification { get; set; }
        /// <summary>
        /// ProtocolMessage appStateSyncKeyShare.
        /// </summary>
        public proto.IAppStateSyncKeyShare appStateSyncKeyShare { get; set; }
        /// <summary>
        /// ProtocolMessage appStateSyncKeyRequest.
        /// </summary>
        public proto.IAppStateSyncKeyRequest appStateSyncKeyRequest { get; set; }
        /// <summary>
        /// ProtocolMessage initialSecurityNotificationSettingSync.
        /// </summary>
        public proto.IInitialSecurityNotificationSettingSync initialSecurityNotificationSettingSync { get; set; }
        /// <summary>
        /// ProtocolMessage appStateFatalExceptionNotification.
        /// </summary>
        public proto.IAppStateFatalExceptionNotification appStateFatalExceptionNotification { get; set; }

        /// <summary>
        /// Creates a new ProtocolMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProtocolMessage instance
        /// </returns>
        public static proto.ProtocolMessage create(proto.IProtocolMessage properties = null);
        /// <summary>
        /// Encodes the specified ProtocolMessage message. Does not implicitly {@link proto.ProtocolMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProtocolMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProtocolMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProtocolMessage message, length delimited. Does not implicitly {@link proto.ProtocolMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProtocolMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProtocolMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProtocolMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProtocolMessage
        /// </returns>
        public static proto.ProtocolMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProtocolMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProtocolMessage
        /// </returns>
        public static proto.ProtocolMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProtocolMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProtocolMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProtocolMessage
        /// </returns>
        public static proto.ProtocolMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProtocolMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProtocolMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProtocolMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProtocolMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HistorySyncNotification.
    /// </summary>
    interface IHistorySyncNotification
    {
        /// <summary>
        /// HistorySyncNotification fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// HistorySyncNotification fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// HistorySyncNotification mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// HistorySyncNotification fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// HistorySyncNotification directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// HistorySyncNotification syncType
        /// </summary>
        proto.HistorySyncNotification.HistorySyncNotificationHistorySyncType syncType { get; set; }

        /// <summary>
        /// HistorySyncNotification chunkOrder
        /// </summary>
        double? chunkOrder { get; set; }

        /// <summary>
        /// HistorySyncNotification originalMessageId
        /// </summary>
        string originalMessageId { get; set; }
    }

    /// <summary>
    /// Represents a HistorySyncNotification.
    /// </summary>
    class HistorySyncNotification : IHistorySyncNotification
    {
        /// <summary>
        /// Constructs a new HistorySyncNotification.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HistorySyncNotification(proto.IHistorySyncNotification properties = null)
        {
        }

        /// <summary>
        /// HistorySyncNotification fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// HistorySyncNotification fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// HistorySyncNotification mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// HistorySyncNotification fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// HistorySyncNotification directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// HistorySyncNotification syncType.
        /// </summary>
        public proto.HistorySyncNotification.HistorySyncNotificationHistorySyncType syncType { get; set; }
        /// <summary>
        /// HistorySyncNotification chunkOrder.
        /// </summary>
        public double chunkOrder { get; set; }
        /// <summary>
        /// HistorySyncNotification originalMessageId.
        /// </summary>
        public string originalMessageId { get; set; }

        /// <summary>
        /// Creates a new HistorySyncNotification instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HistorySyncNotification instance
        /// </returns>
        public static proto.HistorySyncNotification create(proto.IHistorySyncNotification properties = null);
        /// <summary>
        /// Encodes the specified HistorySyncNotification message. Does not implicitly {@link proto.HistorySyncNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHistorySyncNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HistorySyncNotification message, length delimited. Does not implicitly {@link proto.HistorySyncNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHistorySyncNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HistorySyncNotification message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HistorySyncNotification
        /// </returns>
        public static proto.HistorySyncNotification decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HistorySyncNotification message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HistorySyncNotification
        /// </returns>
        public static proto.HistorySyncNotification decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HistorySyncNotification message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HistorySyncNotification message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HistorySyncNotification
        /// </returns>
        public static proto.HistorySyncNotification fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HistorySyncNotification message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HistorySyncNotification
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HistorySyncNotification message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HistorySyncNotification to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKey.
    /// </summary>
    interface IAppStateSyncKey
    {
        /// <summary>
        /// AppStateSyncKey keyId
        /// </summary>
        proto.IAppStateSyncKeyId keyId { get; set; }

        /// <summary>
        /// AppStateSyncKey keyData
        /// </summary>
        proto.IAppStateSyncKeyData keyData { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKey.
    /// </summary>
    class AppStateSyncKey : IAppStateSyncKey
    {
        /// <summary>
        /// Constructs a new AppStateSyncKey.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKey(proto.IAppStateSyncKey properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKey keyId.
        /// </summary>
        public proto.IAppStateSyncKeyId keyId { get; set; }
        /// <summary>
        /// AppStateSyncKey keyData.
        /// </summary>
        public proto.IAppStateSyncKeyData keyData { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKey instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKey instance
        /// </returns>
        public static proto.AppStateSyncKey create(proto.IAppStateSyncKey properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKey message. Does not implicitly {@link proto.AppStateSyncKey.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKey message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKey message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKey message, length delimited. Does not implicitly {@link proto.AppStateSyncKey.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKey message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKey message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKey message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKey
        /// </returns>
        public static proto.AppStateSyncKey decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKey message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKey
        /// </returns>
        public static proto.AppStateSyncKey decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKey message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKey message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKey
        /// </returns>
        public static proto.AppStateSyncKey fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKey message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKey
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKey message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKey to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKeyId.
    /// </summary>
    interface IAppStateSyncKeyId
    {
        /// <summary>
        /// AppStateSyncKeyId keyId
        /// </summary>
        Uint8Array keyId { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKeyId.
    /// </summary>
    class AppStateSyncKeyId : IAppStateSyncKeyId
    {
        /// <summary>
        /// Constructs a new AppStateSyncKeyId.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKeyId(proto.IAppStateSyncKeyId properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKeyId keyId.
        /// </summary>
        public Uint8Array keyId { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKeyId instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKeyId instance
        /// </returns>
        public static proto.AppStateSyncKeyId create(proto.IAppStateSyncKeyId properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyId message. Does not implicitly {@link proto.AppStateSyncKeyId.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyId message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKeyId message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyId message, length delimited. Does not implicitly {@link proto.AppStateSyncKeyId.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyId message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKeyId message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKeyId message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKeyId
        /// </returns>
        public static proto.AppStateSyncKeyId decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKeyId message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKeyId
        /// </returns>
        public static proto.AppStateSyncKeyId decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKeyId message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKeyId message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKeyId
        /// </returns>
        public static proto.AppStateSyncKeyId fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKeyId message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyId
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKeyId message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKeyId to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKeyFingerprint.
    /// </summary>
    interface IAppStateSyncKeyFingerprint
    {
        /// <summary>
        /// AppStateSyncKeyFingerprint rawId
        /// </summary>
        double? rawId { get; set; }

        /// <summary>
        /// AppStateSyncKeyFingerprint currentIndex
        /// </summary>
        double? currentIndex { get; set; }

        /// <summary>
        /// AppStateSyncKeyFingerprint deviceIndexes
        /// </summary>
        List<double> deviceIndexes { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKeyFingerprint.
    /// </summary>
    class AppStateSyncKeyFingerprint : IAppStateSyncKeyFingerprint
    {
        /// <summary>
        /// Constructs a new AppStateSyncKeyFingerprint.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKeyFingerprint(proto.IAppStateSyncKeyFingerprint properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKeyFingerprint rawId.
        /// </summary>
        public double rawId { get; set; }
        /// <summary>
        /// AppStateSyncKeyFingerprint currentIndex.
        /// </summary>
        public double currentIndex { get; set; }
        /// <summary>
        /// AppStateSyncKeyFingerprint deviceIndexes.
        /// </summary>
        public List<double> deviceIndexes { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKeyFingerprint instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKeyFingerprint instance
        /// </returns>
        public static proto.AppStateSyncKeyFingerprint create(proto.IAppStateSyncKeyFingerprint properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyFingerprint message. Does not implicitly {@link proto.AppStateSyncKeyFingerprint.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyFingerprint message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKeyFingerprint message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyFingerprint message, length delimited. Does not implicitly {@link proto.AppStateSyncKeyFingerprint.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyFingerprint message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKeyFingerprint message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKeyFingerprint message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKeyFingerprint
        /// </returns>
        public static proto.AppStateSyncKeyFingerprint decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKeyFingerprint message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKeyFingerprint
        /// </returns>
        public static proto.AppStateSyncKeyFingerprint decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKeyFingerprint message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKeyFingerprint message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKeyFingerprint
        /// </returns>
        public static proto.AppStateSyncKeyFingerprint fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKeyFingerprint message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyFingerprint
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKeyFingerprint message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKeyFingerprint to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKeyData.
    /// </summary>
    interface IAppStateSyncKeyData
    {
        /// <summary>
        /// AppStateSyncKeyData keyData
        /// </summary>
        Uint8Array keyData { get; set; }

        /// <summary>
        /// AppStateSyncKeyData fingerprint
        /// </summary>
        proto.IAppStateSyncKeyFingerprint fingerprint { get; set; }

        /// <summary>
        /// AppStateSyncKeyData timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKeyData.
    /// </summary>
    class AppStateSyncKeyData : IAppStateSyncKeyData
    {
        /// <summary>
        /// Constructs a new AppStateSyncKeyData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKeyData(proto.IAppStateSyncKeyData properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKeyData keyData.
        /// </summary>
        public Uint8Array keyData { get; set; }
        /// <summary>
        /// AppStateSyncKeyData fingerprint.
        /// </summary>
        public proto.IAppStateSyncKeyFingerprint fingerprint { get; set; }
        /// <summary>
        /// AppStateSyncKeyData timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKeyData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKeyData instance
        /// </returns>
        public static proto.AppStateSyncKeyData create(proto.IAppStateSyncKeyData properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyData message. Does not implicitly {@link proto.AppStateSyncKeyData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKeyData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyData message, length delimited. Does not implicitly {@link proto.AppStateSyncKeyData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKeyData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKeyData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKeyData
        /// </returns>
        public static proto.AppStateSyncKeyData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKeyData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKeyData
        /// </returns>
        public static proto.AppStateSyncKeyData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKeyData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKeyData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKeyData
        /// </returns>
        public static proto.AppStateSyncKeyData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKeyData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKeyData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKeyData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKeyShare.
    /// </summary>
    interface IAppStateSyncKeyShare
    {
        /// <summary>
        /// AppStateSyncKeyShare keys
        /// </summary>
        List<proto.IAppStateSyncKey> keys { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKeyShare.
    /// </summary>
    class AppStateSyncKeyShare : IAppStateSyncKeyShare
    {
        /// <summary>
        /// Constructs a new AppStateSyncKeyShare.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKeyShare(proto.IAppStateSyncKeyShare properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKeyShare keys.
        /// </summary>
        public List<proto.IAppStateSyncKey> keys { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKeyShare instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKeyShare instance
        /// </returns>
        public static proto.AppStateSyncKeyShare create(proto.IAppStateSyncKeyShare properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyShare message. Does not implicitly {@link proto.AppStateSyncKeyShare.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyShare message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKeyShare message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyShare message, length delimited. Does not implicitly {@link proto.AppStateSyncKeyShare.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyShare message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKeyShare message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKeyShare message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKeyShare
        /// </returns>
        public static proto.AppStateSyncKeyShare decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKeyShare message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKeyShare
        /// </returns>
        public static proto.AppStateSyncKeyShare decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKeyShare message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKeyShare message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKeyShare
        /// </returns>
        public static proto.AppStateSyncKeyShare fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKeyShare message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyShare
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKeyShare message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKeyShare to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateSyncKeyRequest.
    /// </summary>
    interface IAppStateSyncKeyRequest
    {
        /// <summary>
        /// AppStateSyncKeyRequest keyIds
        /// </summary>
        List<proto.IAppStateSyncKeyId> keyIds { get; set; }
    }

    /// <summary>
    /// Represents an AppStateSyncKeyRequest.
    /// </summary>
    class AppStateSyncKeyRequest : IAppStateSyncKeyRequest
    {
        /// <summary>
        /// Constructs a new AppStateSyncKeyRequest.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateSyncKeyRequest(proto.IAppStateSyncKeyRequest properties = null)
        {
        }

        /// <summary>
        /// AppStateSyncKeyRequest keyIds.
        /// </summary>
        public List<proto.IAppStateSyncKeyId> keyIds { get; set; }

        /// <summary>
        /// Creates a new AppStateSyncKeyRequest instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateSyncKeyRequest instance
        /// </returns>
        public static proto.AppStateSyncKeyRequest create(proto.IAppStateSyncKeyRequest properties = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyRequest message. Does not implicitly {@link proto.AppStateSyncKeyRequest.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyRequest message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateSyncKeyRequest message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateSyncKeyRequest message, length delimited. Does not implicitly {@link proto.AppStateSyncKeyRequest.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyRequest message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateSyncKeyRequest message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateSyncKeyRequest message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateSyncKeyRequest
        /// </returns>
        public static proto.AppStateSyncKeyRequest decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateSyncKeyRequest message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateSyncKeyRequest
        /// </returns>
        public static proto.AppStateSyncKeyRequest decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateSyncKeyRequest message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateSyncKeyRequest message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateSyncKeyRequest
        /// </returns>
        public static proto.AppStateSyncKeyRequest fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateSyncKeyRequest message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateSyncKeyRequest
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateSyncKeyRequest message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateSyncKeyRequest to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an AppStateFatalExceptionNotification.
    /// </summary>
    interface IAppStateFatalExceptionNotification
    {
        /// <summary>
        /// AppStateFatalExceptionNotification collectionNames
        /// </summary>
        List<string> collectionNames { get; set; }

        /// <summary>
        /// AppStateFatalExceptionNotification timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }
    }

    /// <summary>
    /// Represents an AppStateFatalExceptionNotification.
    /// </summary>
    class AppStateFatalExceptionNotification : IAppStateFatalExceptionNotification
    {
        /// <summary>
        /// Constructs a new AppStateFatalExceptionNotification.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public AppStateFatalExceptionNotification(proto.IAppStateFatalExceptionNotification properties = null)
        {
        }

        /// <summary>
        /// AppStateFatalExceptionNotification collectionNames.
        /// </summary>
        public List<string> collectionNames { get; set; }
        /// <summary>
        /// AppStateFatalExceptionNotification timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }

        /// <summary>
        /// Creates a new AppStateFatalExceptionNotification instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// AppStateFatalExceptionNotification instance
        /// </returns>
        public static proto.AppStateFatalExceptionNotification create(proto.IAppStateFatalExceptionNotification properties = null);
        /// <summary>
        /// Encodes the specified AppStateFatalExceptionNotification message. Does not implicitly {@link proto.AppStateFatalExceptionNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateFatalExceptionNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IAppStateFatalExceptionNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified AppStateFatalExceptionNotification message, length delimited. Does not implicitly {@link proto.AppStateFatalExceptionNotification.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// AppStateFatalExceptionNotification message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IAppStateFatalExceptionNotification message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an AppStateFatalExceptionNotification message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// AppStateFatalExceptionNotification
        /// </returns>
        public static proto.AppStateFatalExceptionNotification decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an AppStateFatalExceptionNotification message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// AppStateFatalExceptionNotification
        /// </returns>
        public static proto.AppStateFatalExceptionNotification decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an AppStateFatalExceptionNotification message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an AppStateFatalExceptionNotification message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// AppStateFatalExceptionNotification
        /// </returns>
        public static proto.AppStateFatalExceptionNotification fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an AppStateFatalExceptionNotification message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// AppStateFatalExceptionNotification
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.AppStateFatalExceptionNotification message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this AppStateFatalExceptionNotification to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an InitialSecurityNotificationSettingSync.
    /// </summary>
    interface IInitialSecurityNotificationSettingSync
    {
        /// <summary>
        /// InitialSecurityNotificationSettingSync securityNotificationEnabled
        /// </summary>
        bool? securityNotificationEnabled { get; set; }
    }

    /// <summary>
    /// Represents an InitialSecurityNotificationSettingSync.
    /// </summary>
    class InitialSecurityNotificationSettingSync : IInitialSecurityNotificationSettingSync
    {
        /// <summary>
        /// Constructs a new InitialSecurityNotificationSettingSync.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public InitialSecurityNotificationSettingSync(proto.IInitialSecurityNotificationSettingSync properties = null)
        {
        }

        /// <summary>
        /// InitialSecurityNotificationSettingSync securityNotificationEnabled.
        /// </summary>
        public bool securityNotificationEnabled { get; set; }

        /// <summary>
        /// Creates a new InitialSecurityNotificationSettingSync instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// InitialSecurityNotificationSettingSync instance
        /// </returns>
        public static proto.InitialSecurityNotificationSettingSync create(proto.IInitialSecurityNotificationSettingSync properties = null);
        /// <summary>
        /// Encodes the specified InitialSecurityNotificationSettingSync message. Does not implicitly {@link proto.InitialSecurityNotificationSettingSync.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InitialSecurityNotificationSettingSync message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IInitialSecurityNotificationSettingSync message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified InitialSecurityNotificationSettingSync message, length delimited. Does not implicitly {@link proto.InitialSecurityNotificationSettingSync.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// InitialSecurityNotificationSettingSync message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IInitialSecurityNotificationSettingSync message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an InitialSecurityNotificationSettingSync message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// InitialSecurityNotificationSettingSync
        /// </returns>
        public static proto.InitialSecurityNotificationSettingSync decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an InitialSecurityNotificationSettingSync message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// InitialSecurityNotificationSettingSync
        /// </returns>
        public static proto.InitialSecurityNotificationSettingSync decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an InitialSecurityNotificationSettingSync message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an InitialSecurityNotificationSettingSync message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// InitialSecurityNotificationSettingSync
        /// </returns>
        public static proto.InitialSecurityNotificationSettingSync fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an InitialSecurityNotificationSettingSync message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// InitialSecurityNotificationSettingSync
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.InitialSecurityNotificationSettingSync message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this InitialSecurityNotificationSettingSync to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ContactsArrayMessage.
    /// </summary>
    interface IContactsArrayMessage
    {
        /// <summary>
        /// ContactsArrayMessage displayName
        /// </summary>
        string displayName { get; set; }

        /// <summary>
        /// ContactsArrayMessage contacts
        /// </summary>
        List<proto.IContactMessage> contacts { get; set; }

        /// <summary>
        /// ContactsArrayMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a ContactsArrayMessage.
    /// </summary>
    class ContactsArrayMessage : IContactsArrayMessage
    {
        /// <summary>
        /// Constructs a new ContactsArrayMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ContactsArrayMessage(proto.IContactsArrayMessage properties = null)
        {
        }

        /// <summary>
        /// ContactsArrayMessage displayName.
        /// </summary>
        public string displayName { get; set; }
        /// <summary>
        /// ContactsArrayMessage contacts.
        /// </summary>
        public List<proto.IContactMessage> contacts { get; set; }
        /// <summary>
        /// ContactsArrayMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new ContactsArrayMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ContactsArrayMessage instance
        /// </returns>
        public static proto.ContactsArrayMessage create(proto.IContactsArrayMessage properties = null);
        /// <summary>
        /// Encodes the specified ContactsArrayMessage message. Does not implicitly {@link proto.ContactsArrayMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactsArrayMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IContactsArrayMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ContactsArrayMessage message, length delimited. Does not implicitly {@link proto.ContactsArrayMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ContactsArrayMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IContactsArrayMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ContactsArrayMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ContactsArrayMessage
        /// </returns>
        public static proto.ContactsArrayMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ContactsArrayMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ContactsArrayMessage
        /// </returns>
        public static proto.ContactsArrayMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ContactsArrayMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ContactsArrayMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ContactsArrayMessage
        /// </returns>
        public static proto.ContactsArrayMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ContactsArrayMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ContactsArrayMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ContactsArrayMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ContactsArrayMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HSMCurrency.
    /// </summary>
    interface IHSMCurrency
    {
        /// <summary>
        /// HSMCurrency currencyCode
        /// </summary>
        string currencyCode { get; set; }

        /// <summary>
        /// HSMCurrency amount1000
        /// </summary>
        Nullable<OrType<double, Long>> amount1000 { get; set; }
    }

    /// <summary>
    /// Represents a HSMCurrency.
    /// </summary>
    class HSMCurrency : IHSMCurrency
    {
        /// <summary>
        /// Constructs a new HSMCurrency.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HSMCurrency(proto.IHSMCurrency properties = null)
        {
        }

        /// <summary>
        /// HSMCurrency currencyCode.
        /// </summary>
        public string currencyCode { get; set; }
        /// <summary>
        /// HSMCurrency amount1000.
        /// </summary>
        public OrType<double, Long> amount1000 { get; set; }

        /// <summary>
        /// Creates a new HSMCurrency instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HSMCurrency instance
        /// </returns>
        public static proto.HSMCurrency create(proto.IHSMCurrency properties = null);
        /// <summary>
        /// Encodes the specified HSMCurrency message. Does not implicitly {@link proto.HSMCurrency.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMCurrency message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHSMCurrency message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HSMCurrency message, length delimited. Does not implicitly {@link proto.HSMCurrency.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMCurrency message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHSMCurrency message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HSMCurrency message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HSMCurrency
        /// </returns>
        public static proto.HSMCurrency decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HSMCurrency message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HSMCurrency
        /// </returns>
        public static proto.HSMCurrency decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HSMCurrency message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HSMCurrency message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HSMCurrency
        /// </returns>
        public static proto.HSMCurrency fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HSMCurrency message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HSMCurrency
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HSMCurrency message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HSMCurrency to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HSMDateTimeComponent.
    /// </summary>
    interface IHSMDateTimeComponent
    {
        /// <summary>
        /// HSMDateTimeComponent dayOfWeek
        /// </summary>
        proto.HSMDateTimeComponent.HSMDateTimeComponentDayOfWeekType dayOfWeek { get; set; }

        /// <summary>
        /// HSMDateTimeComponent year
        /// </summary>
        double? year { get; set; }

        /// <summary>
        /// HSMDateTimeComponent month
        /// </summary>
        double? month { get; set; }

        /// <summary>
        /// HSMDateTimeComponent dayOfMonth
        /// </summary>
        double? dayOfMonth { get; set; }

        /// <summary>
        /// HSMDateTimeComponent hour
        /// </summary>
        double? hour { get; set; }

        /// <summary>
        /// HSMDateTimeComponent minute
        /// </summary>
        double? minute { get; set; }

        /// <summary>
        /// HSMDateTimeComponent calendar
        /// </summary>
        proto.HSMDateTimeComponent.HSMDateTimeComponentCalendarType calendar { get; set; }
    }

    /// <summary>
    /// Represents a HSMDateTimeComponent.
    /// </summary>
    class HSMDateTimeComponent : IHSMDateTimeComponent
    {
        /// <summary>
        /// Constructs a new HSMDateTimeComponent.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HSMDateTimeComponent(proto.IHSMDateTimeComponent properties = null)
        {
        }

        /// <summary>
        /// HSMDateTimeComponent dayOfWeek.
        /// </summary>
        public proto.HSMDateTimeComponent.HSMDateTimeComponentDayOfWeekType dayOfWeek { get; set; }
        /// <summary>
        /// HSMDateTimeComponent year.
        /// </summary>
        public double year { get; set; }
        /// <summary>
        /// HSMDateTimeComponent month.
        /// </summary>
        public double month { get; set; }
        /// <summary>
        /// HSMDateTimeComponent dayOfMonth.
        /// </summary>
        public double dayOfMonth { get; set; }
        /// <summary>
        /// HSMDateTimeComponent hour.
        /// </summary>
        public double hour { get; set; }
        /// <summary>
        /// HSMDateTimeComponent minute.
        /// </summary>
        public double minute { get; set; }
        /// <summary>
        /// HSMDateTimeComponent calendar.
        /// </summary>
        public proto.HSMDateTimeComponent.HSMDateTimeComponentCalendarType calendar { get; set; }

        /// <summary>
        /// Creates a new HSMDateTimeComponent instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HSMDateTimeComponent instance
        /// </returns>
        public static proto.HSMDateTimeComponent create(proto.IHSMDateTimeComponent properties = null);
        /// <summary>
        /// Encodes the specified HSMDateTimeComponent message. Does not implicitly {@link proto.HSMDateTimeComponent.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeComponent message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHSMDateTimeComponent message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HSMDateTimeComponent message, length delimited. Does not implicitly {@link proto.HSMDateTimeComponent.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeComponent message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHSMDateTimeComponent message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HSMDateTimeComponent message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HSMDateTimeComponent
        /// </returns>
        public static proto.HSMDateTimeComponent decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HSMDateTimeComponent message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HSMDateTimeComponent
        /// </returns>
        public static proto.HSMDateTimeComponent decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HSMDateTimeComponent message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HSMDateTimeComponent message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HSMDateTimeComponent
        /// </returns>
        public static proto.HSMDateTimeComponent fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HSMDateTimeComponent message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeComponent
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HSMDateTimeComponent message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HSMDateTimeComponent to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HSMDateTimeUnixEpoch.
    /// </summary>
    interface IHSMDateTimeUnixEpoch
    {
        /// <summary>
        /// HSMDateTimeUnixEpoch timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }
    }

    /// <summary>
    /// Represents a HSMDateTimeUnixEpoch.
    /// </summary>
    class HSMDateTimeUnixEpoch : IHSMDateTimeUnixEpoch
    {
        /// <summary>
        /// Constructs a new HSMDateTimeUnixEpoch.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HSMDateTimeUnixEpoch(proto.IHSMDateTimeUnixEpoch properties = null)
        {
        }

        /// <summary>
        /// HSMDateTimeUnixEpoch timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }

        /// <summary>
        /// Creates a new HSMDateTimeUnixEpoch instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HSMDateTimeUnixEpoch instance
        /// </returns>
        public static proto.HSMDateTimeUnixEpoch create(proto.IHSMDateTimeUnixEpoch properties = null);
        /// <summary>
        /// Encodes the specified HSMDateTimeUnixEpoch message. Does not implicitly {@link proto.HSMDateTimeUnixEpoch.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeUnixEpoch message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHSMDateTimeUnixEpoch message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HSMDateTimeUnixEpoch message, length delimited. Does not implicitly {@link proto.HSMDateTimeUnixEpoch.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeUnixEpoch message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHSMDateTimeUnixEpoch message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HSMDateTimeUnixEpoch message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HSMDateTimeUnixEpoch
        /// </returns>
        public static proto.HSMDateTimeUnixEpoch decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HSMDateTimeUnixEpoch message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HSMDateTimeUnixEpoch
        /// </returns>
        public static proto.HSMDateTimeUnixEpoch decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HSMDateTimeUnixEpoch message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HSMDateTimeUnixEpoch message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HSMDateTimeUnixEpoch
        /// </returns>
        public static proto.HSMDateTimeUnixEpoch fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HSMDateTimeUnixEpoch message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTimeUnixEpoch
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HSMDateTimeUnixEpoch message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HSMDateTimeUnixEpoch to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HSMDateTime.
    /// </summary>
    interface IHSMDateTime
    {
        /// <summary>
        /// HSMDateTime component
        /// </summary>
        proto.IHSMDateTimeComponent component { get; set; }

        /// <summary>
        /// HSMDateTime unixEpoch
        /// </summary>
        proto.IHSMDateTimeUnixEpoch unixEpoch { get; set; }
    }

    /// <summary>
    /// Represents a HSMDateTime.
    /// </summary>
    class HSMDateTime : IHSMDateTime
    {
        /// <summary>
        /// Constructs a new HSMDateTime.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HSMDateTime(proto.IHSMDateTime properties = null)
        {
        }

        /// <summary>
        /// HSMDateTime component.
        /// </summary>
        public proto.IHSMDateTimeComponent component { get; set; }
        /// <summary>
        /// HSMDateTime unixEpoch.
        /// </summary>
        public proto.IHSMDateTimeUnixEpoch unixEpoch { get; set; }
        /// <summary>
        /// HSMDateTime datetimeOneof.
        /// </summary>
        public string /*component*/ datetimeOneof { get; set; }

        /// <summary>
        /// Creates a new HSMDateTime instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HSMDateTime instance
        /// </returns>
        public static proto.HSMDateTime create(proto.IHSMDateTime properties = null);
        /// <summary>
        /// Encodes the specified HSMDateTime message. Does not implicitly {@link proto.HSMDateTime.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTime message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHSMDateTime message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HSMDateTime message, length delimited. Does not implicitly {@link proto.HSMDateTime.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTime message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHSMDateTime message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HSMDateTime message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HSMDateTime
        /// </returns>
        public static proto.HSMDateTime decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HSMDateTime message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HSMDateTime
        /// </returns>
        public static proto.HSMDateTime decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HSMDateTime message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HSMDateTime message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HSMDateTime
        /// </returns>
        public static proto.HSMDateTime fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HSMDateTime message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HSMDateTime
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HSMDateTime message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HSMDateTime to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HSMLocalizableParameter.
    /// </summary>
    interface IHSMLocalizableParameter
    {
        /// <summary>
        /// HSMLocalizableParameter default
        /// </summary>
        string @default { get; set; }

        /// <summary>
        /// HSMLocalizableParameter currency
        /// </summary>
        proto.IHSMCurrency currency { get; set; }

        /// <summary>
        /// HSMLocalizableParameter dateTime
        /// </summary>
        proto.IHSMDateTime dateTime { get; set; }
    }

    /// <summary>
    /// Represents a HSMLocalizableParameter.
    /// </summary>
    class HSMLocalizableParameter : IHSMLocalizableParameter
    {
        /// <summary>
        /// Constructs a new HSMLocalizableParameter.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HSMLocalizableParameter(proto.IHSMLocalizableParameter properties = null)
        {
        }

        /// <summary>
        /// HSMLocalizableParameter default.
        /// </summary>
        public string @default { get; set; }
        /// <summary>
        /// HSMLocalizableParameter currency.
        /// </summary>
        public proto.IHSMCurrency currency { get; set; }
        /// <summary>
        /// HSMLocalizableParameter dateTime.
        /// </summary>
        public proto.IHSMDateTime dateTime { get; set; }
        /// <summary>
        /// HSMLocalizableParameter paramOneof.
        /// </summary>
        public string /*currency*/ paramOneof { get; set; }

        /// <summary>
        /// Creates a new HSMLocalizableParameter instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HSMLocalizableParameter instance
        /// </returns>
        public static proto.HSMLocalizableParameter create(proto.IHSMLocalizableParameter properties = null);
        /// <summary>
        /// Encodes the specified HSMLocalizableParameter message. Does not implicitly {@link proto.HSMLocalizableParameter.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMLocalizableParameter message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHSMLocalizableParameter message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HSMLocalizableParameter message, length delimited. Does not implicitly {@link proto.HSMLocalizableParameter.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HSMLocalizableParameter message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHSMLocalizableParameter message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HSMLocalizableParameter message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HSMLocalizableParameter
        /// </returns>
        public static proto.HSMLocalizableParameter decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HSMLocalizableParameter message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HSMLocalizableParameter
        /// </returns>
        public static proto.HSMLocalizableParameter decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HSMLocalizableParameter message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HSMLocalizableParameter message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HSMLocalizableParameter
        /// </returns>
        public static proto.HSMLocalizableParameter fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HSMLocalizableParameter message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HSMLocalizableParameter
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HSMLocalizableParameter message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HSMLocalizableParameter to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HighlyStructuredMessage.
    /// </summary>
    interface IHighlyStructuredMessage
    {
        /// <summary>
        /// HighlyStructuredMessage namespace
        /// </summary>
        string @namespace { get; set; }

        /// <summary>
        /// HighlyStructuredMessage elementName
        /// </summary>
        string elementName { get; set; }

        /// <summary>
        /// HighlyStructuredMessage params
        /// </summary>
        List<string> @params { get; set; }

        /// <summary>
        /// HighlyStructuredMessage fallbackLg
        /// </summary>
        string fallbackLg { get; set; }

        /// <summary>
        /// HighlyStructuredMessage fallbackLc
        /// </summary>
        string fallbackLc { get; set; }

        /// <summary>
        /// HighlyStructuredMessage localizableParams
        /// </summary>
        List<proto.IHSMLocalizableParameter> localizableParams { get; set; }

        /// <summary>
        /// HighlyStructuredMessage deterministicLg
        /// </summary>
        string deterministicLg { get; set; }

        /// <summary>
        /// HighlyStructuredMessage deterministicLc
        /// </summary>
        string deterministicLc { get; set; }

        /// <summary>
        /// HighlyStructuredMessage hydratedHsm
        /// </summary>
        proto.ITemplateMessage hydratedHsm { get; set; }
    }

    /// <summary>
    /// Represents a HighlyStructuredMessage.
    /// </summary>
    class HighlyStructuredMessage : IHighlyStructuredMessage
    {
        /// <summary>
        /// Constructs a new HighlyStructuredMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HighlyStructuredMessage(proto.IHighlyStructuredMessage properties = null)
        {
        }

        /// <summary>
        /// HighlyStructuredMessage namespace.
        /// </summary>
        public string @namespace { get; set; }
        /// <summary>
        /// HighlyStructuredMessage elementName.
        /// </summary>
        public string elementName { get; set; }
        /// <summary>
        /// HighlyStructuredMessage params.
        /// </summary>
        public List<string> @params { get; set; }
        /// <summary>
        /// HighlyStructuredMessage fallbackLg.
        /// </summary>
        public string fallbackLg { get; set; }
        /// <summary>
        /// HighlyStructuredMessage fallbackLc.
        /// </summary>
        public string fallbackLc { get; set; }
        /// <summary>
        /// HighlyStructuredMessage localizableParams.
        /// </summary>
        public List<proto.IHSMLocalizableParameter> localizableParams { get; set; }
        /// <summary>
        /// HighlyStructuredMessage deterministicLg.
        /// </summary>
        public string deterministicLg { get; set; }
        /// <summary>
        /// HighlyStructuredMessage deterministicLc.
        /// </summary>
        public string deterministicLc { get; set; }
        /// <summary>
        /// HighlyStructuredMessage hydratedHsm.
        /// </summary>
        public proto.ITemplateMessage hydratedHsm { get; set; }

        /// <summary>
        /// Creates a new HighlyStructuredMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HighlyStructuredMessage instance
        /// </returns>
        public static proto.HighlyStructuredMessage create(proto.IHighlyStructuredMessage properties = null);
        /// <summary>
        /// Encodes the specified HighlyStructuredMessage message. Does not implicitly {@link proto.HighlyStructuredMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HighlyStructuredMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHighlyStructuredMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HighlyStructuredMessage message, length delimited. Does not implicitly {@link proto.HighlyStructuredMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HighlyStructuredMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHighlyStructuredMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HighlyStructuredMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HighlyStructuredMessage
        /// </returns>
        public static proto.HighlyStructuredMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HighlyStructuredMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HighlyStructuredMessage
        /// </returns>
        public static proto.HighlyStructuredMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HighlyStructuredMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HighlyStructuredMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HighlyStructuredMessage
        /// </returns>
        public static proto.HighlyStructuredMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HighlyStructuredMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HighlyStructuredMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HighlyStructuredMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HighlyStructuredMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SendPaymentMessage.
    /// </summary>
    interface ISendPaymentMessage
    {
        /// <summary>
        /// SendPaymentMessage noteMessage
        /// </summary>
        proto.IMessage noteMessage { get; set; }

        /// <summary>
        /// SendPaymentMessage requestMessageKey
        /// </summary>
        proto.IMessageKey requestMessageKey { get; set; }

        /// <summary>
        /// SendPaymentMessage background
        /// </summary>
        proto.IPaymentBackground background { get; set; }
    }

    /// <summary>
    /// Represents a SendPaymentMessage.
    /// </summary>
    class SendPaymentMessage : ISendPaymentMessage
    {
        /// <summary>
        /// Constructs a new SendPaymentMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SendPaymentMessage(proto.ISendPaymentMessage properties = null)
        {
        }

        /// <summary>
        /// SendPaymentMessage noteMessage.
        /// </summary>
        public proto.IMessage noteMessage { get; set; }
        /// <summary>
        /// SendPaymentMessage requestMessageKey.
        /// </summary>
        public proto.IMessageKey requestMessageKey { get; set; }
        /// <summary>
        /// SendPaymentMessage background.
        /// </summary>
        public proto.IPaymentBackground background { get; set; }

        /// <summary>
        /// Creates a new SendPaymentMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SendPaymentMessage instance
        /// </returns>
        public static proto.SendPaymentMessage create(proto.ISendPaymentMessage properties = null);
        /// <summary>
        /// Encodes the specified SendPaymentMessage message. Does not implicitly {@link proto.SendPaymentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SendPaymentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISendPaymentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SendPaymentMessage message, length delimited. Does not implicitly {@link proto.SendPaymentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SendPaymentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISendPaymentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SendPaymentMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SendPaymentMessage
        /// </returns>
        public static proto.SendPaymentMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SendPaymentMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SendPaymentMessage
        /// </returns>
        public static proto.SendPaymentMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SendPaymentMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SendPaymentMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SendPaymentMessage
        /// </returns>
        public static proto.SendPaymentMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SendPaymentMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SendPaymentMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SendPaymentMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SendPaymentMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a RequestPaymentMessage.
    /// </summary>
    interface IRequestPaymentMessage
    {
        /// <summary>
        /// RequestPaymentMessage noteMessage
        /// </summary>
        proto.IMessage noteMessage { get; set; }

        /// <summary>
        /// RequestPaymentMessage currencyCodeIso4217
        /// </summary>
        string currencyCodeIso4217 { get; set; }

        /// <summary>
        /// RequestPaymentMessage amount1000
        /// </summary>
        Nullable<OrType<double, Long>> amount1000 { get; set; }

        /// <summary>
        /// RequestPaymentMessage requestFrom
        /// </summary>
        string requestFrom { get; set; }

        /// <summary>
        /// RequestPaymentMessage expiryTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> expiryTimestamp { get; set; }

        /// <summary>
        /// RequestPaymentMessage amount
        /// </summary>
        proto.IMoney amount { get; set; }

        /// <summary>
        /// RequestPaymentMessage background
        /// </summary>
        proto.IPaymentBackground background { get; set; }
    }

    /// <summary>
    /// Represents a RequestPaymentMessage.
    /// </summary>
    class RequestPaymentMessage : IRequestPaymentMessage
    {
        /// <summary>
        /// Constructs a new RequestPaymentMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public RequestPaymentMessage(proto.IRequestPaymentMessage properties = null)
        {
        }

        /// <summary>
        /// RequestPaymentMessage noteMessage.
        /// </summary>
        public proto.IMessage noteMessage { get; set; }
        /// <summary>
        /// RequestPaymentMessage currencyCodeIso4217.
        /// </summary>
        public string currencyCodeIso4217 { get; set; }
        /// <summary>
        /// RequestPaymentMessage amount1000.
        /// </summary>
        public OrType<double, Long> amount1000 { get; set; }
        /// <summary>
        /// RequestPaymentMessage requestFrom.
        /// </summary>
        public string requestFrom { get; set; }
        /// <summary>
        /// RequestPaymentMessage expiryTimestamp.
        /// </summary>
        public OrType<double, Long> expiryTimestamp { get; set; }
        /// <summary>
        /// RequestPaymentMessage amount.
        /// </summary>
        public proto.IMoney amount { get; set; }
        /// <summary>
        /// RequestPaymentMessage background.
        /// </summary>
        public proto.IPaymentBackground background { get; set; }

        /// <summary>
        /// Creates a new RequestPaymentMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// RequestPaymentMessage instance
        /// </returns>
        public static proto.RequestPaymentMessage create(proto.IRequestPaymentMessage properties = null);
        /// <summary>
        /// Encodes the specified RequestPaymentMessage message. Does not implicitly {@link proto.RequestPaymentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RequestPaymentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRequestPaymentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified RequestPaymentMessage message, length delimited. Does not implicitly {@link proto.RequestPaymentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// RequestPaymentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRequestPaymentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a RequestPaymentMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// RequestPaymentMessage
        /// </returns>
        public static proto.RequestPaymentMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a RequestPaymentMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// RequestPaymentMessage
        /// </returns>
        public static proto.RequestPaymentMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a RequestPaymentMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a RequestPaymentMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// RequestPaymentMessage
        /// </returns>
        public static proto.RequestPaymentMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a RequestPaymentMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// RequestPaymentMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.RequestPaymentMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this RequestPaymentMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DeclinePaymentRequestMessage.
    /// </summary>
    interface IDeclinePaymentRequestMessage
    {
        /// <summary>
        /// DeclinePaymentRequestMessage key
        /// </summary>
        proto.IMessageKey key { get; set; }
    }

    /// <summary>
    /// Represents a DeclinePaymentRequestMessage.
    /// </summary>
    class DeclinePaymentRequestMessage : IDeclinePaymentRequestMessage
    {
        /// <summary>
        /// Constructs a new DeclinePaymentRequestMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DeclinePaymentRequestMessage(proto.IDeclinePaymentRequestMessage properties = null)
        {
        }

        /// <summary>
        /// DeclinePaymentRequestMessage key.
        /// </summary>
        public proto.IMessageKey key { get; set; }

        /// <summary>
        /// Creates a new DeclinePaymentRequestMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DeclinePaymentRequestMessage instance
        /// </returns>
        public static proto.DeclinePaymentRequestMessage create(proto.IDeclinePaymentRequestMessage properties = null);
        /// <summary>
        /// Encodes the specified DeclinePaymentRequestMessage message. Does not implicitly {@link proto.DeclinePaymentRequestMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeclinePaymentRequestMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDeclinePaymentRequestMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DeclinePaymentRequestMessage message, length delimited. Does not implicitly {@link proto.DeclinePaymentRequestMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeclinePaymentRequestMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDeclinePaymentRequestMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DeclinePaymentRequestMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DeclinePaymentRequestMessage
        /// </returns>
        public static proto.DeclinePaymentRequestMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DeclinePaymentRequestMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DeclinePaymentRequestMessage
        /// </returns>
        public static proto.DeclinePaymentRequestMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DeclinePaymentRequestMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DeclinePaymentRequestMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DeclinePaymentRequestMessage
        /// </returns>
        public static proto.DeclinePaymentRequestMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DeclinePaymentRequestMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DeclinePaymentRequestMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DeclinePaymentRequestMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DeclinePaymentRequestMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a CancelPaymentRequestMessage.
    /// </summary>
    interface ICancelPaymentRequestMessage
    {
        /// <summary>
        /// CancelPaymentRequestMessage key
        /// </summary>
        proto.IMessageKey key { get; set; }
    }

    /// <summary>
    /// Represents a CancelPaymentRequestMessage.
    /// </summary>
    class CancelPaymentRequestMessage : ICancelPaymentRequestMessage
    {
        /// <summary>
        /// Constructs a new CancelPaymentRequestMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public CancelPaymentRequestMessage(proto.ICancelPaymentRequestMessage properties = null)
        {
        }

        /// <summary>
        /// CancelPaymentRequestMessage key.
        /// </summary>
        public proto.IMessageKey key { get; set; }

        /// <summary>
        /// Creates a new CancelPaymentRequestMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// CancelPaymentRequestMessage instance
        /// </returns>
        public static proto.CancelPaymentRequestMessage create(proto.ICancelPaymentRequestMessage properties = null);
        /// <summary>
        /// Encodes the specified CancelPaymentRequestMessage message. Does not implicitly {@link proto.CancelPaymentRequestMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CancelPaymentRequestMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICancelPaymentRequestMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified CancelPaymentRequestMessage message, length delimited. Does not implicitly {@link proto.CancelPaymentRequestMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CancelPaymentRequestMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICancelPaymentRequestMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a CancelPaymentRequestMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// CancelPaymentRequestMessage
        /// </returns>
        public static proto.CancelPaymentRequestMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a CancelPaymentRequestMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// CancelPaymentRequestMessage
        /// </returns>
        public static proto.CancelPaymentRequestMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a CancelPaymentRequestMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a CancelPaymentRequestMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// CancelPaymentRequestMessage
        /// </returns>
        public static proto.CancelPaymentRequestMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a CancelPaymentRequestMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// CancelPaymentRequestMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.CancelPaymentRequestMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this CancelPaymentRequestMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PaymentInviteMessage.
    /// </summary>
    interface IPaymentInviteMessage
    {
        /// <summary>
        /// PaymentInviteMessage serviceType
        /// </summary>
        proto.PaymentInviteMessage.PaymentInviteMessageServiceType serviceType { get; set; }

        /// <summary>
        /// PaymentInviteMessage expiryTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> expiryTimestamp { get; set; }
    }

    /// <summary>
    /// Represents a PaymentInviteMessage.
    /// </summary>
    class PaymentInviteMessage : IPaymentInviteMessage
    {
        /// <summary>
        /// Constructs a new PaymentInviteMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PaymentInviteMessage(proto.IPaymentInviteMessage properties = null)
        {
        }

        /// <summary>
        /// PaymentInviteMessage serviceType.
        /// </summary>
        public proto.PaymentInviteMessage.PaymentInviteMessageServiceType serviceType { get; set; }
        /// <summary>
        /// PaymentInviteMessage expiryTimestamp.
        /// </summary>
        public OrType<double, Long> expiryTimestamp { get; set; }

        /// <summary>
        /// Creates a new PaymentInviteMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PaymentInviteMessage instance
        /// </returns>
        public static proto.PaymentInviteMessage create(proto.IPaymentInviteMessage properties = null);
        /// <summary>
        /// Encodes the specified PaymentInviteMessage message. Does not implicitly {@link proto.PaymentInviteMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentInviteMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPaymentInviteMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PaymentInviteMessage message, length delimited. Does not implicitly {@link proto.PaymentInviteMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentInviteMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPaymentInviteMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PaymentInviteMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PaymentInviteMessage
        /// </returns>
        public static proto.PaymentInviteMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PaymentInviteMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PaymentInviteMessage
        /// </returns>
        public static proto.PaymentInviteMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PaymentInviteMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PaymentInviteMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PaymentInviteMessage
        /// </returns>
        public static proto.PaymentInviteMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PaymentInviteMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PaymentInviteMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PaymentInviteMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PaymentInviteMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a LiveLocationMessage.
    /// </summary>
    interface ILiveLocationMessage
    {
        /// <summary>
        /// LiveLocationMessage degreesLatitude
        /// </summary>
        double? degreesLatitude { get; set; }

        /// <summary>
        /// LiveLocationMessage degreesLongitude
        /// </summary>
        double? degreesLongitude { get; set; }

        /// <summary>
        /// LiveLocationMessage accuracyInMeters
        /// </summary>
        double? accuracyInMeters { get; set; }

        /// <summary>
        /// LiveLocationMessage speedInMps
        /// </summary>
        double? speedInMps { get; set; }

        /// <summary>
        /// LiveLocationMessage degreesClockwiseFromMagneticNorth
        /// </summary>
        double? degreesClockwiseFromMagneticNorth { get; set; }

        /// <summary>
        /// LiveLocationMessage caption
        /// </summary>
        string caption { get; set; }

        /// <summary>
        /// LiveLocationMessage sequenceNumber
        /// </summary>
        Nullable<OrType<double, Long>> sequenceNumber { get; set; }

        /// <summary>
        /// LiveLocationMessage timeOffset
        /// </summary>
        double? timeOffset { get; set; }

        /// <summary>
        /// LiveLocationMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// LiveLocationMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a LiveLocationMessage.
    /// </summary>
    class LiveLocationMessage : ILiveLocationMessage
    {
        /// <summary>
        /// Constructs a new LiveLocationMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public LiveLocationMessage(proto.ILiveLocationMessage properties = null)
        {
        }

        /// <summary>
        /// LiveLocationMessage degreesLatitude.
        /// </summary>
        public double degreesLatitude { get; set; }
        /// <summary>
        /// LiveLocationMessage degreesLongitude.
        /// </summary>
        public double degreesLongitude { get; set; }
        /// <summary>
        /// LiveLocationMessage accuracyInMeters.
        /// </summary>
        public double accuracyInMeters { get; set; }
        /// <summary>
        /// LiveLocationMessage speedInMps.
        /// </summary>
        public double speedInMps { get; set; }
        /// <summary>
        /// LiveLocationMessage degreesClockwiseFromMagneticNorth.
        /// </summary>
        public double degreesClockwiseFromMagneticNorth { get; set; }
        /// <summary>
        /// LiveLocationMessage caption.
        /// </summary>
        public string caption { get; set; }
        /// <summary>
        /// LiveLocationMessage sequenceNumber.
        /// </summary>
        public OrType<double, Long> sequenceNumber { get; set; }
        /// <summary>
        /// LiveLocationMessage timeOffset.
        /// </summary>
        public double timeOffset { get; set; }
        /// <summary>
        /// LiveLocationMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// LiveLocationMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new LiveLocationMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// LiveLocationMessage instance
        /// </returns>
        public static proto.LiveLocationMessage create(proto.ILiveLocationMessage properties = null);
        /// <summary>
        /// Encodes the specified LiveLocationMessage message. Does not implicitly {@link proto.LiveLocationMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LiveLocationMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ILiveLocationMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified LiveLocationMessage message, length delimited. Does not implicitly {@link proto.LiveLocationMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// LiveLocationMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ILiveLocationMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a LiveLocationMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// LiveLocationMessage
        /// </returns>
        public static proto.LiveLocationMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a LiveLocationMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// LiveLocationMessage
        /// </returns>
        public static proto.LiveLocationMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a LiveLocationMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a LiveLocationMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// LiveLocationMessage
        /// </returns>
        public static proto.LiveLocationMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a LiveLocationMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// LiveLocationMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.LiveLocationMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this LiveLocationMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a StickerMessage.
    /// </summary>
    interface IStickerMessage
    {
        /// <summary>
        /// StickerMessage url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// StickerMessage fileSha256
        /// </summary>
        Uint8Array fileSha256 { get; set; }

        /// <summary>
        /// StickerMessage fileEncSha256
        /// </summary>
        Uint8Array fileEncSha256 { get; set; }

        /// <summary>
        /// StickerMessage mediaKey
        /// </summary>
        Uint8Array mediaKey { get; set; }

        /// <summary>
        /// StickerMessage mimetype
        /// </summary>
        string mimetype { get; set; }

        /// <summary>
        /// StickerMessage height
        /// </summary>
        double? height { get; set; }

        /// <summary>
        /// StickerMessage width
        /// </summary>
        double? width { get; set; }

        /// <summary>
        /// StickerMessage directPath
        /// </summary>
        string directPath { get; set; }

        /// <summary>
        /// StickerMessage fileLength
        /// </summary>
        Nullable<OrType<double, Long>> fileLength { get; set; }

        /// <summary>
        /// StickerMessage mediaKeyTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> mediaKeyTimestamp { get; set; }

        /// <summary>
        /// StickerMessage firstFrameLength
        /// </summary>
        double? firstFrameLength { get; set; }

        /// <summary>
        /// StickerMessage firstFrameSidecar
        /// </summary>
        Uint8Array firstFrameSidecar { get; set; }

        /// <summary>
        /// StickerMessage isAnimated
        /// </summary>
        bool? isAnimated { get; set; }

        /// <summary>
        /// StickerMessage pngThumbnail
        /// </summary>
        Uint8Array pngThumbnail { get; set; }

        /// <summary>
        /// StickerMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a StickerMessage.
    /// </summary>
    class StickerMessage : IStickerMessage
    {
        /// <summary>
        /// Constructs a new StickerMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public StickerMessage(proto.IStickerMessage properties = null)
        {
        }

        /// <summary>
        /// StickerMessage url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// StickerMessage fileSha256.
        /// </summary>
        public Uint8Array fileSha256 { get; set; }
        /// <summary>
        /// StickerMessage fileEncSha256.
        /// </summary>
        public Uint8Array fileEncSha256 { get; set; }
        /// <summary>
        /// StickerMessage mediaKey.
        /// </summary>
        public Uint8Array mediaKey { get; set; }
        /// <summary>
        /// StickerMessage mimetype.
        /// </summary>
        public string mimetype { get; set; }
        /// <summary>
        /// StickerMessage height.
        /// </summary>
        public double height { get; set; }
        /// <summary>
        /// StickerMessage width.
        /// </summary>
        public double width { get; set; }
        /// <summary>
        /// StickerMessage directPath.
        /// </summary>
        public string directPath { get; set; }
        /// <summary>
        /// StickerMessage fileLength.
        /// </summary>
        public OrType<double, Long> fileLength { get; set; }
        /// <summary>
        /// StickerMessage mediaKeyTimestamp.
        /// </summary>
        public OrType<double, Long> mediaKeyTimestamp { get; set; }
        /// <summary>
        /// StickerMessage firstFrameLength.
        /// </summary>
        public double firstFrameLength { get; set; }
        /// <summary>
        /// StickerMessage firstFrameSidecar.
        /// </summary>
        public Uint8Array firstFrameSidecar { get; set; }
        /// <summary>
        /// StickerMessage isAnimated.
        /// </summary>
        public bool isAnimated { get; set; }
        /// <summary>
        /// StickerMessage pngThumbnail.
        /// </summary>
        public Uint8Array pngThumbnail { get; set; }
        /// <summary>
        /// StickerMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new StickerMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// StickerMessage instance
        /// </returns>
        public static proto.StickerMessage create(proto.IStickerMessage properties = null);
        /// <summary>
        /// Encodes the specified StickerMessage message. Does not implicitly {@link proto.StickerMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// StickerMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IStickerMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified StickerMessage message, length delimited. Does not implicitly {@link proto.StickerMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// StickerMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IStickerMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a StickerMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// StickerMessage
        /// </returns>
        public static proto.StickerMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a StickerMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// StickerMessage
        /// </returns>
        public static proto.StickerMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a StickerMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a StickerMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// StickerMessage
        /// </returns>
        public static proto.StickerMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a StickerMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// StickerMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.StickerMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this StickerMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a FourRowTemplate.
    /// </summary>
    interface IFourRowTemplate
    {
        /// <summary>
        /// FourRowTemplate content
        /// </summary>
        proto.IHighlyStructuredMessage content { get; set; }

        /// <summary>
        /// FourRowTemplate footer
        /// </summary>
        proto.IHighlyStructuredMessage footer { get; set; }

        /// <summary>
        /// FourRowTemplate buttons
        /// </summary>
        List<proto.ITemplateButton> buttons { get; set; }

        /// <summary>
        /// FourRowTemplate documentMessage
        /// </summary>
        proto.IDocumentMessage documentMessage { get; set; }

        /// <summary>
        /// FourRowTemplate highlyStructuredMessage
        /// </summary>
        proto.IHighlyStructuredMessage highlyStructuredMessage { get; set; }

        /// <summary>
        /// FourRowTemplate imageMessage
        /// </summary>
        proto.IImageMessage imageMessage { get; set; }

        /// <summary>
        /// FourRowTemplate videoMessage
        /// </summary>
        proto.IVideoMessage videoMessage { get; set; }

        /// <summary>
        /// FourRowTemplate locationMessage
        /// </summary>
        proto.ILocationMessage locationMessage { get; set; }
    }

    /// <summary>
    /// Represents a FourRowTemplate.
    /// </summary>
    class FourRowTemplate : IFourRowTemplate
    {
        /// <summary>
        /// Constructs a new FourRowTemplate.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public FourRowTemplate(proto.IFourRowTemplate properties = null)
        {
        }

        /// <summary>
        /// FourRowTemplate content.
        /// </summary>
        public proto.IHighlyStructuredMessage content { get; set; }
        /// <summary>
        /// FourRowTemplate footer.
        /// </summary>
        public proto.IHighlyStructuredMessage footer { get; set; }
        /// <summary>
        /// FourRowTemplate buttons.
        /// </summary>
        public List<proto.ITemplateButton> buttons { get; set; }
        /// <summary>
        /// FourRowTemplate documentMessage.
        /// </summary>
        public proto.IDocumentMessage documentMessage { get; set; }
        /// <summary>
        /// FourRowTemplate highlyStructuredMessage.
        /// </summary>
        public proto.IHighlyStructuredMessage highlyStructuredMessage { get; set; }
        /// <summary>
        /// FourRowTemplate imageMessage.
        /// </summary>
        public proto.IImageMessage imageMessage { get; set; }
        /// <summary>
        /// FourRowTemplate videoMessage.
        /// </summary>
        public proto.IVideoMessage videoMessage { get; set; }
        /// <summary>
        /// FourRowTemplate locationMessage.
        /// </summary>
        public proto.ILocationMessage locationMessage { get; set; }
        /// <summary>
        /// FourRowTemplate title.
        /// </summary>
        public string /*documentMessage*/ title { get; set; }

        /// <summary>
        /// Creates a new FourRowTemplate instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// FourRowTemplate instance
        /// </returns>
        public static proto.FourRowTemplate create(proto.IFourRowTemplate properties = null);
        /// <summary>
        /// Encodes the specified FourRowTemplate message. Does not implicitly {@link proto.FourRowTemplate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// FourRowTemplate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IFourRowTemplate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified FourRowTemplate message, length delimited. Does not implicitly {@link proto.FourRowTemplate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// FourRowTemplate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IFourRowTemplate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a FourRowTemplate message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// FourRowTemplate
        /// </returns>
        public static proto.FourRowTemplate decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a FourRowTemplate message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// FourRowTemplate
        /// </returns>
        public static proto.FourRowTemplate decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a FourRowTemplate message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a FourRowTemplate message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// FourRowTemplate
        /// </returns>
        public static proto.FourRowTemplate fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a FourRowTemplate message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// FourRowTemplate
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.FourRowTemplate message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this FourRowTemplate to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a HydratedFourRowTemplate.
    /// </summary>
    interface IHydratedFourRowTemplate
    {
        /// <summary>
        /// HydratedFourRowTemplate hydratedContentText
        /// </summary>
        string hydratedContentText { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate hydratedFooterText
        /// </summary>
        string hydratedFooterText { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate hydratedButtons
        /// </summary>
        List<proto.IHydratedTemplateButton> hydratedButtons { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate templateId
        /// </summary>
        string templateId { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate documentMessage
        /// </summary>
        proto.IDocumentMessage documentMessage { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate hydratedTitleText
        /// </summary>
        string hydratedTitleText { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate imageMessage
        /// </summary>
        proto.IImageMessage imageMessage { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate videoMessage
        /// </summary>
        proto.IVideoMessage videoMessage { get; set; }

        /// <summary>
        /// HydratedFourRowTemplate locationMessage
        /// </summary>
        proto.ILocationMessage locationMessage { get; set; }
    }

    /// <summary>
    /// Represents a HydratedFourRowTemplate.
    /// </summary>
    class HydratedFourRowTemplate : IHydratedFourRowTemplate
    {
        /// <summary>
        /// Constructs a new HydratedFourRowTemplate.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public HydratedFourRowTemplate(proto.IHydratedFourRowTemplate properties = null)
        {
        }

        /// <summary>
        /// HydratedFourRowTemplate hydratedContentText.
        /// </summary>
        public string hydratedContentText { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate hydratedFooterText.
        /// </summary>
        public string hydratedFooterText { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate hydratedButtons.
        /// </summary>
        public List<proto.IHydratedTemplateButton> hydratedButtons { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate templateId.
        /// </summary>
        public string templateId { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate documentMessage.
        /// </summary>
        public proto.IDocumentMessage documentMessage { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate hydratedTitleText.
        /// </summary>
        public string hydratedTitleText { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate imageMessage.
        /// </summary>
        public proto.IImageMessage imageMessage { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate videoMessage.
        /// </summary>
        public proto.IVideoMessage videoMessage { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate locationMessage.
        /// </summary>
        public proto.ILocationMessage locationMessage { get; set; }
        /// <summary>
        /// HydratedFourRowTemplate title.
        /// </summary>
        public string /*documentMessage*/ title { get; set; }

        /// <summary>
        /// Creates a new HydratedFourRowTemplate instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// HydratedFourRowTemplate instance
        /// </returns>
        public static proto.HydratedFourRowTemplate create(proto.IHydratedFourRowTemplate properties = null);
        /// <summary>
        /// Encodes the specified HydratedFourRowTemplate message. Does not implicitly {@link proto.HydratedFourRowTemplate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedFourRowTemplate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IHydratedFourRowTemplate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified HydratedFourRowTemplate message, length delimited. Does not implicitly {@link proto.HydratedFourRowTemplate.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// HydratedFourRowTemplate message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IHydratedFourRowTemplate message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a HydratedFourRowTemplate message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// HydratedFourRowTemplate
        /// </returns>
        public static proto.HydratedFourRowTemplate decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a HydratedFourRowTemplate message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// HydratedFourRowTemplate
        /// </returns>
        public static proto.HydratedFourRowTemplate decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a HydratedFourRowTemplate message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a HydratedFourRowTemplate message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// HydratedFourRowTemplate
        /// </returns>
        public static proto.HydratedFourRowTemplate fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a HydratedFourRowTemplate message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// HydratedFourRowTemplate
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.HydratedFourRowTemplate message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this HydratedFourRowTemplate to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a TemplateMessage.
    /// </summary>
    interface ITemplateMessage
    {
        /// <summary>
        /// TemplateMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// TemplateMessage hydratedTemplate
        /// </summary>
        proto.IHydratedFourRowTemplate hydratedTemplate { get; set; }

        /// <summary>
        /// TemplateMessage fourRowTemplate
        /// </summary>
        proto.IFourRowTemplate fourRowTemplate { get; set; }

        /// <summary>
        /// TemplateMessage hydratedFourRowTemplate
        /// </summary>
        proto.IHydratedFourRowTemplate hydratedFourRowTemplate { get; set; }
    }

    /// <summary>
    /// Represents a TemplateMessage.
    /// </summary>
    class TemplateMessage : ITemplateMessage
    {
        /// <summary>
        /// Constructs a new TemplateMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public TemplateMessage(proto.ITemplateMessage properties = null)
        {
        }

        /// <summary>
        /// TemplateMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// TemplateMessage hydratedTemplate.
        /// </summary>
        public proto.IHydratedFourRowTemplate hydratedTemplate { get; set; }
        /// <summary>
        /// TemplateMessage fourRowTemplate.
        /// </summary>
        public proto.IFourRowTemplate fourRowTemplate { get; set; }
        /// <summary>
        /// TemplateMessage hydratedFourRowTemplate.
        /// </summary>
        public proto.IHydratedFourRowTemplate hydratedFourRowTemplate { get; set; }
        /// <summary>
        /// TemplateMessage format.
        /// </summary>
        public string /*fourRowTemplate*/ format { get; set; }

        /// <summary>
        /// Creates a new TemplateMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// TemplateMessage instance
        /// </returns>
        public static proto.TemplateMessage create(proto.ITemplateMessage properties = null);
        /// <summary>
        /// Encodes the specified TemplateMessage message. Does not implicitly {@link proto.TemplateMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ITemplateMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified TemplateMessage message, length delimited. Does not implicitly {@link proto.TemplateMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ITemplateMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a TemplateMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// TemplateMessage
        /// </returns>
        public static proto.TemplateMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a TemplateMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// TemplateMessage
        /// </returns>
        public static proto.TemplateMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a TemplateMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a TemplateMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// TemplateMessage
        /// </returns>
        public static proto.TemplateMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a TemplateMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// TemplateMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.TemplateMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this TemplateMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a TemplateButtonReplyMessage.
    /// </summary>
    interface ITemplateButtonReplyMessage
    {
        /// <summary>
        /// TemplateButtonReplyMessage selectedId
        /// </summary>
        string selectedId { get; set; }

        /// <summary>
        /// TemplateButtonReplyMessage selectedDisplayText
        /// </summary>
        string selectedDisplayText { get; set; }

        /// <summary>
        /// TemplateButtonReplyMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// TemplateButtonReplyMessage selectedIndex
        /// </summary>
        double? selectedIndex { get; set; }
    }

    /// <summary>
    /// Represents a TemplateButtonReplyMessage.
    /// </summary>
    class TemplateButtonReplyMessage : ITemplateButtonReplyMessage
    {
        /// <summary>
        /// Constructs a new TemplateButtonReplyMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public TemplateButtonReplyMessage(proto.ITemplateButtonReplyMessage properties = null)
        {
        }

        /// <summary>
        /// TemplateButtonReplyMessage selectedId.
        /// </summary>
        public string selectedId { get; set; }
        /// <summary>
        /// TemplateButtonReplyMessage selectedDisplayText.
        /// </summary>
        public string selectedDisplayText { get; set; }
        /// <summary>
        /// TemplateButtonReplyMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// TemplateButtonReplyMessage selectedIndex.
        /// </summary>
        public double selectedIndex { get; set; }

        /// <summary>
        /// Creates a new TemplateButtonReplyMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// TemplateButtonReplyMessage instance
        /// </returns>
        public static proto.TemplateButtonReplyMessage create(proto.ITemplateButtonReplyMessage properties = null);
        /// <summary>
        /// Encodes the specified TemplateButtonReplyMessage message. Does not implicitly {@link proto.TemplateButtonReplyMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateButtonReplyMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ITemplateButtonReplyMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified TemplateButtonReplyMessage message, length delimited. Does not implicitly {@link proto.TemplateButtonReplyMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// TemplateButtonReplyMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ITemplateButtonReplyMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a TemplateButtonReplyMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// TemplateButtonReplyMessage
        /// </returns>
        public static proto.TemplateButtonReplyMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a TemplateButtonReplyMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// TemplateButtonReplyMessage
        /// </returns>
        public static proto.TemplateButtonReplyMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a TemplateButtonReplyMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a TemplateButtonReplyMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// TemplateButtonReplyMessage
        /// </returns>
        public static proto.TemplateButtonReplyMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a TemplateButtonReplyMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// TemplateButtonReplyMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.TemplateButtonReplyMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this TemplateButtonReplyMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a CatalogSnapshot.
    /// </summary>
    interface ICatalogSnapshot
    {
        /// <summary>
        /// CatalogSnapshot catalogImage
        /// </summary>
        proto.IImageMessage catalogImage { get; set; }

        /// <summary>
        /// CatalogSnapshot title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// CatalogSnapshot description
        /// </summary>
        string description { get; set; }
    }

    /// <summary>
    /// Represents a CatalogSnapshot.
    /// </summary>
    class CatalogSnapshot : ICatalogSnapshot
    {
        /// <summary>
        /// Constructs a new CatalogSnapshot.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public CatalogSnapshot(proto.ICatalogSnapshot properties = null)
        {
        }

        /// <summary>
        /// CatalogSnapshot catalogImage.
        /// </summary>
        public proto.IImageMessage catalogImage { get; set; }
        /// <summary>
        /// CatalogSnapshot title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// CatalogSnapshot description.
        /// </summary>
        public string description { get; set; }

        /// <summary>
        /// Creates a new CatalogSnapshot instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// CatalogSnapshot instance
        /// </returns>
        public static proto.CatalogSnapshot create(proto.ICatalogSnapshot properties = null);
        /// <summary>
        /// Encodes the specified CatalogSnapshot message. Does not implicitly {@link proto.CatalogSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CatalogSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICatalogSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified CatalogSnapshot message, length delimited. Does not implicitly {@link proto.CatalogSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CatalogSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICatalogSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a CatalogSnapshot message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// CatalogSnapshot
        /// </returns>
        public static proto.CatalogSnapshot decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a CatalogSnapshot message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// CatalogSnapshot
        /// </returns>
        public static proto.CatalogSnapshot decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a CatalogSnapshot message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a CatalogSnapshot message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// CatalogSnapshot
        /// </returns>
        public static proto.CatalogSnapshot fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a CatalogSnapshot message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// CatalogSnapshot
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.CatalogSnapshot message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this CatalogSnapshot to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProductSnapshot.
    /// </summary>
    interface IProductSnapshot
    {
        /// <summary>
        /// ProductSnapshot productImage
        /// </summary>
        proto.IImageMessage productImage { get; set; }

        /// <summary>
        /// ProductSnapshot productId
        /// </summary>
        string productId { get; set; }

        /// <summary>
        /// ProductSnapshot title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ProductSnapshot description
        /// </summary>
        string description { get; set; }

        /// <summary>
        /// ProductSnapshot currencyCode
        /// </summary>
        string currencyCode { get; set; }

        /// <summary>
        /// ProductSnapshot priceAmount1000
        /// </summary>
        Nullable<OrType<double, Long>> priceAmount1000 { get; set; }

        /// <summary>
        /// ProductSnapshot retailerId
        /// </summary>
        string retailerId { get; set; }

        /// <summary>
        /// ProductSnapshot url
        /// </summary>
        string url { get; set; }

        /// <summary>
        /// ProductSnapshot productImageCount
        /// </summary>
        double? productImageCount { get; set; }

        /// <summary>
        /// ProductSnapshot firstImageId
        /// </summary>
        string firstImageId { get; set; }

        /// <summary>
        /// ProductSnapshot salePriceAmount1000
        /// </summary>
        Nullable<OrType<double, Long>> salePriceAmount1000 { get; set; }
    }

    /// <summary>
    /// Represents a ProductSnapshot.
    /// </summary>
    class ProductSnapshot : IProductSnapshot
    {
        /// <summary>
        /// Constructs a new ProductSnapshot.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProductSnapshot(proto.IProductSnapshot properties = null)
        {
        }

        /// <summary>
        /// ProductSnapshot productImage.
        /// </summary>
        public proto.IImageMessage productImage { get; set; }
        /// <summary>
        /// ProductSnapshot productId.
        /// </summary>
        public string productId { get; set; }
        /// <summary>
        /// ProductSnapshot title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ProductSnapshot description.
        /// </summary>
        public string description { get; set; }
        /// <summary>
        /// ProductSnapshot currencyCode.
        /// </summary>
        public string currencyCode { get; set; }
        /// <summary>
        /// ProductSnapshot priceAmount1000.
        /// </summary>
        public OrType<double, Long> priceAmount1000 { get; set; }
        /// <summary>
        /// ProductSnapshot retailerId.
        /// </summary>
        public string retailerId { get; set; }
        /// <summary>
        /// ProductSnapshot url.
        /// </summary>
        public string url { get; set; }
        /// <summary>
        /// ProductSnapshot productImageCount.
        /// </summary>
        public double productImageCount { get; set; }
        /// <summary>
        /// ProductSnapshot firstImageId.
        /// </summary>
        public string firstImageId { get; set; }
        /// <summary>
        /// ProductSnapshot salePriceAmount1000.
        /// </summary>
        public OrType<double, Long> salePriceAmount1000 { get; set; }

        /// <summary>
        /// Creates a new ProductSnapshot instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProductSnapshot instance
        /// </returns>
        public static proto.ProductSnapshot create(proto.IProductSnapshot properties = null);
        /// <summary>
        /// Encodes the specified ProductSnapshot message. Does not implicitly {@link proto.ProductSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProductSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProductSnapshot message, length delimited. Does not implicitly {@link proto.ProductSnapshot.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductSnapshot message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProductSnapshot message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProductSnapshot message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProductSnapshot
        /// </returns>
        public static proto.ProductSnapshot decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProductSnapshot message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProductSnapshot
        /// </returns>
        public static proto.ProductSnapshot decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProductSnapshot message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProductSnapshot message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProductSnapshot
        /// </returns>
        public static proto.ProductSnapshot fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProductSnapshot message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProductSnapshot
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProductSnapshot message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProductSnapshot to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProductMessage.
    /// </summary>
    interface IProductMessage
    {
        /// <summary>
        /// ProductMessage product
        /// </summary>
        proto.IProductSnapshot product { get; set; }

        /// <summary>
        /// ProductMessage businessOwnerJid
        /// </summary>
        string businessOwnerJid { get; set; }

        /// <summary>
        /// ProductMessage catalog
        /// </summary>
        proto.ICatalogSnapshot catalog { get; set; }

        /// <summary>
        /// ProductMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a ProductMessage.
    /// </summary>
    class ProductMessage : IProductMessage
    {
        /// <summary>
        /// Constructs a new ProductMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProductMessage(proto.IProductMessage properties = null)
        {
        }

        /// <summary>
        /// ProductMessage product.
        /// </summary>
        public proto.IProductSnapshot product { get; set; }
        /// <summary>
        /// ProductMessage businessOwnerJid.
        /// </summary>
        public string businessOwnerJid { get; set; }
        /// <summary>
        /// ProductMessage catalog.
        /// </summary>
        public proto.ICatalogSnapshot catalog { get; set; }
        /// <summary>
        /// ProductMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new ProductMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProductMessage instance
        /// </returns>
        public static proto.ProductMessage create(proto.IProductMessage properties = null);
        /// <summary>
        /// Encodes the specified ProductMessage message. Does not implicitly {@link proto.ProductMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProductMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProductMessage message, length delimited. Does not implicitly {@link proto.ProductMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProductMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProductMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProductMessage
        /// </returns>
        public static proto.ProductMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProductMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProductMessage
        /// </returns>
        public static proto.ProductMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProductMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProductMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProductMessage
        /// </returns>
        public static proto.ProductMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProductMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProductMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProductMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProductMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of an OrderMessage.
    /// </summary>
    interface IOrderMessage
    {
        /// <summary>
        /// OrderMessage orderId
        /// </summary>
        string orderId { get; set; }

        /// <summary>
        /// OrderMessage thumbnail
        /// </summary>
        Uint8Array thumbnail { get; set; }

        /// <summary>
        /// OrderMessage itemCount
        /// </summary>
        double? itemCount { get; set; }

        /// <summary>
        /// OrderMessage status
        /// </summary>
        proto.OrderMessage.OrderMessageOrderStatus status { get; set; }

        /// <summary>
        /// OrderMessage surface
        /// </summary>
        proto.OrderMessage.OrderMessageOrderSurface surface { get; set; }

        /// <summary>
        /// OrderMessage message
        /// </summary>
        string message { get; set; }

        /// <summary>
        /// OrderMessage orderTitle
        /// </summary>
        string orderTitle { get; set; }

        /// <summary>
        /// OrderMessage sellerJid
        /// </summary>
        string sellerJid { get; set; }

        /// <summary>
        /// OrderMessage token
        /// </summary>
        string token { get; set; }

        /// <summary>
        /// OrderMessage totalAmount1000
        /// </summary>
        Nullable<OrType<double, Long>> totalAmount1000 { get; set; }

        /// <summary>
        /// OrderMessage totalCurrencyCode
        /// </summary>
        string totalCurrencyCode { get; set; }

        /// <summary>
        /// OrderMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents an OrderMessage.
    /// </summary>
    class OrderMessage : IOrderMessage
    {
        /// <summary>
        /// Constructs a new OrderMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public OrderMessage(proto.IOrderMessage properties = null)
        {
        }

        /// <summary>
        /// OrderMessage orderId.
        /// </summary>
        public string orderId { get; set; }
        /// <summary>
        /// OrderMessage thumbnail.
        /// </summary>
        public Uint8Array thumbnail { get; set; }
        /// <summary>
        /// OrderMessage itemCount.
        /// </summary>
        public double itemCount { get; set; }
        /// <summary>
        /// OrderMessage status.
        /// </summary>
        public proto.OrderMessage.OrderMessageOrderStatus status { get; set; }
        /// <summary>
        /// OrderMessage surface.
        /// </summary>
        public proto.OrderMessage.OrderMessageOrderSurface surface { get; set; }
        /// <summary>
        /// OrderMessage message.
        /// </summary>
        public string message { get; set; }
        /// <summary>
        /// OrderMessage orderTitle.
        /// </summary>
        public string orderTitle { get; set; }
        /// <summary>
        /// OrderMessage sellerJid.
        /// </summary>
        public string sellerJid { get; set; }
        /// <summary>
        /// OrderMessage token.
        /// </summary>
        public string token { get; set; }
        /// <summary>
        /// OrderMessage totalAmount1000.
        /// </summary>
        public OrType<double, Long> totalAmount1000 { get; set; }
        /// <summary>
        /// OrderMessage totalCurrencyCode.
        /// </summary>
        public string totalCurrencyCode { get; set; }
        /// <summary>
        /// OrderMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new OrderMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// OrderMessage instance
        /// </returns>
        public static proto.OrderMessage create(proto.IOrderMessage properties = null);
        /// <summary>
        /// Encodes the specified OrderMessage message. Does not implicitly {@link proto.OrderMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// OrderMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IOrderMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified OrderMessage message, length delimited. Does not implicitly {@link proto.OrderMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// OrderMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IOrderMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes an OrderMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// OrderMessage
        /// </returns>
        public static proto.OrderMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes an OrderMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// OrderMessage
        /// </returns>
        public static proto.OrderMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies an OrderMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates an OrderMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// OrderMessage
        /// </returns>
        public static proto.OrderMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from an OrderMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// OrderMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.OrderMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this OrderMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Row.
    /// </summary>
    interface IRow
    {
        /// <summary>
        /// Row title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// Row description
        /// </summary>
        string description { get; set; }

        /// <summary>
        /// Row rowId
        /// </summary>
        string rowId { get; set; }
    }

    /// <summary>
    /// Represents a Row.
    /// </summary>
    class Row : IRow
    {
        /// <summary>
        /// Constructs a new Row.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Row(proto.IRow properties = null)
        {
        }

        /// <summary>
        /// Row title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// Row description.
        /// </summary>
        public string description { get; set; }
        /// <summary>
        /// Row rowId.
        /// </summary>
        public string rowId { get; set; }

        /// <summary>
        /// Creates a new Row instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Row instance
        /// </returns>
        public static proto.Row create(proto.IRow properties = null);
        /// <summary>
        /// Encodes the specified Row message. Does not implicitly {@link proto.Row.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Row message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IRow message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Row message, length delimited. Does not implicitly {@link proto.Row.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Row message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IRow message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Row message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Row
        /// </returns>
        public static proto.Row decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Row message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Row
        /// </returns>
        public static proto.Row decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Row message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Row message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Row
        /// </returns>
        public static proto.Row fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Row message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Row
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Row message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Row to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Section.
    /// </summary>
    interface ISection
    {
        /// <summary>
        /// Section title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// Section rows
        /// </summary>
        List<proto.IRow> rows { get; set; }
    }

    /// <summary>
    /// Represents a Section.
    /// </summary>
    class Section : ISection
    {
        /// <summary>
        /// Constructs a new Section.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Section(proto.ISection properties = null)
        {
        }

        /// <summary>
        /// Section title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// Section rows.
        /// </summary>
        public List<proto.IRow> rows { get; set; }

        /// <summary>
        /// Creates a new Section instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Section instance
        /// </returns>
        public static proto.Section create(proto.ISection properties = null);
        /// <summary>
        /// Encodes the specified Section message. Does not implicitly {@link proto.Section.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Section message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISection message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Section message, length delimited. Does not implicitly {@link proto.Section.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Section message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISection message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Section message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Section
        /// </returns>
        public static proto.Section decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Section message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Section
        /// </returns>
        public static proto.Section decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Section message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Section message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Section
        /// </returns>
        public static proto.Section fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Section message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Section
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Section message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Section to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Product.
    /// </summary>
    interface IProduct
    {
        /// <summary>
        /// Product productId
        /// </summary>
        string productId { get; set; }
    }

    /// <summary>
    /// Represents a Product.
    /// </summary>
    class Product : IProduct
    {
        /// <summary>
        /// Constructs a new Product.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Product(proto.IProduct properties = null)
        {
        }

        /// <summary>
        /// Product productId.
        /// </summary>
        public string productId { get; set; }

        /// <summary>
        /// Creates a new Product instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Product instance
        /// </returns>
        public static proto.Product create(proto.IProduct properties = null);
        /// <summary>
        /// Encodes the specified Product message. Does not implicitly {@link proto.Product.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Product message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProduct message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Product message, length delimited. Does not implicitly {@link proto.Product.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Product message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProduct message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Product message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Product
        /// </returns>
        public static proto.Product decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Product message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Product
        /// </returns>
        public static proto.Product decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Product message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Product message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Product
        /// </returns>
        public static proto.Product fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Product message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Product
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Product message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Product to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProductSection.
    /// </summary>
    interface IProductSection
    {
        /// <summary>
        /// ProductSection title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ProductSection products
        /// </summary>
        List<proto.IProduct> products { get; set; }
    }

    /// <summary>
    /// Represents a ProductSection.
    /// </summary>
    class ProductSection : IProductSection
    {
        /// <summary>
        /// Constructs a new ProductSection.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProductSection(proto.IProductSection properties = null)
        {
        }

        /// <summary>
        /// ProductSection title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ProductSection products.
        /// </summary>
        public List<proto.IProduct> products { get; set; }

        /// <summary>
        /// Creates a new ProductSection instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProductSection instance
        /// </returns>
        public static proto.ProductSection create(proto.IProductSection properties = null);
        /// <summary>
        /// Encodes the specified ProductSection message. Does not implicitly {@link proto.ProductSection.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductSection message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProductSection message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProductSection message, length delimited. Does not implicitly {@link proto.ProductSection.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductSection message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProductSection message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProductSection message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProductSection
        /// </returns>
        public static proto.ProductSection decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProductSection message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProductSection
        /// </returns>
        public static proto.ProductSection decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProductSection message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProductSection message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProductSection
        /// </returns>
        public static proto.ProductSection fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProductSection message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProductSection
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProductSection message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProductSection to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProductListHeaderImage.
    /// </summary>
    interface IProductListHeaderImage
    {
        /// <summary>
        /// ProductListHeaderImage productId
        /// </summary>
        string productId { get; set; }

        /// <summary>
        /// ProductListHeaderImage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }
    }

    /// <summary>
    /// Represents a ProductListHeaderImage.
    /// </summary>
    class ProductListHeaderImage : IProductListHeaderImage
    {
        /// <summary>
        /// Constructs a new ProductListHeaderImage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProductListHeaderImage(proto.IProductListHeaderImage properties = null)
        {
        }

        /// <summary>
        /// ProductListHeaderImage productId.
        /// </summary>
        public string productId { get; set; }
        /// <summary>
        /// ProductListHeaderImage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// Creates a new ProductListHeaderImage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProductListHeaderImage instance
        /// </returns>
        public static proto.ProductListHeaderImage create(proto.IProductListHeaderImage properties = null);
        /// <summary>
        /// Encodes the specified ProductListHeaderImage message. Does not implicitly {@link proto.ProductListHeaderImage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductListHeaderImage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProductListHeaderImage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProductListHeaderImage message, length delimited. Does not implicitly {@link proto.ProductListHeaderImage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductListHeaderImage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProductListHeaderImage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProductListHeaderImage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProductListHeaderImage
        /// </returns>
        public static proto.ProductListHeaderImage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProductListHeaderImage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProductListHeaderImage
        /// </returns>
        public static proto.ProductListHeaderImage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProductListHeaderImage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProductListHeaderImage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProductListHeaderImage
        /// </returns>
        public static proto.ProductListHeaderImage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProductListHeaderImage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProductListHeaderImage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProductListHeaderImage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProductListHeaderImage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ProductListInfo.
    /// </summary>
    interface IProductListInfo
    {
        /// <summary>
        /// ProductListInfo productSections
        /// </summary>
        List<proto.IProductSection> productSections { get; set; }

        /// <summary>
        /// ProductListInfo headerImage
        /// </summary>
        proto.IProductListHeaderImage headerImage { get; set; }

        /// <summary>
        /// ProductListInfo businessOwnerJid
        /// </summary>
        string businessOwnerJid { get; set; }
    }

    /// <summary>
    /// Represents a ProductListInfo.
    /// </summary>
    class ProductListInfo : IProductListInfo
    {
        /// <summary>
        /// Constructs a new ProductListInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ProductListInfo(proto.IProductListInfo properties = null)
        {
        }

        /// <summary>
        /// ProductListInfo productSections.
        /// </summary>
        public List<proto.IProductSection> productSections { get; set; }
        /// <summary>
        /// ProductListInfo headerImage.
        /// </summary>
        public proto.IProductListHeaderImage headerImage { get; set; }
        /// <summary>
        /// ProductListInfo businessOwnerJid.
        /// </summary>
        public string businessOwnerJid { get; set; }

        /// <summary>
        /// Creates a new ProductListInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ProductListInfo instance
        /// </returns>
        public static proto.ProductListInfo create(proto.IProductListInfo properties = null);
        /// <summary>
        /// Encodes the specified ProductListInfo message. Does not implicitly {@link proto.ProductListInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductListInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IProductListInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ProductListInfo message, length delimited. Does not implicitly {@link proto.ProductListInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ProductListInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IProductListInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ProductListInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ProductListInfo
        /// </returns>
        public static proto.ProductListInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ProductListInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ProductListInfo
        /// </returns>
        public static proto.ProductListInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ProductListInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ProductListInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ProductListInfo
        /// </returns>
        public static proto.ProductListInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ProductListInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ProductListInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ProductListInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ProductListInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ListMessage.
    /// </summary>
    interface IListMessage
    {
        /// <summary>
        /// ListMessage title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ListMessage description
        /// </summary>
        string description { get; set; }

        /// <summary>
        /// ListMessage buttonText
        /// </summary>
        string buttonText { get; set; }

        /// <summary>
        /// ListMessage listType
        /// </summary>
        proto.ListMessage.ListMessageListType listType { get; set; }

        /// <summary>
        /// ListMessage sections
        /// </summary>
        List<proto.ISection> sections { get; set; }

        /// <summary>
        /// ListMessage productListInfo
        /// </summary>
        proto.IProductListInfo productListInfo { get; set; }

        /// <summary>
        /// ListMessage footerText
        /// </summary>
        string footerText { get; set; }

        /// <summary>
        /// ListMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a ListMessage.
    /// </summary>
    class ListMessage : IListMessage
    {
        /// <summary>
        /// Constructs a new ListMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ListMessage(proto.IListMessage properties = null)
        {
        }

        /// <summary>
        /// ListMessage title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ListMessage description.
        /// </summary>
        public string description { get; set; }
        /// <summary>
        /// ListMessage buttonText.
        /// </summary>
        public string buttonText { get; set; }
        /// <summary>
        /// ListMessage listType.
        /// </summary>
        public proto.ListMessage.ListMessageListType listType { get; set; }
        /// <summary>
        /// ListMessage sections.
        /// </summary>
        public List<proto.ISection> sections { get; set; }
        /// <summary>
        /// ListMessage productListInfo.
        /// </summary>
        public proto.IProductListInfo productListInfo { get; set; }
        /// <summary>
        /// ListMessage footerText.
        /// </summary>
        public string footerText { get; set; }
        /// <summary>
        /// ListMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new ListMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ListMessage instance
        /// </returns>
        public static proto.ListMessage create(proto.IListMessage properties = null);
        /// <summary>
        /// Encodes the specified ListMessage message. Does not implicitly {@link proto.ListMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ListMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IListMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ListMessage message, length delimited. Does not implicitly {@link proto.ListMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ListMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IListMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ListMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ListMessage
        /// </returns>
        public static proto.ListMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ListMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ListMessage
        /// </returns>
        public static proto.ListMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ListMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ListMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ListMessage
        /// </returns>
        public static proto.ListMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ListMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ListMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ListMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ListMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a SingleSelectReply.
    /// </summary>
    interface ISingleSelectReply
    {
        /// <summary>
        /// SingleSelectReply selectedRowId
        /// </summary>
        string selectedRowId { get; set; }
    }

    /// <summary>
    /// Represents a SingleSelectReply.
    /// </summary>
    class SingleSelectReply : ISingleSelectReply
    {
        /// <summary>
        /// Constructs a new SingleSelectReply.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public SingleSelectReply(proto.ISingleSelectReply properties = null)
        {
        }

        /// <summary>
        /// SingleSelectReply selectedRowId.
        /// </summary>
        public string selectedRowId { get; set; }

        /// <summary>
        /// Creates a new SingleSelectReply instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// SingleSelectReply instance
        /// </returns>
        public static proto.SingleSelectReply create(proto.ISingleSelectReply properties = null);
        /// <summary>
        /// Encodes the specified SingleSelectReply message. Does not implicitly {@link proto.SingleSelectReply.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SingleSelectReply message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ISingleSelectReply message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified SingleSelectReply message, length delimited. Does not implicitly {@link proto.SingleSelectReply.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// SingleSelectReply message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ISingleSelectReply message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a SingleSelectReply message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// SingleSelectReply
        /// </returns>
        public static proto.SingleSelectReply decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a SingleSelectReply message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// SingleSelectReply
        /// </returns>
        public static proto.SingleSelectReply decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a SingleSelectReply message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a SingleSelectReply message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// SingleSelectReply
        /// </returns>
        public static proto.SingleSelectReply fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a SingleSelectReply message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// SingleSelectReply
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.SingleSelectReply message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this SingleSelectReply to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ListResponseMessage.
    /// </summary>
    interface IListResponseMessage
    {
        /// <summary>
        /// ListResponseMessage title
        /// </summary>
        string title { get; set; }

        /// <summary>
        /// ListResponseMessage listType
        /// </summary>
        proto.ListResponseMessage.ListResponseMessageListType listType { get; set; }

        /// <summary>
        /// ListResponseMessage singleSelectReply
        /// </summary>
        proto.ISingleSelectReply singleSelectReply { get; set; }

        /// <summary>
        /// ListResponseMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// ListResponseMessage description
        /// </summary>
        string description { get; set; }
    }

    /// <summary>
    /// Represents a ListResponseMessage.
    /// </summary>
    class ListResponseMessage : IListResponseMessage
    {
        /// <summary>
        /// Constructs a new ListResponseMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ListResponseMessage(proto.IListResponseMessage properties = null)
        {
        }

        /// <summary>
        /// ListResponseMessage title.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// ListResponseMessage listType.
        /// </summary>
        public proto.ListResponseMessage.ListResponseMessageListType listType { get; set; }
        /// <summary>
        /// ListResponseMessage singleSelectReply.
        /// </summary>
        public proto.ISingleSelectReply singleSelectReply { get; set; }
        /// <summary>
        /// ListResponseMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// ListResponseMessage description.
        /// </summary>
        public string description { get; set; }

        /// <summary>
        /// Creates a new ListResponseMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ListResponseMessage instance
        /// </returns>
        public static proto.ListResponseMessage create(proto.IListResponseMessage properties = null);
        /// <summary>
        /// Encodes the specified ListResponseMessage message. Does not implicitly {@link proto.ListResponseMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ListResponseMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IListResponseMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ListResponseMessage message, length delimited. Does not implicitly {@link proto.ListResponseMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ListResponseMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IListResponseMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ListResponseMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ListResponseMessage
        /// </returns>
        public static proto.ListResponseMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ListResponseMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ListResponseMessage
        /// </returns>
        public static proto.ListResponseMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ListResponseMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ListResponseMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ListResponseMessage
        /// </returns>
        public static proto.ListResponseMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ListResponseMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ListResponseMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ListResponseMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ListResponseMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a GroupInviteMessage.
    /// </summary>
    interface IGroupInviteMessage
    {
        /// <summary>
        /// GroupInviteMessage groupJid
        /// </summary>
        string groupJid { get; set; }

        /// <summary>
        /// GroupInviteMessage inviteCode
        /// </summary>
        string inviteCode { get; set; }

        /// <summary>
        /// GroupInviteMessage inviteExpiration
        /// </summary>
        Nullable<OrType<double, Long>> inviteExpiration { get; set; }

        /// <summary>
        /// GroupInviteMessage groupName
        /// </summary>
        string groupName { get; set; }

        /// <summary>
        /// GroupInviteMessage jpegThumbnail
        /// </summary>
        Uint8Array jpegThumbnail { get; set; }

        /// <summary>
        /// GroupInviteMessage caption
        /// </summary>
        string caption { get; set; }

        /// <summary>
        /// GroupInviteMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }
    }

    /// <summary>
    /// Represents a GroupInviteMessage.
    /// </summary>
    class GroupInviteMessage : IGroupInviteMessage
    {
        /// <summary>
        /// Constructs a new GroupInviteMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public GroupInviteMessage(proto.IGroupInviteMessage properties = null)
        {
        }

        /// <summary>
        /// GroupInviteMessage groupJid.
        /// </summary>
        public string groupJid { get; set; }
        /// <summary>
        /// GroupInviteMessage inviteCode.
        /// </summary>
        public string inviteCode { get; set; }
        /// <summary>
        /// GroupInviteMessage inviteExpiration.
        /// </summary>
        public OrType<double, Long> inviteExpiration { get; set; }
        /// <summary>
        /// GroupInviteMessage groupName.
        /// </summary>
        public string groupName { get; set; }
        /// <summary>
        /// GroupInviteMessage jpegThumbnail.
        /// </summary>
        public Uint8Array jpegThumbnail { get; set; }
        /// <summary>
        /// GroupInviteMessage caption.
        /// </summary>
        public string caption { get; set; }
        /// <summary>
        /// GroupInviteMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// Creates a new GroupInviteMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// GroupInviteMessage instance
        /// </returns>
        public static proto.GroupInviteMessage create(proto.IGroupInviteMessage properties = null);
        /// <summary>
        /// Encodes the specified GroupInviteMessage message. Does not implicitly {@link proto.GroupInviteMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// GroupInviteMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IGroupInviteMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified GroupInviteMessage message, length delimited. Does not implicitly {@link proto.GroupInviteMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// GroupInviteMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IGroupInviteMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a GroupInviteMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// GroupInviteMessage
        /// </returns>
        public static proto.GroupInviteMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a GroupInviteMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// GroupInviteMessage
        /// </returns>
        public static proto.GroupInviteMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a GroupInviteMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a GroupInviteMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// GroupInviteMessage
        /// </returns>
        public static proto.GroupInviteMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a GroupInviteMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// GroupInviteMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.GroupInviteMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this GroupInviteMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a DeviceSentMessage.
    /// </summary>
    interface IDeviceSentMessage
    {
        /// <summary>
        /// DeviceSentMessage destinationJid
        /// </summary>
        string destinationJid { get; set; }

        /// <summary>
        /// DeviceSentMessage message
        /// </summary>
        proto.IMessage message { get; set; }

        /// <summary>
        /// DeviceSentMessage phash
        /// </summary>
        string phash { get; set; }
    }

    /// <summary>
    /// Represents a DeviceSentMessage.
    /// </summary>
    class DeviceSentMessage : IDeviceSentMessage
    {
        /// <summary>
        /// Constructs a new DeviceSentMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public DeviceSentMessage(proto.IDeviceSentMessage properties = null)
        {
        }

        /// <summary>
        /// DeviceSentMessage destinationJid.
        /// </summary>
        public string destinationJid { get; set; }
        /// <summary>
        /// DeviceSentMessage message.
        /// </summary>
        public proto.IMessage message { get; set; }
        /// <summary>
        /// DeviceSentMessage phash.
        /// </summary>
        public string phash { get; set; }

        /// <summary>
        /// Creates a new DeviceSentMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// DeviceSentMessage instance
        /// </returns>
        public static proto.DeviceSentMessage create(proto.IDeviceSentMessage properties = null);
        /// <summary>
        /// Encodes the specified DeviceSentMessage message. Does not implicitly {@link proto.DeviceSentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeviceSentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IDeviceSentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified DeviceSentMessage message, length delimited. Does not implicitly {@link proto.DeviceSentMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// DeviceSentMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IDeviceSentMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a DeviceSentMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// DeviceSentMessage
        /// </returns>
        public static proto.DeviceSentMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a DeviceSentMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// DeviceSentMessage
        /// </returns>
        public static proto.DeviceSentMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a DeviceSentMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a DeviceSentMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// DeviceSentMessage
        /// </returns>
        public static proto.DeviceSentMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a DeviceSentMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// DeviceSentMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.DeviceSentMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this DeviceSentMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a FutureProofMessage.
    /// </summary>
    interface IFutureProofMessage
    {
        /// <summary>
        /// FutureProofMessage message
        /// </summary>
        proto.IMessage message { get; set; }
    }

    /// <summary>
    /// Represents a FutureProofMessage.
    /// </summary>
    class FutureProofMessage : IFutureProofMessage
    {
        /// <summary>
        /// Constructs a new FutureProofMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public FutureProofMessage(proto.IFutureProofMessage properties = null)
        {
        }

        /// <summary>
        /// FutureProofMessage message.
        /// </summary>
        public proto.IMessage message { get; set; }

        /// <summary>
        /// Creates a new FutureProofMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// FutureProofMessage instance
        /// </returns>
        public static proto.FutureProofMessage create(proto.IFutureProofMessage properties = null);
        /// <summary>
        /// Encodes the specified FutureProofMessage message. Does not implicitly {@link proto.FutureProofMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// FutureProofMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IFutureProofMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified FutureProofMessage message, length delimited. Does not implicitly {@link proto.FutureProofMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// FutureProofMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IFutureProofMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a FutureProofMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// FutureProofMessage
        /// </returns>
        public static proto.FutureProofMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a FutureProofMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// FutureProofMessage
        /// </returns>
        public static proto.FutureProofMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a FutureProofMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a FutureProofMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// FutureProofMessage
        /// </returns>
        public static proto.FutureProofMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a FutureProofMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// FutureProofMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.FutureProofMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this FutureProofMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ButtonText.
    /// </summary>
    interface IButtonText
    {
        /// <summary>
        /// ButtonText displayText
        /// </summary>
        string displayText { get; set; }
    }

    /// <summary>
    /// Represents a ButtonText.
    /// </summary>
    class ButtonText : IButtonText
    {
        /// <summary>
        /// Constructs a new ButtonText.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ButtonText(proto.IButtonText properties = null)
        {
        }

        /// <summary>
        /// ButtonText displayText.
        /// </summary>
        public string displayText { get; set; }

        /// <summary>
        /// Creates a new ButtonText instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ButtonText instance
        /// </returns>
        public static proto.ButtonText create(proto.IButtonText properties = null);
        /// <summary>
        /// Encodes the specified ButtonText message. Does not implicitly {@link proto.ButtonText.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonText message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IButtonText message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ButtonText message, length delimited. Does not implicitly {@link proto.ButtonText.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonText message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IButtonText message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ButtonText message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ButtonText
        /// </returns>
        public static proto.ButtonText decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ButtonText message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ButtonText
        /// </returns>
        public static proto.ButtonText decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ButtonText message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ButtonText message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ButtonText
        /// </returns>
        public static proto.ButtonText fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ButtonText message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ButtonText
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ButtonText message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ButtonText to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a NativeFlowInfo.
    /// </summary>
    interface INativeFlowInfo
    {
        /// <summary>
        /// NativeFlowInfo name
        /// </summary>
        string name { get; set; }

        /// <summary>
        /// NativeFlowInfo paramsJson
        /// </summary>
        string paramsJson { get; set; }
    }

    /// <summary>
    /// Represents a NativeFlowInfo.
    /// </summary>
    class NativeFlowInfo : INativeFlowInfo
    {
        /// <summary>
        /// Constructs a new NativeFlowInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public NativeFlowInfo(proto.INativeFlowInfo properties = null)
        {
        }

        /// <summary>
        /// NativeFlowInfo name.
        /// </summary>
        public string name { get; set; }
        /// <summary>
        /// NativeFlowInfo paramsJson.
        /// </summary>
        public string paramsJson { get; set; }

        /// <summary>
        /// Creates a new NativeFlowInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// NativeFlowInfo instance
        /// </returns>
        public static proto.NativeFlowInfo create(proto.INativeFlowInfo properties = null);
        /// <summary>
        /// Encodes the specified NativeFlowInfo message. Does not implicitly {@link proto.NativeFlowInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NativeFlowInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.INativeFlowInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified NativeFlowInfo message, length delimited. Does not implicitly {@link proto.NativeFlowInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NativeFlowInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.INativeFlowInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a NativeFlowInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// NativeFlowInfo
        /// </returns>
        public static proto.NativeFlowInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a NativeFlowInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// NativeFlowInfo
        /// </returns>
        public static proto.NativeFlowInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a NativeFlowInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a NativeFlowInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// NativeFlowInfo
        /// </returns>
        public static proto.NativeFlowInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a NativeFlowInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// NativeFlowInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.NativeFlowInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this NativeFlowInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Button.
    /// </summary>
    interface IButton
    {
        /// <summary>
        /// Button buttonId
        /// </summary>
        string buttonId { get; set; }

        /// <summary>
        /// Button buttonText
        /// </summary>
        proto.IButtonText buttonText { get; set; }

        /// <summary>
        /// Button type
        /// </summary>
        proto.Button.ButtonType type { get; set; }

        /// <summary>
        /// Button nativeFlowInfo
        /// </summary>
        proto.INativeFlowInfo nativeFlowInfo { get; set; }
    }

    /// <summary>
    /// Represents a Button.
    /// </summary>
    class Button : IButton
    {
        /// <summary>
        /// Constructs a new Button.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Button(proto.IButton properties = null)
        {
        }

        /// <summary>
        /// Button buttonId.
        /// </summary>
        public string buttonId { get; set; }
        /// <summary>
        /// Button buttonText.
        /// </summary>
        public proto.IButtonText buttonText { get; set; }
        /// <summary>
        /// Button type.
        /// </summary>
        public proto.Button.ButtonType type { get; set; }
        /// <summary>
        /// Button nativeFlowInfo.
        /// </summary>
        public proto.INativeFlowInfo nativeFlowInfo { get; set; }

        /// <summary>
        /// Creates a new Button instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Button instance
        /// </returns>
        public static proto.Button create(proto.IButton properties = null);
        /// <summary>
        /// Encodes the specified Button message. Does not implicitly {@link proto.Button.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Button message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Button message, length delimited. Does not implicitly {@link proto.Button.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Button message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IButton message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Button message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Button
        /// </returns>
        public static proto.Button decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Button message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Button
        /// </returns>
        public static proto.Button decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Button message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Button message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Button
        /// </returns>
        public static proto.Button fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Button message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Button
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Button message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Button to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ButtonsMessage.
    /// </summary>
    interface IButtonsMessage
    {
        /// <summary>
        /// ButtonsMessage contentText
        /// </summary>
        string contentText { get; set; }

        /// <summary>
        /// ButtonsMessage footerText
        /// </summary>
        string footerText { get; set; }

        /// <summary>
        /// ButtonsMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// ButtonsMessage buttons
        /// </summary>
        List<proto.IButton> buttons { get; set; }

        /// <summary>
        /// ButtonsMessage headerType
        /// </summary>
        proto.ButtonsMessage.ButtonsMessageHeaderType headerType { get; set; }

        /// <summary>
        /// ButtonsMessage text
        /// </summary>
        string text { get; set; }

        /// <summary>
        /// ButtonsMessage documentMessage
        /// </summary>
        proto.IDocumentMessage documentMessage { get; set; }

        /// <summary>
        /// ButtonsMessage imageMessage
        /// </summary>
        proto.IImageMessage imageMessage { get; set; }

        /// <summary>
        /// ButtonsMessage videoMessage
        /// </summary>
        proto.IVideoMessage videoMessage { get; set; }

        /// <summary>
        /// ButtonsMessage locationMessage
        /// </summary>
        proto.ILocationMessage locationMessage { get; set; }
    }

    /// <summary>
    /// Represents a ButtonsMessage.
    /// </summary>
    class ButtonsMessage : IButtonsMessage
    {
        /// <summary>
        /// Constructs a new ButtonsMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ButtonsMessage(proto.IButtonsMessage properties = null)
        {
        }

        /// <summary>
        /// ButtonsMessage contentText.
        /// </summary>
        public string contentText { get; set; }
        /// <summary>
        /// ButtonsMessage footerText.
        /// </summary>
        public string footerText { get; set; }
        /// <summary>
        /// ButtonsMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// ButtonsMessage buttons.
        /// </summary>
        public List<proto.IButton> buttons { get; set; }
        /// <summary>
        /// ButtonsMessage headerType.
        /// </summary>
        public proto.ButtonsMessage.ButtonsMessageHeaderType headerType { get; set; }
        /// <summary>
        /// ButtonsMessage text.
        /// </summary>
        public string text { get; set; }
        /// <summary>
        /// ButtonsMessage documentMessage.
        /// </summary>
        public proto.IDocumentMessage documentMessage { get; set; }
        /// <summary>
        /// ButtonsMessage imageMessage.
        /// </summary>
        public proto.IImageMessage imageMessage { get; set; }
        /// <summary>
        /// ButtonsMessage videoMessage.
        /// </summary>
        public proto.IVideoMessage videoMessage { get; set; }
        /// <summary>
        /// ButtonsMessage locationMessage.
        /// </summary>
        public proto.ILocationMessage locationMessage { get; set; }
        /// <summary>
        /// ButtonsMessage header.
        /// </summary>
        public string /*text*/ header { get; set; }

        /// <summary>
        /// Creates a new ButtonsMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ButtonsMessage instance
        /// </returns>
        public static proto.ButtonsMessage create(proto.IButtonsMessage properties = null);
        /// <summary>
        /// Encodes the specified ButtonsMessage message. Does not implicitly {@link proto.ButtonsMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonsMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IButtonsMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ButtonsMessage message, length delimited. Does not implicitly {@link proto.ButtonsMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonsMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IButtonsMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ButtonsMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ButtonsMessage
        /// </returns>
        public static proto.ButtonsMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ButtonsMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ButtonsMessage
        /// </returns>
        public static proto.ButtonsMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ButtonsMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ButtonsMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ButtonsMessage
        /// </returns>
        public static proto.ButtonsMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ButtonsMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ButtonsMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ButtonsMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ButtonsMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ButtonsResponseMessage.
    /// </summary>
    interface IButtonsResponseMessage
    {
        /// <summary>
        /// ButtonsResponseMessage selectedButtonId
        /// </summary>
        string selectedButtonId { get; set; }

        /// <summary>
        /// ButtonsResponseMessage contextInfo
        /// </summary>
        proto.IContextInfo contextInfo { get; set; }

        /// <summary>
        /// ButtonsResponseMessage type
        /// </summary>
        proto.ButtonsResponseMessage.ButtonsResponseMessageType type { get; set; }

        /// <summary>
        /// ButtonsResponseMessage selectedDisplayText
        /// </summary>
        string selectedDisplayText { get; set; }
    }

    /// <summary>
    /// Represents a ButtonsResponseMessage.
    /// </summary>
    class ButtonsResponseMessage : IButtonsResponseMessage
    {
        /// <summary>
        /// Constructs a new ButtonsResponseMessage.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ButtonsResponseMessage(proto.IButtonsResponseMessage properties = null)
        {
        }

        /// <summary>
        /// ButtonsResponseMessage selectedButtonId.
        /// </summary>
        public string selectedButtonId { get; set; }
        /// <summary>
        /// ButtonsResponseMessage contextInfo.
        /// </summary>
        public proto.IContextInfo contextInfo { get; set; }
        /// <summary>
        /// ButtonsResponseMessage type.
        /// </summary>
        public proto.ButtonsResponseMessage.ButtonsResponseMessageType type { get; set; }
        /// <summary>
        /// ButtonsResponseMessage selectedDisplayText.
        /// </summary>
        public string selectedDisplayText { get; set; }
        /// <summary>
        /// ButtonsResponseMessage response.
        /// </summary>
        public string /*selectedDisplayText*/ response { get; set; }

        /// <summary>
        /// Creates a new ButtonsResponseMessage instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ButtonsResponseMessage instance
        /// </returns>
        public static proto.ButtonsResponseMessage create(proto.IButtonsResponseMessage properties = null);
        /// <summary>
        /// Encodes the specified ButtonsResponseMessage message. Does not implicitly {@link proto.ButtonsResponseMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonsResponseMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IButtonsResponseMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ButtonsResponseMessage message, length delimited. Does not implicitly {@link proto.ButtonsResponseMessage.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ButtonsResponseMessage message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IButtonsResponseMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ButtonsResponseMessage message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ButtonsResponseMessage
        /// </returns>
        public static proto.ButtonsResponseMessage decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ButtonsResponseMessage message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ButtonsResponseMessage
        /// </returns>
        public static proto.ButtonsResponseMessage decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ButtonsResponseMessage message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ButtonsResponseMessage message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ButtonsResponseMessage
        /// </returns>
        public static proto.ButtonsResponseMessage fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ButtonsResponseMessage message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ButtonsResponseMessage
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ButtonsResponseMessage message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ButtonsResponseMessage to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a Message.
    /// </summary>
    interface IMessage
    {
        /// <summary>
        /// Message conversation
        /// </summary>
        string conversation { get; set; }

        /// <summary>
        /// Message senderKeyDistributionMessage
        /// </summary>
        proto.ISenderKeyDistributionMessage senderKeyDistributionMessage { get; set; }

        /// <summary>
        /// Message imageMessage
        /// </summary>
        proto.IImageMessage imageMessage { get; set; }

        /// <summary>
        /// Message contactMessage
        /// </summary>
        proto.IContactMessage contactMessage { get; set; }

        /// <summary>
        /// Message locationMessage
        /// </summary>
        proto.ILocationMessage locationMessage { get; set; }

        /// <summary>
        /// Message extendedTextMessage
        /// </summary>
        proto.IExtendedTextMessage extendedTextMessage { get; set; }

        /// <summary>
        /// Message documentMessage
        /// </summary>
        proto.IDocumentMessage documentMessage { get; set; }

        /// <summary>
        /// Message audioMessage
        /// </summary>
        proto.IAudioMessage audioMessage { get; set; }

        /// <summary>
        /// Message videoMessage
        /// </summary>
        proto.IVideoMessage videoMessage { get; set; }

        /// <summary>
        /// Message call
        /// </summary>
        proto.ICall call { get; set; }

        /// <summary>
        /// Message chat
        /// </summary>
        proto.IChat chat { get; set; }

        /// <summary>
        /// Message protocolMessage
        /// </summary>
        proto.IProtocolMessage protocolMessage { get; set; }

        /// <summary>
        /// Message contactsArrayMessage
        /// </summary>
        proto.IContactsArrayMessage contactsArrayMessage { get; set; }

        /// <summary>
        /// Message highlyStructuredMessage
        /// </summary>
        proto.IHighlyStructuredMessage highlyStructuredMessage { get; set; }

        /// <summary>
        /// Message fastRatchetKeySenderKeyDistributionMessage
        /// </summary>
        proto.ISenderKeyDistributionMessage fastRatchetKeySenderKeyDistributionMessage { get; set; }

        /// <summary>
        /// Message sendPaymentMessage
        /// </summary>
        proto.ISendPaymentMessage sendPaymentMessage { get; set; }

        /// <summary>
        /// Message liveLocationMessage
        /// </summary>
        proto.ILiveLocationMessage liveLocationMessage { get; set; }

        /// <summary>
        /// Message requestPaymentMessage
        /// </summary>
        proto.IRequestPaymentMessage requestPaymentMessage { get; set; }

        /// <summary>
        /// Message declinePaymentRequestMessage
        /// </summary>
        proto.IDeclinePaymentRequestMessage declinePaymentRequestMessage { get; set; }

        /// <summary>
        /// Message cancelPaymentRequestMessage
        /// </summary>
        proto.ICancelPaymentRequestMessage cancelPaymentRequestMessage { get; set; }

        /// <summary>
        /// Message templateMessage
        /// </summary>
        proto.ITemplateMessage templateMessage { get; set; }

        /// <summary>
        /// Message stickerMessage
        /// </summary>
        proto.IStickerMessage stickerMessage { get; set; }

        /// <summary>
        /// Message groupInviteMessage
        /// </summary>
        proto.IGroupInviteMessage groupInviteMessage { get; set; }

        /// <summary>
        /// Message templateButtonReplyMessage
        /// </summary>
        proto.ITemplateButtonReplyMessage templateButtonReplyMessage { get; set; }

        /// <summary>
        /// Message productMessage
        /// </summary>
        proto.IProductMessage productMessage { get; set; }

        /// <summary>
        /// Message deviceSentMessage
        /// </summary>
        proto.IDeviceSentMessage deviceSentMessage { get; set; }

        /// <summary>
        /// Message messageContextInfo
        /// </summary>
        proto.IMessageContextInfo messageContextInfo { get; set; }

        /// <summary>
        /// Message listMessage
        /// </summary>
        proto.IListMessage listMessage { get; set; }

        /// <summary>
        /// Message viewOnceMessage
        /// </summary>
        proto.IFutureProofMessage viewOnceMessage { get; set; }

        /// <summary>
        /// Message orderMessage
        /// </summary>
        proto.IOrderMessage orderMessage { get; set; }

        /// <summary>
        /// Message listResponseMessage
        /// </summary>
        proto.IListResponseMessage listResponseMessage { get; set; }

        /// <summary>
        /// Message ephemeralMessage
        /// </summary>
        proto.IFutureProofMessage ephemeralMessage { get; set; }

        /// <summary>
        /// Message invoiceMessage
        /// </summary>
        proto.IInvoiceMessage invoiceMessage { get; set; }

        /// <summary>
        /// Message buttonsMessage
        /// </summary>
        proto.IButtonsMessage buttonsMessage { get; set; }

        /// <summary>
        /// Message buttonsResponseMessage
        /// </summary>
        proto.IButtonsResponseMessage buttonsResponseMessage { get; set; }

        /// <summary>
        /// Message paymentInviteMessage
        /// </summary>
        proto.IPaymentInviteMessage paymentInviteMessage { get; set; }
    }

    /// <summary>
    /// Represents a Message.
    /// </summary>
    class Message : IMessage
    {
        /// <summary>
        /// Constructs a new Message.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public Message(proto.IMessage properties = null)
        {
        }

        /// <summary>
        /// Message conversation.
        /// </summary>
        public string conversation { get; set; }
        /// <summary>
        /// Message senderKeyDistributionMessage.
        /// </summary>
        public proto.ISenderKeyDistributionMessage senderKeyDistributionMessage { get; set; }
        /// <summary>
        /// Message imageMessage.
        /// </summary>
        public proto.IImageMessage imageMessage { get; set; }
        /// <summary>
        /// Message contactMessage.
        /// </summary>
        public proto.IContactMessage contactMessage { get; set; }
        /// <summary>
        /// Message locationMessage.
        /// </summary>
        public proto.ILocationMessage locationMessage { get; set; }
        /// <summary>
        /// Message extendedTextMessage.
        /// </summary>
        public proto.IExtendedTextMessage extendedTextMessage { get; set; }
        /// <summary>
        /// Message documentMessage.
        /// </summary>
        public proto.IDocumentMessage documentMessage { get; set; }
        /// <summary>
        /// Message audioMessage.
        /// </summary>
        public proto.IAudioMessage audioMessage { get; set; }
        /// <summary>
        /// Message videoMessage.
        /// </summary>
        public proto.IVideoMessage videoMessage { get; set; }
        /// <summary>
        /// Message call.
        /// </summary>
        public proto.ICall call { get; set; }
        /// <summary>
        /// Message chat.
        /// </summary>
        public proto.IChat chat { get; set; }
        /// <summary>
        /// Message protocolMessage.
        /// </summary>
        public proto.IProtocolMessage protocolMessage { get; set; }
        /// <summary>
        /// Message contactsArrayMessage.
        /// </summary>
        public proto.IContactsArrayMessage contactsArrayMessage { get; set; }
        /// <summary>
        /// Message highlyStructuredMessage.
        /// </summary>
        public proto.IHighlyStructuredMessage highlyStructuredMessage { get; set; }
        /// <summary>
        /// Message fastRatchetKeySenderKeyDistributionMessage.
        /// </summary>
        public proto.ISenderKeyDistributionMessage fastRatchetKeySenderKeyDistributionMessage { get; set; }
        /// <summary>
        /// Message sendPaymentMessage.
        /// </summary>
        public proto.ISendPaymentMessage sendPaymentMessage { get; set; }
        /// <summary>
        /// Message liveLocationMessage.
        /// </summary>
        public proto.ILiveLocationMessage liveLocationMessage { get; set; }
        /// <summary>
        /// Message requestPaymentMessage.
        /// </summary>
        public proto.IRequestPaymentMessage requestPaymentMessage { get; set; }
        /// <summary>
        /// Message declinePaymentRequestMessage.
        /// </summary>
        public proto.IDeclinePaymentRequestMessage declinePaymentRequestMessage { get; set; }
        /// <summary>
        /// Message cancelPaymentRequestMessage.
        /// </summary>
        public proto.ICancelPaymentRequestMessage cancelPaymentRequestMessage { get; set; }
        /// <summary>
        /// Message templateMessage.
        /// </summary>
        public proto.ITemplateMessage templateMessage { get; set; }
        /// <summary>
        /// Message stickerMessage.
        /// </summary>
        public proto.IStickerMessage stickerMessage { get; set; }
        /// <summary>
        /// Message groupInviteMessage.
        /// </summary>
        public proto.IGroupInviteMessage groupInviteMessage { get; set; }
        /// <summary>
        /// Message templateButtonReplyMessage.
        /// </summary>
        public proto.ITemplateButtonReplyMessage templateButtonReplyMessage { get; set; }
        /// <summary>
        /// Message productMessage.
        /// </summary>
        public proto.IProductMessage productMessage { get; set; }
        /// <summary>
        /// Message deviceSentMessage.
        /// </summary>
        public proto.IDeviceSentMessage deviceSentMessage { get; set; }
        /// <summary>
        /// Message messageContextInfo.
        /// </summary>
        public proto.IMessageContextInfo messageContextInfo { get; set; }
        /// <summary>
        /// Message listMessage.
        /// </summary>
        public proto.IListMessage listMessage { get; set; }
        /// <summary>
        /// Message viewOnceMessage.
        /// </summary>
        public proto.IFutureProofMessage viewOnceMessage { get; set; }
        /// <summary>
        /// Message orderMessage.
        /// </summary>
        public proto.IOrderMessage orderMessage { get; set; }
        /// <summary>
        /// Message listResponseMessage.
        /// </summary>
        public proto.IListResponseMessage listResponseMessage { get; set; }
        /// <summary>
        /// Message ephemeralMessage.
        /// </summary>
        public proto.IFutureProofMessage ephemeralMessage { get; set; }
        /// <summary>
        /// Message invoiceMessage.
        /// </summary>
        public proto.IInvoiceMessage invoiceMessage { get; set; }
        /// <summary>
        /// Message buttonsMessage.
        /// </summary>
        public proto.IButtonsMessage buttonsMessage { get; set; }
        /// <summary>
        /// Message buttonsResponseMessage.
        /// </summary>
        public proto.IButtonsResponseMessage buttonsResponseMessage { get; set; }
        /// <summary>
        /// Message paymentInviteMessage.
        /// </summary>
        public proto.IPaymentInviteMessage paymentInviteMessage { get; set; }

        /// <summary>
        /// Creates a new Message instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// Message instance
        /// </returns>
        public static proto.Message create(proto.IMessage properties = null);
        /// <summary>
        /// Encodes the specified Message message. Does not implicitly {@link proto.Message.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Message message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified Message message, length delimited. Does not implicitly {@link proto.Message.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// Message message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMessage message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a Message message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// Message
        /// </returns>
        public static proto.Message decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a Message message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// Message
        /// </returns>
        public static proto.Message decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a Message message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a Message message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// Message
        /// </returns>
        public static proto.Message fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a Message message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// Message
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.Message message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this Message to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a CompanionProps.
    /// </summary>
    interface ICompanionProps
    {
        /// <summary>
        /// CompanionProps os
        /// </summary>
        string os { get; set; }

        /// <summary>
        /// CompanionProps version
        /// </summary>
        proto.IAppVersion version { get; set; }

        /// <summary>
        /// CompanionProps platformType
        /// </summary>
        proto.CompanionProps.CompanionPropsPlatformType platformType { get; set; }

        /// <summary>
        /// CompanionProps requireFullSync
        /// </summary>
        bool? requireFullSync { get; set; }
    }

    /// <summary>
    /// Represents a CompanionProps.
    /// </summary>
    class CompanionProps : ICompanionProps
    {
        /// <summary>
        /// Constructs a new CompanionProps.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public CompanionProps(proto.ICompanionProps properties = null)
        {
        }

        /// <summary>
        /// CompanionProps os.
        /// </summary>
        public string os { get; set; }
        /// <summary>
        /// CompanionProps version.
        /// </summary>
        public proto.IAppVersion version { get; set; }
        /// <summary>
        /// CompanionProps platformType.
        /// </summary>
        public proto.CompanionProps.CompanionPropsPlatformType platformType { get; set; }
        /// <summary>
        /// CompanionProps requireFullSync.
        /// </summary>
        public bool requireFullSync { get; set; }

        /// <summary>
        /// Creates a new CompanionProps instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// CompanionProps instance
        /// </returns>
        public static proto.CompanionProps create(proto.ICompanionProps properties = null);
        /// <summary>
        /// Encodes the specified CompanionProps message. Does not implicitly {@link proto.CompanionProps.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CompanionProps message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.ICompanionProps message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified CompanionProps message, length delimited. Does not implicitly {@link proto.CompanionProps.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// CompanionProps message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.ICompanionProps message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a CompanionProps message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// CompanionProps
        /// </returns>
        public static proto.CompanionProps decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a CompanionProps message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// CompanionProps
        /// </returns>
        public static proto.CompanionProps decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a CompanionProps message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a CompanionProps message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// CompanionProps
        /// </returns>
        public static proto.CompanionProps fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a CompanionProps message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// CompanionProps
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.CompanionProps message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this CompanionProps to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ADVSignedDeviceIdentityHMAC.
    /// </summary>
    interface IADVSignedDeviceIdentityHMAC
    {
        /// <summary>
        /// ADVSignedDeviceIdentityHMAC details
        /// </summary>
        Uint8Array details { get; set; }

        /// <summary>
        /// ADVSignedDeviceIdentityHMAC hmac
        /// </summary>
        Uint8Array hmac { get; set; }
    }

    /// <summary>
    /// Represents a ADVSignedDeviceIdentityHMAC.
    /// </summary>
    class ADVSignedDeviceIdentityHMAC : IADVSignedDeviceIdentityHMAC
    {
        /// <summary>
        /// Constructs a new ADVSignedDeviceIdentityHMAC.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ADVSignedDeviceIdentityHMAC(proto.IADVSignedDeviceIdentityHMAC properties = null)
        {
        }

        /// <summary>
        /// ADVSignedDeviceIdentityHMAC details.
        /// </summary>
        public Uint8Array details { get; set; }
        /// <summary>
        /// ADVSignedDeviceIdentityHMAC hmac.
        /// </summary>
        public Uint8Array hmac { get; set; }

        /// <summary>
        /// Creates a new ADVSignedDeviceIdentityHMAC instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentityHMAC instance
        /// </returns>
        public static proto.ADVSignedDeviceIdentityHMAC create(proto.IADVSignedDeviceIdentityHMAC properties = null);
        /// <summary>
        /// Encodes the specified ADVSignedDeviceIdentityHMAC message. Does not implicitly {@link proto.ADVSignedDeviceIdentityHMAC.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentityHMAC message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IADVSignedDeviceIdentityHMAC message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ADVSignedDeviceIdentityHMAC message, length delimited. Does not implicitly {@link proto.ADVSignedDeviceIdentityHMAC.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentityHMAC message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IADVSignedDeviceIdentityHMAC message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ADVSignedDeviceIdentityHMAC message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentityHMAC
        /// </returns>
        public static proto.ADVSignedDeviceIdentityHMAC decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ADVSignedDeviceIdentityHMAC message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentityHMAC
        /// </returns>
        public static proto.ADVSignedDeviceIdentityHMAC decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ADVSignedDeviceIdentityHMAC message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ADVSignedDeviceIdentityHMAC message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentityHMAC
        /// </returns>
        public static proto.ADVSignedDeviceIdentityHMAC fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ADVSignedDeviceIdentityHMAC message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentityHMAC
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ADVSignedDeviceIdentityHMAC message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ADVSignedDeviceIdentityHMAC to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ADVSignedDeviceIdentity.
    /// </summary>
    interface IADVSignedDeviceIdentity
    {
        /// <summary>
        /// ADVSignedDeviceIdentity details
        /// </summary>
        Uint8Array details { get; set; }

        /// <summary>
        /// ADVSignedDeviceIdentity accountSignatureKey
        /// </summary>
        Uint8Array accountSignatureKey { get; set; }

        /// <summary>
        /// ADVSignedDeviceIdentity accountSignature
        /// </summary>
        Uint8Array accountSignature { get; set; }

        /// <summary>
        /// ADVSignedDeviceIdentity deviceSignature
        /// </summary>
        Uint8Array deviceSignature { get; set; }
    }

    /// <summary>
    /// Represents a ADVSignedDeviceIdentity.
    /// </summary>
    class ADVSignedDeviceIdentity : IADVSignedDeviceIdentity
    {
        /// <summary>
        /// Constructs a new ADVSignedDeviceIdentity.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ADVSignedDeviceIdentity(proto.IADVSignedDeviceIdentity properties = null)
        {
        }

        /// <summary>
        /// ADVSignedDeviceIdentity details.
        /// </summary>
        public Uint8Array details { get; set; }
        /// <summary>
        /// ADVSignedDeviceIdentity accountSignatureKey.
        /// </summary>
        public Uint8Array accountSignatureKey { get; set; }
        /// <summary>
        /// ADVSignedDeviceIdentity accountSignature.
        /// </summary>
        public Uint8Array accountSignature { get; set; }
        /// <summary>
        /// ADVSignedDeviceIdentity deviceSignature.
        /// </summary>
        public Uint8Array deviceSignature { get; set; }

        /// <summary>
        /// Creates a new ADVSignedDeviceIdentity instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentity instance
        /// </returns>
        public static proto.ADVSignedDeviceIdentity create(proto.IADVSignedDeviceIdentity properties = null);
        /// <summary>
        /// Encodes the specified ADVSignedDeviceIdentity message. Does not implicitly {@link proto.ADVSignedDeviceIdentity.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentity message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IADVSignedDeviceIdentity message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ADVSignedDeviceIdentity message, length delimited. Does not implicitly {@link proto.ADVSignedDeviceIdentity.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentity message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IADVSignedDeviceIdentity message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ADVSignedDeviceIdentity message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentity
        /// </returns>
        public static proto.ADVSignedDeviceIdentity decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ADVSignedDeviceIdentity message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentity
        /// </returns>
        public static proto.ADVSignedDeviceIdentity decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ADVSignedDeviceIdentity message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ADVSignedDeviceIdentity message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ADVSignedDeviceIdentity
        /// </returns>
        public static proto.ADVSignedDeviceIdentity fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ADVSignedDeviceIdentity message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedDeviceIdentity
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ADVSignedDeviceIdentity message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ADVSignedDeviceIdentity to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ADVDeviceIdentity.
    /// </summary>
    interface IADVDeviceIdentity
    {
        /// <summary>
        /// ADVDeviceIdentity rawId
        /// </summary>
        double? rawId { get; set; }

        /// <summary>
        /// ADVDeviceIdentity timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }

        /// <summary>
        /// ADVDeviceIdentity keyIndex
        /// </summary>
        double? keyIndex { get; set; }
    }

    /// <summary>
    /// Represents a ADVDeviceIdentity.
    /// </summary>
    class ADVDeviceIdentity : IADVDeviceIdentity
    {
        /// <summary>
        /// Constructs a new ADVDeviceIdentity.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ADVDeviceIdentity(proto.IADVDeviceIdentity properties = null)
        {
        }

        /// <summary>
        /// ADVDeviceIdentity rawId.
        /// </summary>
        public double rawId { get; set; }
        /// <summary>
        /// ADVDeviceIdentity timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }
        /// <summary>
        /// ADVDeviceIdentity keyIndex.
        /// </summary>
        public double keyIndex { get; set; }

        /// <summary>
        /// Creates a new ADVDeviceIdentity instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ADVDeviceIdentity instance
        /// </returns>
        public static proto.ADVDeviceIdentity create(proto.IADVDeviceIdentity properties = null);
        /// <summary>
        /// Encodes the specified ADVDeviceIdentity message. Does not implicitly {@link proto.ADVDeviceIdentity.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVDeviceIdentity message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IADVDeviceIdentity message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ADVDeviceIdentity message, length delimited. Does not implicitly {@link proto.ADVDeviceIdentity.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVDeviceIdentity message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IADVDeviceIdentity message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ADVDeviceIdentity message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ADVDeviceIdentity
        /// </returns>
        public static proto.ADVDeviceIdentity decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ADVDeviceIdentity message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ADVDeviceIdentity
        /// </returns>
        public static proto.ADVDeviceIdentity decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ADVDeviceIdentity message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ADVDeviceIdentity message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ADVDeviceIdentity
        /// </returns>
        public static proto.ADVDeviceIdentity fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ADVDeviceIdentity message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ADVDeviceIdentity
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ADVDeviceIdentity message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ADVDeviceIdentity to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ADVSignedKeyIndexList.
    /// </summary>
    interface IADVSignedKeyIndexList
    {
        /// <summary>
        /// ADVSignedKeyIndexList details
        /// </summary>
        Uint8Array details { get; set; }

        /// <summary>
        /// ADVSignedKeyIndexList accountSignature
        /// </summary>
        Uint8Array accountSignature { get; set; }
    }

    /// <summary>
    /// Represents a ADVSignedKeyIndexList.
    /// </summary>
    class ADVSignedKeyIndexList : IADVSignedKeyIndexList
    {
        /// <summary>
        /// Constructs a new ADVSignedKeyIndexList.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ADVSignedKeyIndexList(proto.IADVSignedKeyIndexList properties = null)
        {
        }

        /// <summary>
        /// ADVSignedKeyIndexList details.
        /// </summary>
        public Uint8Array details { get; set; }
        /// <summary>
        /// ADVSignedKeyIndexList accountSignature.
        /// </summary>
        public Uint8Array accountSignature { get; set; }

        /// <summary>
        /// Creates a new ADVSignedKeyIndexList instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ADVSignedKeyIndexList instance
        /// </returns>
        public static proto.ADVSignedKeyIndexList create(proto.IADVSignedKeyIndexList properties = null);
        /// <summary>
        /// Encodes the specified ADVSignedKeyIndexList message. Does not implicitly {@link proto.ADVSignedKeyIndexList.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedKeyIndexList message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IADVSignedKeyIndexList message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ADVSignedKeyIndexList message, length delimited. Does not implicitly {@link proto.ADVSignedKeyIndexList.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedKeyIndexList message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IADVSignedKeyIndexList message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ADVSignedKeyIndexList message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ADVSignedKeyIndexList
        /// </returns>
        public static proto.ADVSignedKeyIndexList decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ADVSignedKeyIndexList message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ADVSignedKeyIndexList
        /// </returns>
        public static proto.ADVSignedKeyIndexList decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ADVSignedKeyIndexList message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ADVSignedKeyIndexList message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ADVSignedKeyIndexList
        /// </returns>
        public static proto.ADVSignedKeyIndexList fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ADVSignedKeyIndexList message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ADVSignedKeyIndexList
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ADVSignedKeyIndexList message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ADVSignedKeyIndexList to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a ADVKeyIndexList.
    /// </summary>
    interface IADVKeyIndexList
    {
        /// <summary>
        /// ADVKeyIndexList rawId
        /// </summary>
        double? rawId { get; set; }

        /// <summary>
        /// ADVKeyIndexList timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }

        /// <summary>
        /// ADVKeyIndexList currentIndex
        /// </summary>
        double? currentIndex { get; set; }

        /// <summary>
        /// ADVKeyIndexList validIndexes
        /// </summary>
        List<double> validIndexes { get; set; }
    }

    /// <summary>
    /// Represents a ADVKeyIndexList.
    /// </summary>
    class ADVKeyIndexList : IADVKeyIndexList
    {
        /// <summary>
        /// Constructs a new ADVKeyIndexList.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public ADVKeyIndexList(proto.IADVKeyIndexList properties = null)
        {
        }

        /// <summary>
        /// ADVKeyIndexList rawId.
        /// </summary>
        public double rawId { get; set; }
        /// <summary>
        /// ADVKeyIndexList timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }
        /// <summary>
        /// ADVKeyIndexList currentIndex.
        /// </summary>
        public double currentIndex { get; set; }
        /// <summary>
        /// ADVKeyIndexList validIndexes.
        /// </summary>
        public List<double> validIndexes { get; set; }

        /// <summary>
        /// Creates a new ADVKeyIndexList instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// ADVKeyIndexList instance
        /// </returns>
        public static proto.ADVKeyIndexList create(proto.IADVKeyIndexList properties = null);
        /// <summary>
        /// Encodes the specified ADVKeyIndexList message. Does not implicitly {@link proto.ADVKeyIndexList.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVKeyIndexList message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IADVKeyIndexList message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified ADVKeyIndexList message, length delimited. Does not implicitly {@link proto.ADVKeyIndexList.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// ADVKeyIndexList message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IADVKeyIndexList message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a ADVKeyIndexList message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// ADVKeyIndexList
        /// </returns>
        public static proto.ADVKeyIndexList decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a ADVKeyIndexList message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// ADVKeyIndexList
        /// </returns>
        public static proto.ADVKeyIndexList decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a ADVKeyIndexList message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a ADVKeyIndexList message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// ADVKeyIndexList
        /// </returns>
        public static proto.ADVKeyIndexList fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a ADVKeyIndexList message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// ADVKeyIndexList
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.ADVKeyIndexList message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this ADVKeyIndexList to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MessageKey.
    /// </summary>
    interface IMessageKey
    {
        /// <summary>
        /// MessageKey remoteJid
        /// </summary>
        string remoteJid { get; set; }

        /// <summary>
        /// MessageKey fromMe
        /// </summary>
        bool? fromMe { get; set; }

        /// <summary>
        /// MessageKey id
        /// </summary>
        string id { get; set; }

        /// <summary>
        /// MessageKey participant
        /// </summary>
        string participant { get; set; }
    }

    /// <summary>
    /// Represents a MessageKey.
    /// </summary>
    class MessageKey : IMessageKey
    {
        /// <summary>
        /// Constructs a new MessageKey.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MessageKey(proto.IMessageKey properties = null)
        {
        }

        /// <summary>
        /// MessageKey remoteJid.
        /// </summary>
        public string remoteJid { get; set; }
        /// <summary>
        /// MessageKey fromMe.
        /// </summary>
        public bool fromMe { get; set; }
        /// <summary>
        /// MessageKey id.
        /// </summary>
        public string id { get; set; }
        /// <summary>
        /// MessageKey participant.
        /// </summary>
        public string participant { get; set; }

        /// <summary>
        /// Creates a new MessageKey instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MessageKey instance
        /// </returns>
        public static proto.MessageKey create(proto.IMessageKey properties = null);
        /// <summary>
        /// Encodes the specified MessageKey message. Does not implicitly {@link proto.MessageKey.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MessageKey message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMessageKey message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MessageKey message, length delimited. Does not implicitly {@link proto.MessageKey.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MessageKey message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMessageKey message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MessageKey message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MessageKey
        /// </returns>
        public static proto.MessageKey decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MessageKey message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MessageKey
        /// </returns>
        public static proto.MessageKey decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MessageKey message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MessageKey message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MessageKey
        /// </returns>
        public static proto.MessageKey fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MessageKey message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MessageKey
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MessageKey message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MessageKey to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PhotoChange.
    /// </summary>
    interface IPhotoChange
    {
        /// <summary>
        /// PhotoChange oldPhoto
        /// </summary>
        Uint8Array oldPhoto { get; set; }

        /// <summary>
        /// PhotoChange newPhoto
        /// </summary>
        Uint8Array newPhoto { get; set; }

        /// <summary>
        /// PhotoChange newPhotoId
        /// </summary>
        double? newPhotoId { get; set; }
    }

    /// <summary>
    /// Represents a PhotoChange.
    /// </summary>
    class PhotoChange : IPhotoChange
    {
        /// <summary>
        /// Constructs a new PhotoChange.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PhotoChange(proto.IPhotoChange properties = null)
        {
        }

        /// <summary>
        /// PhotoChange oldPhoto.
        /// </summary>
        public Uint8Array oldPhoto { get; set; }
        /// <summary>
        /// PhotoChange newPhoto.
        /// </summary>
        public Uint8Array newPhoto { get; set; }
        /// <summary>
        /// PhotoChange newPhotoId.
        /// </summary>
        public double newPhotoId { get; set; }

        /// <summary>
        /// Creates a new PhotoChange instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PhotoChange instance
        /// </returns>
        public static proto.PhotoChange create(proto.IPhotoChange properties = null);
        /// <summary>
        /// Encodes the specified PhotoChange message. Does not implicitly {@link proto.PhotoChange.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PhotoChange message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPhotoChange message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PhotoChange message, length delimited. Does not implicitly {@link proto.PhotoChange.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PhotoChange message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPhotoChange message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PhotoChange message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PhotoChange
        /// </returns>
        public static proto.PhotoChange decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PhotoChange message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PhotoChange
        /// </returns>
        public static proto.PhotoChange decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PhotoChange message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PhotoChange message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PhotoChange
        /// </returns>
        public static proto.PhotoChange fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PhotoChange message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PhotoChange
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PhotoChange message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PhotoChange to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a MediaData.
    /// </summary>
    interface IMediaData
    {
        /// <summary>
        /// MediaData localPath
        /// </summary>
        string localPath { get; set; }
    }

    /// <summary>
    /// Represents a MediaData.
    /// </summary>
    class MediaData : IMediaData
    {
        /// <summary>
        /// Constructs a new MediaData.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public MediaData(proto.IMediaData properties = null)
        {
        }

        /// <summary>
        /// MediaData localPath.
        /// </summary>
        public string localPath { get; set; }

        /// <summary>
        /// Creates a new MediaData instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// MediaData instance
        /// </returns>
        public static proto.MediaData create(proto.IMediaData properties = null);
        /// <summary>
        /// Encodes the specified MediaData message. Does not implicitly {@link proto.MediaData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MediaData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IMediaData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified MediaData message, length delimited. Does not implicitly {@link proto.MediaData.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// MediaData message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IMediaData message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a MediaData message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// MediaData
        /// </returns>
        public static proto.MediaData decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a MediaData message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// MediaData
        /// </returns>
        public static proto.MediaData decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a MediaData message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a MediaData message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// MediaData
        /// </returns>
        public static proto.MediaData fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a MediaData message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// MediaData
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.MediaData message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this MediaData to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a WebFeatures.
    /// </summary>
    interface IWebFeatures
    {
        /// <summary>
        /// WebFeatures labelsDisplay
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag labelsDisplay { get; set; }

        /// <summary>
        /// WebFeatures voipIndividualOutgoing
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag voipIndividualOutgoing { get; set; }

        /// <summary>
        /// WebFeatures groupsV3
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag groupsV3 { get; set; }

        /// <summary>
        /// WebFeatures groupsV3Create
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag groupsV3Create { get; set; }

        /// <summary>
        /// WebFeatures changeNumberV2
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag changeNumberV2 { get; set; }

        /// <summary>
        /// WebFeatures queryStatusV3Thumbnail
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag queryStatusV3Thumbnail { get; set; }

        /// <summary>
        /// WebFeatures liveLocations
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag liveLocations { get; set; }

        /// <summary>
        /// WebFeatures queryVname
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag queryVname { get; set; }

        /// <summary>
        /// WebFeatures voipIndividualIncoming
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag voipIndividualIncoming { get; set; }

        /// <summary>
        /// WebFeatures quickRepliesQuery
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag quickRepliesQuery { get; set; }

        /// <summary>
        /// WebFeatures payments
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag payments { get; set; }

        /// <summary>
        /// WebFeatures stickerPackQuery
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag stickerPackQuery { get; set; }

        /// <summary>
        /// WebFeatures liveLocationsFinal
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag liveLocationsFinal { get; set; }

        /// <summary>
        /// WebFeatures labelsEdit
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag labelsEdit { get; set; }

        /// <summary>
        /// WebFeatures mediaUpload
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag mediaUpload { get; set; }

        /// <summary>
        /// WebFeatures mediaUploadRichQuickReplies
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag mediaUploadRichQuickReplies { get; set; }

        /// <summary>
        /// WebFeatures vnameV2
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag vnameV2 { get; set; }

        /// <summary>
        /// WebFeatures videoPlaybackUrl
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag videoPlaybackUrl { get; set; }

        /// <summary>
        /// WebFeatures statusRanking
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag statusRanking { get; set; }

        /// <summary>
        /// WebFeatures voipIndividualVideo
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag voipIndividualVideo { get; set; }

        /// <summary>
        /// WebFeatures thirdPartyStickers
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag thirdPartyStickers { get; set; }

        /// <summary>
        /// WebFeatures frequentlyForwardedSetting
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag frequentlyForwardedSetting { get; set; }

        /// <summary>
        /// WebFeatures groupsV4JoinPermission
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag groupsV4JoinPermission { get; set; }

        /// <summary>
        /// WebFeatures recentStickers
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag recentStickers { get; set; }

        /// <summary>
        /// WebFeatures catalog
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag catalog { get; set; }

        /// <summary>
        /// WebFeatures starredStickers
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag starredStickers { get; set; }

        /// <summary>
        /// WebFeatures voipGroupCall
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag voipGroupCall { get; set; }

        /// <summary>
        /// WebFeatures templateMessage
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag templateMessage { get; set; }

        /// <summary>
        /// WebFeatures templateMessageInteractivity
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag templateMessageInteractivity { get; set; }

        /// <summary>
        /// WebFeatures ephemeralMessages
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag ephemeralMessages { get; set; }

        /// <summary>
        /// WebFeatures e2ENotificationSync
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag e2ENotificationSync { get; set; }

        /// <summary>
        /// WebFeatures recentStickersV2
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag recentStickersV2 { get; set; }

        /// <summary>
        /// WebFeatures recentStickersV3
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag recentStickersV3 { get; set; }

        /// <summary>
        /// WebFeatures userNotice
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag userNotice { get; set; }

        /// <summary>
        /// WebFeatures support
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag support { get; set; }

        /// <summary>
        /// WebFeatures groupUiiCleanup
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag groupUiiCleanup { get; set; }

        /// <summary>
        /// WebFeatures groupDogfoodingInternalOnly
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag groupDogfoodingInternalOnly { get; set; }

        /// <summary>
        /// WebFeatures settingsSync
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag settingsSync { get; set; }

        /// <summary>
        /// WebFeatures archiveV2
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag archiveV2 { get; set; }

        /// <summary>
        /// WebFeatures ephemeralAllowGroupMembers
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag ephemeralAllowGroupMembers { get; set; }

        /// <summary>
        /// WebFeatures ephemeral24HDuration
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag ephemeral24HDuration { get; set; }

        /// <summary>
        /// WebFeatures mdForceUpgrade
        /// </summary>
        proto.WebFeatures.WebFeaturesFlag mdForceUpgrade { get; set; }
    }

    /// <summary>
    /// Represents a WebFeatures.
    /// </summary>
    class WebFeatures : IWebFeatures
    {
        /// <summary>
        /// Constructs a new WebFeatures.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public WebFeatures(proto.IWebFeatures properties = null)
        {
        }

        /// <summary>
        /// WebFeatures labelsDisplay.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag labelsDisplay { get; set; }
        /// <summary>
        /// WebFeatures voipIndividualOutgoing.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag voipIndividualOutgoing { get; set; }
        /// <summary>
        /// WebFeatures groupsV3.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag groupsV3 { get; set; }
        /// <summary>
        /// WebFeatures groupsV3Create.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag groupsV3Create { get; set; }
        /// <summary>
        /// WebFeatures changeNumberV2.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag changeNumberV2 { get; set; }
        /// <summary>
        /// WebFeatures queryStatusV3Thumbnail.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag queryStatusV3Thumbnail { get; set; }
        /// <summary>
        /// WebFeatures liveLocations.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag liveLocations { get; set; }
        /// <summary>
        /// WebFeatures queryVname.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag queryVname { get; set; }
        /// <summary>
        /// WebFeatures voipIndividualIncoming.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag voipIndividualIncoming { get; set; }
        /// <summary>
        /// WebFeatures quickRepliesQuery.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag quickRepliesQuery { get; set; }
        /// <summary>
        /// WebFeatures payments.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag payments { get; set; }
        /// <summary>
        /// WebFeatures stickerPackQuery.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag stickerPackQuery { get; set; }
        /// <summary>
        /// WebFeatures liveLocationsFinal.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag liveLocationsFinal { get; set; }
        /// <summary>
        /// WebFeatures labelsEdit.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag labelsEdit { get; set; }
        /// <summary>
        /// WebFeatures mediaUpload.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag mediaUpload { get; set; }
        /// <summary>
        /// WebFeatures mediaUploadRichQuickReplies.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag mediaUploadRichQuickReplies { get; set; }
        /// <summary>
        /// WebFeatures vnameV2.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag vnameV2 { get; set; }
        /// <summary>
        /// WebFeatures videoPlaybackUrl.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag videoPlaybackUrl { get; set; }
        /// <summary>
        /// WebFeatures statusRanking.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag statusRanking { get; set; }
        /// <summary>
        /// WebFeatures voipIndividualVideo.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag voipIndividualVideo { get; set; }
        /// <summary>
        /// WebFeatures thirdPartyStickers.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag thirdPartyStickers { get; set; }
        /// <summary>
        /// WebFeatures frequentlyForwardedSetting.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag frequentlyForwardedSetting { get; set; }
        /// <summary>
        /// WebFeatures groupsV4JoinPermission.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag groupsV4JoinPermission { get; set; }
        /// <summary>
        /// WebFeatures recentStickers.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag recentStickers { get; set; }
        /// <summary>
        /// WebFeatures catalog.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag catalog { get; set; }
        /// <summary>
        /// WebFeatures starredStickers.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag starredStickers { get; set; }
        /// <summary>
        /// WebFeatures voipGroupCall.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag voipGroupCall { get; set; }
        /// <summary>
        /// WebFeatures templateMessage.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag templateMessage { get; set; }
        /// <summary>
        /// WebFeatures templateMessageInteractivity.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag templateMessageInteractivity { get; set; }
        /// <summary>
        /// WebFeatures ephemeralMessages.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag ephemeralMessages { get; set; }
        /// <summary>
        /// WebFeatures e2ENotificationSync.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag e2ENotificationSync { get; set; }
        /// <summary>
        /// WebFeatures recentStickersV2.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag recentStickersV2 { get; set; }
        /// <summary>
        /// WebFeatures recentStickersV3.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag recentStickersV3 { get; set; }
        /// <summary>
        /// WebFeatures userNotice.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag userNotice { get; set; }
        /// <summary>
        /// WebFeatures support.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag support { get; set; }
        /// <summary>
        /// WebFeatures groupUiiCleanup.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag groupUiiCleanup { get; set; }
        /// <summary>
        /// WebFeatures groupDogfoodingInternalOnly.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag groupDogfoodingInternalOnly { get; set; }
        /// <summary>
        /// WebFeatures settingsSync.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag settingsSync { get; set; }
        /// <summary>
        /// WebFeatures archiveV2.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag archiveV2 { get; set; }
        /// <summary>
        /// WebFeatures ephemeralAllowGroupMembers.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag ephemeralAllowGroupMembers { get; set; }
        /// <summary>
        /// WebFeatures ephemeral24HDuration.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag ephemeral24HDuration { get; set; }
        /// <summary>
        /// WebFeatures mdForceUpgrade.
        /// </summary>
        public proto.WebFeatures.WebFeaturesFlag mdForceUpgrade { get; set; }

        /// <summary>
        /// Creates a new WebFeatures instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// WebFeatures instance
        /// </returns>
        public static proto.WebFeatures create(proto.IWebFeatures properties = null);
        /// <summary>
        /// Encodes the specified WebFeatures message. Does not implicitly {@link proto.WebFeatures.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebFeatures message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IWebFeatures message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified WebFeatures message, length delimited. Does not implicitly {@link proto.WebFeatures.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebFeatures message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IWebFeatures message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a WebFeatures message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// WebFeatures
        /// </returns>
        public static proto.WebFeatures decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a WebFeatures message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// WebFeatures
        /// </returns>
        public static proto.WebFeatures decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a WebFeatures message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a WebFeatures message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// WebFeatures
        /// </returns>
        public static proto.WebFeatures fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a WebFeatures message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// WebFeatures
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.WebFeatures message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this WebFeatures to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a NotificationMessageInfo.
    /// </summary>
    interface INotificationMessageInfo
    {
        /// <summary>
        /// NotificationMessageInfo key
        /// </summary>
        proto.IMessageKey key { get; set; }

        /// <summary>
        /// NotificationMessageInfo message
        /// </summary>
        proto.IMessage message { get; set; }

        /// <summary>
        /// NotificationMessageInfo messageTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> messageTimestamp { get; set; }

        /// <summary>
        /// NotificationMessageInfo participant
        /// </summary>
        string participant { get; set; }
    }

    /// <summary>
    /// Represents a NotificationMessageInfo.
    /// </summary>
    class NotificationMessageInfo : INotificationMessageInfo
    {
        /// <summary>
        /// Constructs a new NotificationMessageInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public NotificationMessageInfo(proto.INotificationMessageInfo properties = null)
        {
        }

        /// <summary>
        /// NotificationMessageInfo key.
        /// </summary>
        public proto.IMessageKey key { get; set; }
        /// <summary>
        /// NotificationMessageInfo message.
        /// </summary>
        public proto.IMessage message { get; set; }
        /// <summary>
        /// NotificationMessageInfo messageTimestamp.
        /// </summary>
        public OrType<double, Long> messageTimestamp { get; set; }
        /// <summary>
        /// NotificationMessageInfo participant.
        /// </summary>
        public string participant { get; set; }

        /// <summary>
        /// Creates a new NotificationMessageInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// NotificationMessageInfo instance
        /// </returns>
        public static proto.NotificationMessageInfo create(proto.INotificationMessageInfo properties = null);
        /// <summary>
        /// Encodes the specified NotificationMessageInfo message. Does not implicitly {@link proto.NotificationMessageInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NotificationMessageInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.INotificationMessageInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified NotificationMessageInfo message, length delimited. Does not implicitly {@link proto.NotificationMessageInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// NotificationMessageInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.INotificationMessageInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a NotificationMessageInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// NotificationMessageInfo
        /// </returns>
        public static proto.NotificationMessageInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a NotificationMessageInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// NotificationMessageInfo
        /// </returns>
        public static proto.NotificationMessageInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a NotificationMessageInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a NotificationMessageInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// NotificationMessageInfo
        /// </returns>
        public static proto.NotificationMessageInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a NotificationMessageInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// NotificationMessageInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.NotificationMessageInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this NotificationMessageInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a WebNotificationsInfo.
    /// </summary>
    interface IWebNotificationsInfo
    {
        /// <summary>
        /// WebNotificationsInfo timestamp
        /// </summary>
        Nullable<OrType<double, Long>> timestamp { get; set; }

        /// <summary>
        /// WebNotificationsInfo unreadChats
        /// </summary>
        double? unreadChats { get; set; }

        /// <summary>
        /// WebNotificationsInfo notifyMessageCount
        /// </summary>
        double? notifyMessageCount { get; set; }

        /// <summary>
        /// WebNotificationsInfo notifyMessages
        /// </summary>
        List<proto.IWebMessageInfo> notifyMessages { get; set; }
    }

    /// <summary>
    /// Represents a WebNotificationsInfo.
    /// </summary>
    class WebNotificationsInfo : IWebNotificationsInfo
    {
        /// <summary>
        /// Constructs a new WebNotificationsInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public WebNotificationsInfo(proto.IWebNotificationsInfo properties = null)
        {
        }

        /// <summary>
        /// WebNotificationsInfo timestamp.
        /// </summary>
        public OrType<double, Long> timestamp { get; set; }
        /// <summary>
        /// WebNotificationsInfo unreadChats.
        /// </summary>
        public double unreadChats { get; set; }
        /// <summary>
        /// WebNotificationsInfo notifyMessageCount.
        /// </summary>
        public double notifyMessageCount { get; set; }
        /// <summary>
        /// WebNotificationsInfo notifyMessages.
        /// </summary>
        public List<proto.IWebMessageInfo> notifyMessages { get; set; }

        /// <summary>
        /// Creates a new WebNotificationsInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// WebNotificationsInfo instance
        /// </returns>
        public static proto.WebNotificationsInfo create(proto.IWebNotificationsInfo properties = null);
        /// <summary>
        /// Encodes the specified WebNotificationsInfo message. Does not implicitly {@link proto.WebNotificationsInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebNotificationsInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IWebNotificationsInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified WebNotificationsInfo message, length delimited. Does not implicitly {@link proto.WebNotificationsInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebNotificationsInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IWebNotificationsInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a WebNotificationsInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// WebNotificationsInfo
        /// </returns>
        public static proto.WebNotificationsInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a WebNotificationsInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// WebNotificationsInfo
        /// </returns>
        public static proto.WebNotificationsInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a WebNotificationsInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a WebNotificationsInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// WebNotificationsInfo
        /// </returns>
        public static proto.WebNotificationsInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a WebNotificationsInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// WebNotificationsInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.WebNotificationsInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this WebNotificationsInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a PaymentInfo.
    /// </summary>
    interface IPaymentInfo
    {
        /// <summary>
        /// PaymentInfo currencyDeprecated
        /// </summary>
        proto.PaymentInfo.PaymentInfoCurrency currencyDeprecated { get; set; }

        /// <summary>
        /// PaymentInfo amount1000
        /// </summary>
        Nullable<OrType<double, Long>> amount1000 { get; set; }

        /// <summary>
        /// PaymentInfo receiverJid
        /// </summary>
        string receiverJid { get; set; }

        /// <summary>
        /// PaymentInfo status
        /// </summary>
        proto.PaymentInfo.PaymentInfoStatus status { get; set; }

        /// <summary>
        /// PaymentInfo transactionTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> transactionTimestamp { get; set; }

        /// <summary>
        /// PaymentInfo requestMessageKey
        /// </summary>
        proto.IMessageKey requestMessageKey { get; set; }

        /// <summary>
        /// PaymentInfo expiryTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> expiryTimestamp { get; set; }

        /// <summary>
        /// PaymentInfo futureproofed
        /// </summary>
        bool? futureproofed { get; set; }

        /// <summary>
        /// PaymentInfo currency
        /// </summary>
        string currency { get; set; }

        /// <summary>
        /// PaymentInfo txnStatus
        /// </summary>
        proto.PaymentInfo.PaymentInfoTxnStatus txnStatus { get; set; }

        /// <summary>
        /// PaymentInfo useNoviFiatFormat
        /// </summary>
        bool? useNoviFiatFormat { get; set; }

        /// <summary>
        /// PaymentInfo primaryAmount
        /// </summary>
        proto.IMoney primaryAmount { get; set; }

        /// <summary>
        /// PaymentInfo exchangeAmount
        /// </summary>
        proto.IMoney exchangeAmount { get; set; }
    }

    /// <summary>
    /// Represents a PaymentInfo.
    /// </summary>
    class PaymentInfo : IPaymentInfo
    {
        /// <summary>
        /// Constructs a new PaymentInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public PaymentInfo(proto.IPaymentInfo properties = null)
        {
        }

        /// <summary>
        /// PaymentInfo currencyDeprecated.
        /// </summary>
        public proto.PaymentInfo.PaymentInfoCurrency currencyDeprecated { get; set; }
        /// <summary>
        /// PaymentInfo amount1000.
        /// </summary>
        public OrType<double, Long> amount1000 { get; set; }
        /// <summary>
        /// PaymentInfo receiverJid.
        /// </summary>
        public string receiverJid { get; set; }
        /// <summary>
        /// PaymentInfo status.
        /// </summary>
        public proto.PaymentInfo.PaymentInfoStatus status { get; set; }
        /// <summary>
        /// PaymentInfo transactionTimestamp.
        /// </summary>
        public OrType<double, Long> transactionTimestamp { get; set; }
        /// <summary>
        /// PaymentInfo requestMessageKey.
        /// </summary>
        public proto.IMessageKey requestMessageKey { get; set; }
        /// <summary>
        /// PaymentInfo expiryTimestamp.
        /// </summary>
        public OrType<double, Long> expiryTimestamp { get; set; }
        /// <summary>
        /// PaymentInfo futureproofed.
        /// </summary>
        public bool futureproofed { get; set; }
        /// <summary>
        /// PaymentInfo currency.
        /// </summary>
        public string currency { get; set; }
        /// <summary>
        /// PaymentInfo txnStatus.
        /// </summary>
        public proto.PaymentInfo.PaymentInfoTxnStatus txnStatus { get; set; }
        /// <summary>
        /// PaymentInfo useNoviFiatFormat.
        /// </summary>
        public bool useNoviFiatFormat { get; set; }
        /// <summary>
        /// PaymentInfo primaryAmount.
        /// </summary>
        public proto.IMoney primaryAmount { get; set; }
        /// <summary>
        /// PaymentInfo exchangeAmount.
        /// </summary>
        public proto.IMoney exchangeAmount { get; set; }

        /// <summary>
        /// Creates a new PaymentInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// PaymentInfo instance
        /// </returns>
        public static proto.PaymentInfo create(proto.IPaymentInfo properties = null);
        /// <summary>
        /// Encodes the specified PaymentInfo message. Does not implicitly {@link proto.PaymentInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IPaymentInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified PaymentInfo message, length delimited. Does not implicitly {@link proto.PaymentInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// PaymentInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IPaymentInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a PaymentInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// PaymentInfo
        /// </returns>
        public static proto.PaymentInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a PaymentInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// PaymentInfo
        /// </returns>
        public static proto.PaymentInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a PaymentInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a PaymentInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// PaymentInfo
        /// </returns>
        public static proto.PaymentInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a PaymentInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// PaymentInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.PaymentInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this PaymentInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }

    /// <summary>
    /// Properties of a WebMessageInfo.
    /// </summary>
    interface IWebMessageInfo
    {
        /// <summary>
        /// WebMessageInfo key
        /// </summary>
        proto.IMessageKey key { get; set; }

        /// <summary>
        /// WebMessageInfo message
        /// </summary>
        proto.IMessage message { get; set; }

        /// <summary>
        /// WebMessageInfo messageTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> messageTimestamp { get; set; }

        /// <summary>
        /// WebMessageInfo status
        /// </summary>
        proto.WebMessageInfo.WebMessageInfoStatus status { get; set; }

        /// <summary>
        /// WebMessageInfo participant
        /// </summary>
        string participant { get; set; }

        /// <summary>
        /// WebMessageInfo messageC2STimestamp
        /// </summary>
        Nullable<OrType<double, Long>> messageC2STimestamp { get; set; }

        /// <summary>
        /// WebMessageInfo ignore
        /// </summary>
        bool? ignore { get; set; }

        /// <summary>
        /// WebMessageInfo starred
        /// </summary>
        bool? starred { get; set; }

        /// <summary>
        /// WebMessageInfo broadcast
        /// </summary>
        bool? broadcast { get; set; }

        /// <summary>
        /// WebMessageInfo pushName
        /// </summary>
        string pushName { get; set; }

        /// <summary>
        /// WebMessageInfo mediaCiphertextSha256
        /// </summary>
        Uint8Array mediaCiphertextSha256 { get; set; }

        /// <summary>
        /// WebMessageInfo multicast
        /// </summary>
        bool? multicast { get; set; }

        /// <summary>
        /// WebMessageInfo urlText
        /// </summary>
        bool? urlText { get; set; }

        /// <summary>
        /// WebMessageInfo urlNumber
        /// </summary>
        bool? urlNumber { get; set; }

        /// <summary>
        /// WebMessageInfo messageStubType
        /// </summary>
        proto.WebMessageInfo.WebMessageInfoStubType messageStubType { get; set; }

        /// <summary>
        /// WebMessageInfo clearMedia
        /// </summary>
        bool? clearMedia { get; set; }

        /// <summary>
        /// WebMessageInfo messageStubParameters
        /// </summary>
        List<string> messageStubParameters { get; set; }

        /// <summary>
        /// WebMessageInfo duration
        /// </summary>
        double? duration { get; set; }

        /// <summary>
        /// WebMessageInfo labels
        /// </summary>
        List<string> labels { get; set; }

        /// <summary>
        /// WebMessageInfo paymentInfo
        /// </summary>
        proto.IPaymentInfo paymentInfo { get; set; }

        /// <summary>
        /// WebMessageInfo finalLiveLocation
        /// </summary>
        proto.ILiveLocationMessage finalLiveLocation { get; set; }

        /// <summary>
        /// WebMessageInfo quotedPaymentInfo
        /// </summary>
        proto.IPaymentInfo quotedPaymentInfo { get; set; }

        /// <summary>
        /// WebMessageInfo ephemeralStartTimestamp
        /// </summary>
        Nullable<OrType<double, Long>> ephemeralStartTimestamp { get; set; }

        /// <summary>
        /// WebMessageInfo ephemeralDuration
        /// </summary>
        double? ephemeralDuration { get; set; }

        /// <summary>
        /// WebMessageInfo ephemeralOffToOn
        /// </summary>
        bool? ephemeralOffToOn { get; set; }

        /// <summary>
        /// WebMessageInfo ephemeralOutOfSync
        /// </summary>
        bool? ephemeralOutOfSync { get; set; }

        /// <summary>
        /// WebMessageInfo bizPrivacyStatus
        /// </summary>
        proto.WebMessageInfo.WebMessageInfoBizPrivacyStatus bizPrivacyStatus { get; set; }

        /// <summary>
        /// WebMessageInfo verifiedBizName
        /// </summary>
        string verifiedBizName { get; set; }

        /// <summary>
        /// WebMessageInfo mediaData
        /// </summary>
        proto.IMediaData mediaData { get; set; }

        /// <summary>
        /// WebMessageInfo photoChange
        /// </summary>
        proto.IPhotoChange photoChange { get; set; }
    }

    /// <summary>
    /// Represents a WebMessageInfo.
    /// </summary>
    class WebMessageInfo : IWebMessageInfo
    {
        /// <summary>
        /// Constructs a new WebMessageInfo.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        public WebMessageInfo(proto.IWebMessageInfo properties = null)
        {
        }

        /// <summary>
        /// WebMessageInfo key.
        /// </summary>
        public proto.IMessageKey key { get; set; }
        /// <summary>
        /// WebMessageInfo message.
        /// </summary>
        public proto.IMessage message { get; set; }
        /// <summary>
        /// WebMessageInfo messageTimestamp.
        /// </summary>
        public OrType<double, Long> messageTimestamp { get; set; }
        /// <summary>
        /// WebMessageInfo status.
        /// </summary>
        public proto.WebMessageInfo.WebMessageInfoStatus status { get; set; }
        /// <summary>
        /// WebMessageInfo participant.
        /// </summary>
        public string participant { get; set; }
        /// <summary>
        /// WebMessageInfo messageC2STimestamp.
        /// </summary>
        public OrType<double, Long> messageC2STimestamp { get; set; }
        /// <summary>
        /// WebMessageInfo ignore.
        /// </summary>
        public bool ignore { get; set; }
        /// <summary>
        /// WebMessageInfo starred.
        /// </summary>
        public bool starred { get; set; }
        /// <summary>
        /// WebMessageInfo broadcast.
        /// </summary>
        public bool broadcast { get; set; }
        /// <summary>
        /// WebMessageInfo pushName.
        /// </summary>
        public string pushName { get; set; }
        /// <summary>
        /// WebMessageInfo mediaCiphertextSha256.
        /// </summary>
        public Uint8Array mediaCiphertextSha256 { get; set; }
        /// <summary>
        /// WebMessageInfo multicast.
        /// </summary>
        public bool multicast { get; set; }
        /// <summary>
        /// WebMessageInfo urlText.
        /// </summary>
        public bool urlText { get; set; }
        /// <summary>
        /// WebMessageInfo urlNumber.
        /// </summary>
        public bool urlNumber { get; set; }
        /// <summary>
        /// WebMessageInfo messageStubType.
        /// </summary>
        public proto.WebMessageInfo.WebMessageInfoStubType messageStubType { get; set; }
        /// <summary>
        /// WebMessageInfo clearMedia.
        /// </summary>
        public bool clearMedia { get; set; }
        /// <summary>
        /// WebMessageInfo messageStubParameters.
        /// </summary>
        public List<string> messageStubParameters { get; set; }
        /// <summary>
        /// WebMessageInfo duration.
        /// </summary>
        public double duration { get; set; }
        /// <summary>
        /// WebMessageInfo labels.
        /// </summary>
        public List<string> labels { get; set; }
        /// <summary>
        /// WebMessageInfo paymentInfo.
        /// </summary>
        public proto.IPaymentInfo paymentInfo { get; set; }
        /// <summary>
        /// WebMessageInfo finalLiveLocation.
        /// </summary>
        public proto.ILiveLocationMessage finalLiveLocation { get; set; }
        /// <summary>
        /// WebMessageInfo quotedPaymentInfo.
        /// </summary>
        public proto.IPaymentInfo quotedPaymentInfo { get; set; }
        /// <summary>
        /// WebMessageInfo ephemeralStartTimestamp.
        /// </summary>
        public OrType<double, Long> ephemeralStartTimestamp { get; set; }
        /// <summary>
        /// WebMessageInfo ephemeralDuration.
        /// </summary>
        public double ephemeralDuration { get; set; }
        /// <summary>
        /// WebMessageInfo ephemeralOffToOn.
        /// </summary>
        public bool ephemeralOffToOn { get; set; }
        /// <summary>
        /// WebMessageInfo ephemeralOutOfSync.
        /// </summary>
        public bool ephemeralOutOfSync { get; set; }
        /// <summary>
        /// WebMessageInfo bizPrivacyStatus.
        /// </summary>
        public proto.WebMessageInfo.WebMessageInfoBizPrivacyStatus bizPrivacyStatus { get; set; }
        /// <summary>
        /// WebMessageInfo verifiedBizName.
        /// </summary>
        public string verifiedBizName { get; set; }
        /// <summary>
        /// WebMessageInfo mediaData.
        /// </summary>
        public proto.IMediaData mediaData { get; set; }
        /// <summary>
        /// WebMessageInfo photoChange.
        /// </summary>
        public proto.IPhotoChange photoChange { get; set; }

        /// <summary>
        /// Creates a new WebMessageInfo instance using the specified properties.
        /// </summary>
        /// <param name = "properties">
        /// Properties to set
        /// </param>
        /// <returns>
        /// WebMessageInfo instance
        /// </returns>
        public static proto.WebMessageInfo create(proto.IWebMessageInfo properties = null);
        /// <summary>
        /// Encodes the specified WebMessageInfo message. Does not implicitly {@link proto.WebMessageInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebMessageInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encode(proto.IWebMessageInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Encodes the specified WebMessageInfo message, length delimited. Does not implicitly {@link proto.WebMessageInfo.verify|verify} messages.
        /// </summary>
        /// <param name = "message">
        /// WebMessageInfo message or plain object to encode
        /// </param>
        /// <param name = "writer">
        /// Writer to encode to
        /// </param>
        /// <returns>
        /// Writer
        /// </returns>
        public static @protobuf.Writer encodeDelimited(proto.IWebMessageInfo message, @protobuf.Writer writer = null);
        /// <summary>
        /// Decodes a WebMessageInfo message from the specified reader or buffer.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <param name = "length">
        /// Message length if known beforehand
        /// </param>
        /// <returns>
        /// WebMessageInfo
        /// </returns>
        public static proto.WebMessageInfo decode(OrType<@protobuf.Reader, Uint8Array> reader, double length = 0);
        /// <summary>
        /// Decodes a WebMessageInfo message from the specified reader or buffer, length delimited.{Error} If the payload is not a reader or valid buffer{$protobuf.util.ProtocolError} If required fields are missing
        /// </summary>
        /// <param name = "reader">
        /// Reader or buffer to decode from
        /// </param>
        /// <returns>
        /// WebMessageInfo
        /// </returns>
        public static proto.WebMessageInfo decodeDelimited(OrType<@protobuf.Reader, Uint8Array> reader);
        /// <summary>
        /// Verifies a WebMessageInfo message.
        /// </summary>
        /// <param name = "message">
        /// Plain object to verify
        /// </param>
        /// <returns>
        /// `null` if valid, otherwise the reason why it is not
        /// </returns>
        public static string verify(Dictionary<string, dynamic> message);
        /// <summary>
        /// Creates a WebMessageInfo message from a plain object. Also converts values to their respective internal types.
        /// </summary>
        /// <param name = "@object">
        /// Plain object
        /// </param>
        /// <returns>
        /// WebMessageInfo
        /// </returns>
        public static proto.WebMessageInfo fromObject(Dictionary<string, dynamic> @object);
        /// <summary>
        /// Creates a plain object from a WebMessageInfo message. Also converts values to other types if specified.
        /// </summary>
        /// <param name = "message">
        /// WebMessageInfo
        /// </param>
        /// <param name = "options">
        /// Conversion options
        /// </param>
        /// <returns>
        /// Plain object
        /// </returns>
        public static Dictionary<string, dynamic> toObject(proto.WebMessageInfo message, @protobuf.IConversionOptions options = null);
        /// <summary>
        /// Converts this WebMessageInfo to JSON.
        /// </summary>
        /// <returns>
        /// JSON object
        /// </returns>
        public Dictionary<string, dynamic> toJSON();
    }
}